{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart/chart.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/fun-chart/fun-chart.component.css","webpack:///./src/app/fun-chart/fun-chart.component.html","webpack:///./src/app/fun-chart/fun-chart.component.ts","webpack:///./src/app/fun-metric-chart/fun-metric-chart.component.css","webpack:///./src/app/fun-metric-chart/fun-metric-chart.component.html","webpack:///./src/app/fun-metric-chart/fun-metric-chart.component.ts","webpack:///./src/app/fun-table/fun-table.component.css","webpack:///./src/app/fun-table/fun-table.component.html","webpack:///./src/app/fun-table/fun-table.component.ts","webpack:///./src/app/performance/performance.component.css","webpack:///./src/app/performance/performance.component.html","webpack:///./src/app/performance/performance.component.ts","webpack:///./src/app/pipe/fun-table-filter.pipe.ts","webpack:///./src/app/services/api/api.service.ts","webpack:///./src/app/services/logger/logger.service.ts","webpack:///./src/app/services/pager/pager.service.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { PerformanceComponent } from \"./performance/performance.component\";\nimport {TestComponent} from \"./test/test.component\";\n\nconst routes: Routes = [\n  { path: 'upgrade', component: DashboardComponent },\n  { path: 'upgrade/dashboard', component: DashboardComponent },\n  { path: 'upgrade/performance', component: PerformanceComponent },\n  { path: 'upgrade/test', component: TestComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\" ng-app=\\\"qa-dashboard\\\">\\n<head>\\n    <title>QA Dashboard</title>\\n\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n\\n    <!-- css -->\\n    <!-- link href=\\\"static/css/common/bootstrap.min.css\\\"  rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\" -->\\n\\n</head>\\n<body>\\n  <h1>QA Dashboard</h1>\\n\\n<!--div class=\\\"nav-side-menu\\\" style=\\\"width: 10%\\\">\\n    <div class=\\\"brand\\\">Fungible QA</div>\\n    <i class=\\\"fa fa-bars fa-2x toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menu-content\\\"></i>\\n    <div class=\\\"menu-list\\\">\\n        <ul id=\\\"menu-content\\\" class=\\\"menu-content collapse out\\\">\\n            <li data-toggle=\\\"collapse\\\" data-target=\\\"#regression-tasks\\\">\\n                <a href=\\\"#\\\"><i class=\\\"fa fa-dashboard fa-lg\\\"></i>Regression<span class=\\\"arrow\\\"></span></a>\\n            </li>\\n            <ul class=\\\"sub-menu\\\" id=\\\"regression-tasks\\\">\\n                <li class=\\\"active\\\"><a href=\\\"/regression\\\">All Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/completed_jobs\\\">Completed Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/pending_jobs\\\">Pending Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/jenkins_jobs\\\">Jenkins Jobs</a></li>\\n                <li><a href=\\\"/regression/submit_job_page\\\">Submit Jobs</a></li>\\n            </ul>\\n            <li data-toggle=\\\"collapse\\\" data-target=\\\"#test-case\\\" class=\\\"collapsed\\\">\\n                <a href=\\\"#\\\"><i class=\\\"fa fa-globe fa-lg\\\"></i> Test-cases <span class=\\\"arrow\\\"></span></a>\\n            </li>\\n            <ul class=\\\"sub-menu collapse\\\" id=\\\"test-case\\\">\\n                <li><a href=\\\"/tcm/view_catalog_page\\\">View Catalog</a></li>\\n                <li><a href=\\\"/tcm/create_catalog_page\\\">Create Catalog</a></li>\\n            </ul>\\n        </ul>\\n    </div>\\n</div-->\\n\\n<nav class=\\\"navbar navbar-default\\\" style=\\\"background-color: #337ab7;\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\n                    data-target=\\\"#qa-dashboard-navbar\\\" aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"/\\\" style=\\\"color: white\\\">Integration</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"qa-dashboard-navbar\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li>\\n                    <a href=\\\"/upgrade/performance\\\" style=\\\"color: white;background-color: #337ab7\\\" role=\\\"button\\\">Performance</a>\\n                </li>\\n\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"/common/home\\\" style=\\\"color: white;background-color: #337ab7\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\">Regression<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/regression\\\">All Jobs</a></li>\\n                        <li><a href=\\\"/regression/completed_jobs\\\">Completed Jobs</a></li>\\n                        <li><a href=\\\"/regression/pending_jobs\\\">Pending Jobs</a></li>\\n                        <li><a href=\\\"/regression/submit_job_page\\\">Submit Job</a></li>\\n                        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n                        <li><a href=\\\"/regression/jenkins_jobs\\\">Jenkins Jobs</a></li>\\n                        <li><a href=\\\"/regression/jobs_by_tag/network-sanity\\\">Networking Sanity</a></li>\\n                        <li><a href=\\\"/metrics/atomic/Unit-Tests/UnitTestPerformance\\\">FunOS Unit-Tests</a></li>\\n                    </ul>\\n                </li>\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\" style=\\\"color: white;background-color: #337ab7\\\">Test-cases<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/tcm/releases_page\\\">Releases</a> </li>\\n                        <li><a href=\\\"/tcm/view_catalogs\\\">View Catalogs</a></li>\\n                        <li><a href=\\\"/tcm/create_catalog_page\\\">Create Catalog</a></li>\\n                    </ul>\\n                </li>\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" style=\\\"color: white;background-color: #337ab7\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\">Administration<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/metrics\\\">All</a> </li>\\n                        <li><a href=\\\"/metrics/summary\\\">Summary</a></li>\\n                        <li><a href=\\\"/initialize\\\">Initialize</a></li>\\n                    </ul>\\n                </li>\\n            </ul>\\n            <!--form class=\\\"navbar-form navbar-left\\\">\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n            </form-->\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li><a href=\\\"/common/alerts_page\\\" role=\\\"button\\\" style=\\\"color: white;background-color: #337ab7\\\">Alerts</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<div class=\\\"content\\\" ng-controller=\\\"QaDashBoardController\\\" ng-if=\\\"showCommonError\\\">\\n    <div class=\\\"alert alert-danger alert-dismissible show\\\" role=\\\"alert\\\">\\n        <strong>{{ commonErrorMessage }} </strong>&nbsp <a href=\\\"{{ commonAlertLink }}\\\">Details</a> {{ detailError }}\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" ng-click=\\\"closeCommonError()\\\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n<div class=\\\"content\\\" ng-controller=\\\"QaDashBoardController\\\" ng-if=\\\"showCommonSuccess\\\">\\n    <div class=\\\"alert alert-success alert-dismissible show\\\" role=\\\"alert\\\">\\n        <strong>{{ commonSuccessMessage }}</strong>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" ng-click=\\\"closeCommonSuccess()\\\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n</body>\\n</html>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'qadashboard';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSortModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { PerformanceComponent } from './performance/performance.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FunTableComponent } from './fun-table/fun-table.component';\nimport {ApiService} from \"./services/api/api.service\";\nimport {LoggerService} from \"./services/logger/logger.service\";\nimport { TestComponent } from './test/test.component';\nimport { FunTableFilterPipe } from './pipe/fun-table-filter.pipe';\nimport { ChartComponent } from './chart/chart.component';\nimport { FunChartComponent } from './fun-chart/fun-chart.component';\nimport { ChartModule } from 'angular-highcharts';\nimport { FunMetricChartComponent } from './fun-metric-chart/fun-metric-chart.component';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PerformanceComponent,\n    FunTableComponent,\n    TestComponent,\n    FunTableFilterPipe,\n    ChartComponent,\n    FunChartComponent,\n    FunMetricChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSortModule,\n    ChartModule,\n    AngularFontAwesomeModule,\n    FormsModule\n  ],\n\n  providers: [ApiService, LoggerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'angular-highcharts';\nimport { ApiService} from \"../services/api/api.service\";\n\n@Component({\n  selector: 'app-fun-chart',\n  template: `\n    <button (click)=\"add()\">Add Point!</button>\n    <!--div [chart]=\"chart\"></div-->\n  `\n})\nexport class ChartComponent implements OnInit {\n  ngOnInit() {\n    // this.doSomething1();\n\n  }\n  constructor(private apiService: ApiService) {\n\n  }\n\n  chart = new Chart({\n    chart: {\n      type: 'line'\n    },\n    title: {\n      text: 'Linechart'\n    },\n    credits: {\n      enabled: false\n    },\n    series: [\n      {\n        name: 'Line 1',\n        data: [1, 2, 3]\n      }\n    ]\n  });\n  doSomething1(): void {\n    console.log(\"Doing Something1\");\n    let payload = {\"metric_id\": 122, \"date_range\": [\"2018-04-01T07:00:01.000Z\", \"2018-09-13T06:59:59.765Z\"]};\n    this.apiService.post('/metrics/scores', payload).subscribe(response => {\n        console.log(response.data);\n        this.delay(1000);\n      },\n      error => {\n        console.log(error);\n        this.delay(1000);\n\n      });\n  }\n\n   async delay(ms: number) {\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=> {\n            this.add();\n        this.doSomething1();\n      console.log(\"fired\")\n    });\n}\nr() {\n   return Math.random();\n}\n\n\n  // add point to chart serie\n  add() {\n    this.chart.addPoint(Math.floor(Math.random() * 10));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  My dashboard\\n  <app-performance></app-performance>\\n  <app-test></app-test>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PerformanceComponent } from \"../performance/performance.component\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  fun-chart works!\\n</p>\\n<button (click)=\\\"add()\\\">Add Point!</button>\\n    <div [chart]=\\\"chart\\\"></div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Chart } from 'angular-highcharts';\n\n@Component({\n  selector: 'fun-chart',\n  templateUrl: './fun-chart.component.html',\n  styleUrls: ['./fun-chart.component.css']\n})\nexport class FunChartComponent implements OnInit {\n  // autoUpdate: any;\n  // charting: any;\n  // @Input() values: any[];\n  // updateChartsNow: any;\n  // showLegend: any;\n  // series: any;\n  // title: any;\n  // minimal: any;\n  // chartType: any;\n  // colors: any;\n  // width: any;\n  // height: any;\n  // xaxisTitle: any;\n  // yaxisTitle: any;\n  // pointClickCallback: any;\n  // xaxisFormatter: any;\n  // tooltipFormatter: any;\n  //\n  // genId: any = null;\n  @Input() y1Values: any[];\n  @Input() xValues: any[];\n  @Input() title: string;\n  @Input() xAxisLabel: string;\n  @Input() y1AxisLabel: string;\n  chart: any;\n\n  // @Input() xValues: any[];\n  // @Input() yValues: any[];\n\n\n  add() {\n    this.chart.addPoint(Math.floor(Math.random() * 10));\n  }\n\n  constructor() {\n  }\n\n  ngOnChanges() {\n    this.chart = new Chart({\n    chart: {\n      type: 'line',\n      width: 500,\n      height: 500\n    },\n    title: {\n      text: this.title\n    },\n    xAxis: {\n      title: {\n        text: this.xAxisLabel\n      }\n    },\n    yAxis: {\n      title: {\n        text: this.y1AxisLabel\n      }\n    },\n    credits: {\n      enabled: false\n    },\n      plotOptions: {\n      line: {\n        animation: false,\n        marker: {\n          enabled: true\n        }\n        },\n        series: {\n        animation: false\n      }\n      },\n    series: this.y1Values\n  });\n  }\n\n  ngOnInit() {\n  }\n\n  // getRandomId() {\n  //   if (!this.genId) {\n  //     let min = Math.ceil(0);\n  //     let max = Math.floor(10000);\n  //     this.genId = Math.floor(Math.random() * (max - min + 1)) + min;\n  //     return this.genId;\n  //   } else {\n  //     return this.genId;\n  //   }\n  // }\n\n}\n//\n//                 if (ctrl.charting) {\n//                     $timeout(function () {\n//                          if (ctrl.chartType === \"line-chart\") {\n//                             let series = angular.copy(ctrl.values);\n//                             let chartInfo = {\n//                                 chart: {\n//                                     height: ctrl.height,\n//                                     width: ctrl.width\n//                                 },\n//                                 title: {\n//                                     text: ctrl.title\n//                                 },\n//\n//                                 subtitle: {\n//                                     text: ''\n//                                 },\n//                                 xAxis: {\n//                                     categories: ctrl.series,\n//                                     title: {\n//                                         text: ctrl.xaxisTitle\n//                                     }\n//                                 },\n//\n//                                 yAxis: {\n//                                     title: {\n//                                         text: ctrl.yaxisTitle\n//                                     }\n//                                 },\n//                                 legend: {\n//                                     layout: 'vertical',\n//                                     align: 'right',\n//                                     verticalAlign: 'middle'\n//                                 },\n//                                 credits: {\n//                                     enabled: false\n//                                 },\n//                                 plotOptions: {\n//                                     line: {\n//                                         animation: false,\n//                                         marker: {\n//                                             enabled: true\n//                                         }\n//                                     },\n//                                     series: {\n//                                         animation: false,\n//                                         label: {\n//                                             connectorAllowed: false\n//                                         },\n//                                         point: {\n//                                             events: {\n//                                                 click: function (e) {\n//                                                     /*location.href = 'https://en.wikipedia.org/wiki/' +\n//                                                         this.options.key;*/\n//                                                     console.log(ctrl.pointClickCallback);\n//                                                     ctrl.pointClickCallback()(e.point);\n//                                                 }\n//                                             }\n//                                         }\n//                                     }\n//\n//                                 },\n//\n//                                 series: series,\n//\n//\n//                                 responsive: {\n//                                     rules: [{\n//                                         condition: {\n//                                             maxWidth: 500\n//                                         },\n//                                         chartOptions: {\n//                                             legend: {\n//                                                 layout: 'horizontal',\n//                                                 align: 'center',\n//                                                 verticalAlign: 'bottom'\n//                                             }\n//                                         }\n//                                     }]\n//                                 }\n//\n//                             };\n//                             try {\n//                                 if (ctrl.xaxisFormatter && ctrl.xaxisFormatter()()) {\n//                                     chartInfo.xAxis[\"labels\"] = {formatter: function () {\n//                                         return ctrl.xaxisFormatter()(this.value);\n//                                     }};\n//                                 }\n//\n//                                 if (ctrl.tooltipFormatter && ctrl.tooltipFormatter()()) {\n//                                     chartInfo.tooltip = {\n//                                         formatter: function () {\n//                                             return ctrl.tooltipFormatter()(this.x, this.y);\n//                                         }\n//                                     }\n//                                 }\n//\n//                                 if (ctrl.pointClickCallback && ctrl.pointClickCallback()()) {\n//                                     chartInfo.plotOptions.series[\"point\"] = {\n//                                         events: {\n//                                             click: function (e) {\n//                                                 ctrl.pointClickCallback()(e.point);\n//                                             }\n//                                         }\n//                                     }\n//                                 }\n//                             } catch (e) {\n//                                 console.log(e);\n//\n//                             }\n//\n//\n//                             Highcharts.chart(\"c-\" + $scope.genId, chartInfo);\n//                         } }, 10);\n//\n//                 }\n//             }, true);\n//\n//         ctrl.$onInit = function () {\n//\n//             //[\"Sent\", \"Received\"];\n//             $scope.xValue = 0;\n//             $scope.values = {};\n//             angular.forEach(ctrl.series, function (input) {\n//                 $scope.values[input] = [];\n//             });\n//\n//             /*$timeout($scope.repeat, 1000);*/\n//\n//\n//         };\n//\n//         $scope.repeat = function () {\n//             console.log(ctrl);\n//             $timeout($scope.repeat, 1000);\n//         }\n//\n//     }\n//             autoUpdate: '<',\n//             charting: '<',\n//             values: '<',\n//             updateChartsNow: '=',\n//             showLegend: '<',\n//             series: '<',\n//             title: '<',\n//             minimal: '<',\n//             chartType: '@',\n//             colors: '<',\n//             width: '<',\n//             height: '<',\n//             xaxisTitle: '<',\n//             yaxisTitle: '<',\n//             pointClickCallback: '&',\n//             xaxisFormatter: '&',\n//             tooltipFormatter: '&'\n//         }\n//     });\n//\n// })(window.angular);\n","module.exports = \"a {\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" />\\n<div>\\n        <div [ngSwitch]=\\\"timeMode\\\">\\n            <div *ngSwitchCase=\\\"'all'\\\">\\n                <a (click)=\\\"setTimeMode('week')\\\"> Week </a>/\\n                <a (click)=\\\"setTimeMode('month')\\\"> Month </a>/\\n                <b><u><a (click)=\\\"setTimeMode('all')\\\"> All </a></u></b>\\n            </div>\\n            <div *ngSwitchCase=\\\"'week'\\\">\\n                <b><u><a (click)=\\\"setTimeMode('week')\\\"> Week </a></u></b>/\\n                <a (click)=\\\"setTimeMode('month')\\\"> Month </a>/\\n                <a (click)=\\\"setTimeMode('all')\\\"> All </a>\\n            </div>\\n            <div *ngSwitchCase=\\\"'month'\\\">\\n                <a (click)=\\\"setTimeMode('week')\\\"> Week </a>/\\n                <b><u><a (click)=\\\"setTimeMode('month')\\\"> Month </a></u></b>/\\n                <a (click)=\\\"setTimeMode('all')\\\"> All </a>\\n            </div>\\n        </div>\\n        <!--<fun-chart values=\\\"values\\\" series=\\\"series\\\" title=\\\"$ctrl.chartName\\\" charting=\\\"charting\\\" chart-type=\\\"line-chart\\\"-->\\n               <!--width=\\\"width\\\" height=\\\"height\\\" xaxis-title=\\\"chart1XaxisTitle\\\" yaxis-title=\\\"chart1YaxisTitle\\\"-->\\n               <!--point-click-callback=\\\"pointClickCallback\\\" xaxis-formatter=\\\"xAxisFormatter\\\"-->\\n               <!--tooltip-formatter=\\\"tooltipFormatter\\\">-->\\n        <!--</fun-chart>-->\\n      <!--<fun-chart [yValues]=\\\"yValues\\\" [xValues]=\\\"xValues\\\" [title]=\\\"title\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\"></fun-chart>-->\\n  <!--<div *ngFor=\\\"let in of counter(50)\\\">-->\\n  <fun-chart [y1Values]=\\\"values\\\" [xValues]=\\\"series\\\" [title]=\\\"chartName\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [y1AxisLabel]=\\\"yAxisLabel\\\"></fun-chart>\\n  <!--</div>-->\\n    <br>\\n\\n     <b>Description:   </b><a *ngIf=\\\"!editingDescription\\\" (click)=\\\"toggleEdit()\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n    <br>\\n    <div [innerHTML]=\\\"inner.currentDescription\\\"></div>\\n    <div *ngIf=\\\"editingDescription\\\">\\n        <br>\\n        <textarea rows=\\\"4\\\" [(ngModel)]=\\\"inner.currentDescription\\\" style=\\\"min-width: 100%;\\\"></textarea>\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"submit()\\\">Submit</button>\\n        <a style=\\\"padding: 5px;\\\" (click)=\\\"toggleEdit()\\\">Cancel</a>\\n    </div>\\n</div>\\n<div *ngIf=\\\"modelName !== 'MetricContainer'\\\" style=\\\"padding-top: 10px; padding-bottom: 10px;\\\">\\n    <div>\\n    <button [attr.id]=\\\"'show_tables_' + metricId\\\" type=\\\"button\\\" class=\\\"btn arrow_btn btn-lg btn-info collapsed\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#showing_tables_' + metricId\\\"\\n            style=\\\"text-align: left; font-size: 14px; padding: 5px; padding-left: 0; border-color: black; border: 0 solid; background: white; color: black; outline: none;\\\">Show Tables</button>\\n  <div [attr.id]=\\\"'showing_tables_' + metricId\\\" class=\\\"collapse\\\">\\n      <div *ngIf=\\\"headers\\\">\\n          <!--<fun-table (nextPage)=\\\"setValues($event)\\\" [data]=\\\"data\\\">-->\\n          <!--</fun-table>-->\\n      </div>\\n      <div>\\n          <a href=\\\"{{ '#show_tables_' + metricId }}\\\" style=\\\"float:right\\\" (click)=\\\"changeClass('#showing_tables_' + metricId, '#show_tables_' + metricId)\\\">Hide Tables</a>\\n      </div>\\n      <br>\\n      <br>\\n      <div class=\\\"closed-section\\\"></div>\\n\\n      <!--<button type=\\\"button\\\" class=\\\"btn btn1 btn-lg btn-info collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#demo\\\" style=\\\"text-align: left; font-size: 14px; padding: 5px; border-color: black; border: 0px solid; width: 100%; background: white; color: black;\\\">Hide Tables</button>-->\\n  </div>\\n    </div>\\n    <div>\\n    <button [attr.id]=\\\"'configure_' + metricId\\\" type=\\\"button\\\" ng-class=\\\"after\\\" class=\\\"btn arrow_btn btn-lg btn-info collapsed\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#show_configure_' + metricId\\\"\\n            style=\\\"text-align: left; font-size: 14px; padding: 5px; padding-left: 0; border-color: black; border: 0 solid; background: white; color: black; outline: none;\\\">Configure</button>\\n  <div [attr.id]=\\\"'show_configure_' + metricId\\\" class=\\\"collapse\\\">\\n       <div class=\\\"row\\\">\\n           <!--<div class=\\\"col-lg-10 col-xl-10 pull-left\\\">-->\\n               <!--<table class=\\\"table table-nonfluid table-borderless\\\"-->\\n                      <!--ng-repeat=\\\"dataSet in previewDataSets track by $index\\\">-->\\n                   <!--<tr>-->\\n                       <!--<th>Name</th>-->\\n                       <!--<th>Field</th>-->\\n                       <!--<th>Min</th>-->\\n                       <!--<th>Max</th>-->\\n                       <!--<th>Expected</th>-->\\n                   <!--</tr>-->\\n                   <!--<tr>-->\\n                       <!--<td>-->\\n                           <!--{{ dataSet.name }}-->\\n                       <!--</td>-->\\n                       <!--<td>-->\\n                           <!--{{ dataSet.output.name }}-->\\n                       <!--</td>-->\\n                       <!--<td>-->\\n                           <!--<input type=\\\"number\\\" ng-model=\\\"dataSet.output.min\\\" ng-value=\\\"dataSet.output.min\\\"-->\\n                                  <!--style=\\\"width: 100px\\\">-->\\n                       <!--</td>-->\\n                       <!--<td><input type=\\\"number\\\" ng-model=\\\"dataSet.output.max\\\" ng-value=\\\"dataSet.output.max\\\"-->\\n                                  <!--style=\\\"width: 100px\\\"></td>-->\\n                       <!--<td><input type=\\\"number\\\" ng-model=\\\"dataSet.output.expected\\\"-->\\n                                  <!--ng-value=\\\"dataSet.output.expected\\\"-->\\n                                  <!--style=\\\"width: 100px\\\"></td>-->\\n                   <!--</tr>-->\\n               <!--</table>-->\\n               <!--<p><input type=\\\"checkbox\\\" ng-checked=\\\"negativeGradient\\\" ng-model=\\\"inner.negativeGradient\\\">&nbsp;Negative gradient</p>-->\\n               <!--<p><input type=\\\"checkbox\\\" ng-checked=\\\"leaf\\\" ng-model=\\\"inner.leaf\\\">&nbsp;Leaf</p>-->\\n           <!--</div>-->\\n       </div>\\n      <div class=\\\"row\\\">\\n          <div style=\\\"padding: 10px;\\\">\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"submit()\\\">Submit</button>\\n              <a href=\\\"{{ '#configure_' + metricId }}\\\" (click)=\\\"changeClass('#show_configure_' + metricId, '#configure_' + metricId)\\\">Cancel</a>\\n          </div>\\n      </div>\\n  </div>\\n    </div>\\n\\n    </div>\\n\"","import {Component, OnInit, Input} from '@angular/core';\nimport {ApiService} from \"../services/api/api.service\";\nimport {LoggerService} from \"../services/logger/logger.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'fun-metric-chart',\n  templateUrl: './fun-metric-chart.component.html',\n  styleUrls: ['./fun-metric-chart.component.css']\n})\nexport class FunMetricChartComponent implements OnInit {\n  status: any;\n  showingTable: boolean;\n  chartInfo: any;\n  @Input() chartName: any;\n  @Input() modelName: any;\n  headers: any;\n  allData: any;\n  metricId: any;\n  editingDescription: boolean = false;\n  inner: any = {};\n  atomic: boolean = false;\n  previewDataSets: any = null;\n  currentDescription: any;\n  waitTime: number = 0;\n  values: any;\n  charting: any;\n  width: any;\n  height: any;\n  pointClickCallback: any = null;\n  xAxisFormatter: any;\n  tooltipFormatter: any;\n  tableInfo: any;\n  buildInfo: any;\n  timeMode: string;\n  negativeGradient: boolean;\n  leaf: boolean;\n  title: any;\n  series: any;\n  filterDataSets: any;\n\n  yValues: any = [];\n  xValues: any = [];\n  chartTitle: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n\n  chart1XaxisTitle: any;\n  chart1YaxisTitle: any;\n  y1AxisTitle: any;\n\n\n  constructor(private apiService: ApiService, private loggerService: LoggerService) {\n  }\n\n  ngOnInit() {\n\n    this.yValues.push({name: 'series 1', data: [1, 2, 3, 4, 5]});\n    this.yValues.push({name: 'series 2', data: [6, 7, 8, 9, 10]});\n    this.yValues.push({name: 'series 3', data: [11, 12, 13, 14, 15]});\n    this.yValues.push({name: 'series 4', data: [16, 17, 18, 19, 20]});\n    this.yValues.push({name: 'series 5', data: [21, 22, 23, 24, 25]});\n    this.xValues.push([0, 1, 2, 3, 4]);\n    this.chartTitle = \"Funchart\";\n    this.xAxisLabel = \"Date\";\n    this.yAxisLabel = \"Range\";\n\n    this.status = \"idle\";\n    this.showingTable = false;\n    this.setDefault();\n    this.headers = null;\n    this.metricId = -1;\n    this.editingDescription = false;\n    this.inner = {};\n    this.inner.currentDescription = \"TBD\";\n    this.currentDescription = \"---\";\n\n\n    if (this.chartName) {\n      this.fetchInfo();\n    }\n\n    this.values = null;\n    this.charting = true;\n    this.xAxisFormatter = null;\n    this.tooltipFormatter = null;\n    this.buildInfo = null;\n    this.fetchBuildInfo();\n    // if (this.pointClickCallback) {\n    //   this.pointClickCallback = (point) => {\n    //     if (!$attrs.pointClickCallback) return null;\n    //     this.pointClickCallback()(point);\n    //   };\n    // }\n    this.xAxisFormatter = (value) => {\n      let s = \"Error\";\n      const monthNames = [\"null\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let r = /(\\d{4})-(\\d{2})-(\\d{2})/g;\n      let match = r.exec(value);\n\n      if (this.timeMode === \"month\") {\n        if (match) {\n          let month = parseInt(match[2]);\n          s = monthNames[month];\n        }\n      }\n      else {\n        if (match) {\n          s = match[2] + \"/\" + match[3];\n        }\n      }\n      return s;\n\n    };\n\n    this.tooltipFormatter = (x, y) => {\n      let softwareDate = \"Unknown\";\n      let hardwareVersion = \"Unknown\";\n      let sdkBranch = \"Unknown\";\n      let gitCommit = \"Unknown\";\n      let r = /(\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2})/g;\n      let match = r.exec(x);\n      let key = \"\";\n      if (match) {\n        key = match[1];\n      }\n      else {\n        let reg = /(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2})/g;\n        match = reg.exec(x);\n        if (match) {\n          key = match[1].replace('T', ' ');\n        }\n      }\n      let s = \"Error\";\n\n      if (this.buildInfo && key in this.buildInfo) {\n        softwareDate = this.buildInfo[key][\"software_date\"];\n        hardwareVersion = this.buildInfo[key][\"hardware_version\"];\n        sdkBranch = this.buildInfo[key][\"fun_sdk_branch\"];\n        s = \"<b>SDK branch:</b> \" + sdkBranch + \"<br>\";\n        s += \"<b>Software date:</b> \" + softwareDate + \"<br>\";\n        s += \"<b>Hardware version:</b> \" + hardwareVersion + \"<br>\";\n        s += \"<b>Git commit:</b> \" + this.buildInfo[key][\"git_commit\"].replace(\"https://github.com/fungible-inc/FunOS/commit/\", \"\") + \"<br>\";\n        s += \"<b>Value:</b> \" + y + \"<br>\";\n      } else {\n        s = \"<b>Value:</b> \" + y + \"<br>\";\n      }\n\n      return s;\n    };\n  }\n\n  ngOnChanges() {\n    this.setDefault();\n    this.fetchInfo();\n  }\n\n  fetchInfo() {\n    let payload = {};\n    payload[\"metric_model_name\"] = this.modelName;\n    payload[\"chart_name\"] = this.chartName;\n\n    if (!this.chartInfo) {\n      this.apiService.post(\"/metrics/chart_info\", payload).subscribe((chartInfo) => {\n        this.chartInfo = chartInfo;\n        if (this.chartInfo !== null) {\n          this.previewDataSets = this.chartInfo.data.data_sets;\n          this.currentDescription = this.chartInfo.data.description;\n          this.inner.currentDescription = this.currentDescription;\n          this.negativeGradient = !this.chartInfo.data.positive;\n          this.inner.negativeGradient = this.negativeGradient;\n          this.leaf = this.chartInfo.data.leaf;\n          this.inner.leaf = this.leaf;\n          this.status = \"idle\";\n        }\n        // let thisChartInfo = chartInfo;\n        setTimeout(() => {\n          this.fetchMetricsData(this.modelName, this.chartName, this.chartInfo, null);\n        }, this.waitTime);\n      }, error => {\n        this.loggerService.error(\"fun_metric_chart: chart_info\");\n      });\n    } else {\n      setTimeout(() => {\n        this.fetchMetricsData(this.modelName, this.chartName, this.chartInfo, null);\n      }, this.waitTime);\n    }\n\n  }\n\n  setDefault(): void {\n    this.timeMode = \"all\";\n  }\n\n  toggleEdit() {\n    this.editingDescription = !this.editingDescription;\n  }\n\n  changeClass(divId, buttonId): void {\n    let divIdClass = window.document.querySelector(divId);\n    divIdClass.removeClass('in');\n    let collapseArrow = window.document.querySelector(buttonId);\n    collapseArrow.addClass('collapsed');\n  }\n\n  cleanValue(key, value): any {\n    try {\n      if (key === \"input_date_time\") {\n        let s = \"Error\";\n        let r = /(\\d{4})-(\\d{2})-(\\d{2})/g;\n        let match = r.exec(value);\n        if (match) {\n          s = match[2] + \"/\" + match[3];\n        }\n        return s;\n      } else {\n        return value;\n      }\n    } catch (e) {\n\n    }\n\n  }\n\n  submit(): void {\n    //this.previewDataSets = this.copyChartInfo.data_sets;\n    let payload = {};\n    payload[\"metric_model_name\"] = this.modelName;\n    payload[\"chart_name\"] = this.chartName;\n    payload[\"data_sets\"] = this.previewDataSets;\n    payload[\"description\"] = this.inner.currentDescription;\n    payload[\"negative_gradient\"] = this.inner.negativeGradient;\n    payload[\"leaf\"] = this.inner.leaf;\n    this.apiService.post('/metrics/update_chart', payload).subscribe((data) => {\n      if (data) {\n        alert(\"Submitted\");\n      } else {\n        alert(\"Submission failed. Please check alerts\");\n      }\n    }, error => {\n      this.loggerService.error(\"EditChart: Submit\");\n    });\n    this.editingDescription = false;\n  }\n\n  fetchChartInfo(): any {\n    let payload = {};\n    payload[\"metric_model_name\"] = this.modelName;\n    payload[\"chart_name\"] = this.chartName;\n\n    if (!this.chartInfo) {\n      return this.apiService.post(\"/metrics/chart_info\", payload).subscribe((chartInfo) => {\n        this.chartInfo = chartInfo;\n        if (this.chartInfo !== null) {\n          this.previewDataSets = this.chartInfo.data_sets;\n          this.currentDescription = this.chartInfo.description;\n          this.inner.currentDescription = this.currentDescription;\n          this.negativeGradient = !this.chartInfo.positive;\n          this.inner.negativeGradient = this.negativeGradient;\n          this.leaf = this.chartInfo.leaf;\n          this.inner.leaf = this.leaf;\n          this.status = \"idle\";\n        }\n        return this.chartInfo;\n      }, error => {\n        this.loggerService.error(\"fun_metric_chart: chart_info\");\n      });\n    } else {\n      return this.chartInfo;\n    }\n\n  }\n\n  fetchBuildInfo(): void {\n    this.apiService.get('/regression/jenkins_job_id_maps').subscribe((data) => {\n      this.apiService.get('/regression/build_to_date_map').subscribe((data) => {\n        this.buildInfo = data;\n      }, error => {\n        this.loggerService.error(\"regression/build_to_date_map\");\n      });\n    }, error => {\n      this.loggerService.error(\"fetchBuildInfo\");\n    });\n  }\n\n  showTables(): void {\n    this.showingTable = !this.showingTable;\n  }\n\n  setTimeMode(mode): void {\n    this.timeMode = mode;\n    if (this.chartInfo) {\n      this.fetchMetricsData(this.modelName, this.chartName, this.chartInfo, this.previewDataSets); // TODO: Race condition on chartInfo\n    } else {\n      this.fetchMetricsData(this.modelName, this.chartName, null, this.previewDataSets); // TODO: Race condition on chartInfo\n    }\n  }\n\n  describeTable(metricModelName) {\n    var self = this;\n    if (!this.tableInfo && metricModelName !== 'MetricContainer') {\n      return this.apiService.get(\"/metrics/describe_table/\" + metricModelName).subscribe(function (tableInfo) {\n        //console.log(\"FunMetric: Describe table: \" + metricModelName);\n        self.tableInfo = tableInfo;\n        return self.tableInfo;\n      }, error => {\n        this.loggerService.error(\"fetchMetricsData\");\n      })\n    } else {\n      return this.tableInfo;\n    }\n  }\n\n  getDatesByTimeMode(dateList) {\n    let len = dateList.length;\n    let filteredDate = [];\n    let result = [[len, 0]];\n    if (this.timeMode === \"week\") {\n      for (let i = len - 1; i >= 0; i = i - 7) {\n        if (i >= 7) {\n          filteredDate.push([i, i - 7 + 1]);\n        }\n        else {\n          filteredDate.push([i, 0]);\n        }\n      }\n      result = filteredDate.reverse();\n    }\n    else if (this.timeMode === \"month\") {\n      let i = len - 1;\n      let startIndex = len - 1;\n      let latestDate = new Date(dateList[i].replace(/\\s+/g, 'T'));\n      let latestMonth = latestDate.getUTCMonth();\n      while (i >= 0) {\n        let currentDate = new Date(dateList[i].replace(/\\s+/g, 'T'));\n        let currentMonth = currentDate.getUTCMonth();\n        if (currentMonth !== latestMonth) {\n          filteredDate.push([startIndex, i + 1]);\n          latestMonth = currentMonth;\n          startIndex = i;\n        }\n        if (i === 0) {\n          filteredDate.push([startIndex, i]);\n        }\n        i--;\n      }\n      result = filteredDate.reverse();\n    }\n    else {\n      for (let i = len - 1; i >= 0; i--) {\n        filteredDate.push([i, i]);\n      }\n      result = filteredDate.reverse();\n    }\n    return result;\n  }\n\n  shortenKeyList(keyList: any) {\n    let newList = [];\n    for (let key of keyList) {\n      let r = /(\\d{4})-(\\d{2})-(\\d{2})/g;\n      let match = r.exec(key);\n      let s = match[2] + \"/\" + match[3];\n      newList.push(s)\n    }\n    return newList;\n  }\n\n  fixMissingDates(dates) {\n    let firstString = dates[0].replace(/\\s+/g, 'T');\n    //firstString = firstString.replace('+', 'Z');\n    //firstString = firstString.substring(0, firstString.indexOf('Z'));\n    let firstDate = new Date(firstString);\n    let today = new Date();\n    let yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    yesterday.setHours(23, 59, 59);\n    let lastDate = yesterday;\n\n    let currentDate = firstDate;\n    let datesIndex = 0;\n    let finalDates = [];\n    while (currentDate <= yesterday) {\n\n      //console.log(currentDate);\n      if ((datesIndex < dates.length) && this.sameDay(new Date(dates[datesIndex].replace(/\\s+/g, 'T')), currentDate)) {\n        finalDates.push(dates[datesIndex]);\n        datesIndex++;\n        while ((datesIndex < dates.length) && this.sameDay(new Date(dates[datesIndex].replace(/\\s+/g, 'T')), currentDate)) {\n          //finalDates.push(dates[datesIndex]);\n          datesIndex++;\n        }\n      } else {\n        //currentDate.setHours(currentDate.getHours() - currentDate.getTimezoneOffset() / 60);\n        let tempDate = currentDate;\n        tempDate.setHours(0);\n        tempDate.setMinutes(0);\n        tempDate.setSeconds(1);\n        tempDate = new Date(tempDate.getTime() - (tempDate.getTimezoneOffset() * 60000));\n        finalDates.push(tempDate.toISOString().replace('T', ' ')); //TODO: convert zone correctly\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    let j = 0;\n    return finalDates;\n  }\n\n  sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate();\n  }\n\n  fetchData(metricModelName, chartName, chartInfo, previewDataSets, tableInfo) {\n    let payload = {};\n    payload[\"metric_model_name\"] = metricModelName;\n    payload[\"chart_name\"] = chartName;\n    payload[\"preview_data_sets\"] = previewDataSets;\n    payload[\"metric_id\"] = -1;\n    if (chartInfo) {\n      payload[\"metric_id\"] = chartInfo.data[\"metric_id\"];\n      this.metricId = chartInfo.data[\"metric_id\"];\n    }\n    if (metricModelName !== 'MetricContainer') {\n      this.status = \"idle\";\n      this.tableInfo = tableInfo;\n\n      let filterDataSets = [];\n      if (previewDataSets) {\n        filterDataSets = previewDataSets;\n      } else {\n        //console.log(\"Chart Info:\" + chartInfo);\n        if (chartInfo) {\n          filterDataSets = chartInfo.data['data_sets'];\n          //console.log(\"C DS:\" + chartInfo.data_sets);\n        }\n      }\n      this.filterDataSets = filterDataSets;\n\n      this.status = \"Fetch data\";\n\n      this.apiService.post(\"/metrics/data\", payload).subscribe((allDataSets: any) => {\n        self.status = \"idle\";\n        if (allDataSets.length === 0) {\n          this.values = null;\n          return;\n        }\n\n        let keySet = new Set();\n        /*\n        let firstDataSet = allDataSets[0];\n        firstDataSet.forEach((oneRecord) => {\n            keySet.add(oneRecord.input_date_time.toString());\n        });*/\n        for (let oneDataSet of allDataSets.data) {\n          for (let oneRecord of oneDataSet) {\n            keySet.add(oneRecord.input_date_time.toString());\n          }\n        }\n        // allDataSets.foreach((oneDataSet) => {\n        //   oneDataSet.foreach((oneRecord) => {\n        //     keySet.add(oneRecord.input_date_time.toString());\n        //   });\n        // });\n\n        let keyList = Array.from(keySet);\n        keyList.sort();\n        this.shortenKeyList(keyList);\n        keyList = this.fixMissingDates(keyList);\n        let originalKeyList = keyList;\n        keyList = this.getDatesByTimeMode(keyList);\n\n        let chartDataSets = [];\n        let seriesDates = [];\n        let dataSetIndex = 0;\n\n        this.allData = allDataSets;\n        this.status = \"Preparing chart data-sets\";\n        for (let oneDataSet of allDataSets.data) {\n\n          let oneChartDataArray = [];\n          for (let i = 0; i < keyList.length; i++) {\n            let output = null;\n            let total = 0;\n            let count = 0;\n            let matchingDateFound = false;\n            seriesDates.push(originalKeyList[keyList[i][0]]);\n            let startIndex = keyList[i][0];\n            let endIndex = keyList[i][1];\n            while (startIndex >= endIndex) {\n              for (let j = 0; j < oneDataSet.length; j++) {\n                let oneRecord = oneDataSet[j];\n                if (oneRecord.input_date_time.toString() === originalKeyList[startIndex]) {\n                  matchingDateFound = true;\n                  let outputName = this.filterDataSets[dataSetIndex].output.name;\n                  output = oneRecord[outputName];\n                  total += output;\n                  count++;\n                  if (chartInfo && chartInfo.y1_axis_title) {\n                    this.chart1YaxisTitle = chartInfo.data.y1_axis_title;\n                  } else {\n                    this.chart1YaxisTitle = tableInfo.data[outputName].verbose_name;\n                  }\n                  if (this.y1AxisTitle) {\n                    this.chart1YaxisTitle = this.y1AxisTitle;\n                  }\n                  this.chart1XaxisTitle = tableInfo.data[\"input_date_time\"].verbose_name;\n\n                }\n              }\n              startIndex--;\n            }\n            if (count !== 0) {\n              output = total / count;\n            }\n            let thisMinimum = this.filterDataSets[dataSetIndex].output.min;\n            let thisMaximum = this.filterDataSets[dataSetIndex].output.max;\n            oneChartDataArray.push(this.getValidatedData(output, thisMinimum, thisMaximum));\n          }\n          let oneChartDataSet = {name: this.filterDataSets[dataSetIndex].name, data: oneChartDataArray};\n          chartDataSets.push(oneChartDataSet);\n          dataSetIndex++;\n        }\n\n        this.status = \"idle\";\n        this.series = seriesDates;\n        this.values = chartDataSets;\n        this.headers = this.tableInfo;\n      }, error => {\n        this.loggerService.error(\"fetchMetricsData\");\n      });\n    }\n    else {\n      this.status = \"Fetch data\";\n      console.log(\"Fetch Scores\");\n      this.apiService.post('/metrics/scores', payload).subscribe((data: any) => {\n        self.status = \"idle\";\n        if (data.length === 0) {\n          this.values = null;\n          return;\n        }\n\n        let values = [];\n        let series = [];\n        let keyList = Object.keys(data.scores);\n        keyList.sort();\n        for (let dateTime of keyList) {\n          //values.push(data.scores[dateTime].score);\n          let d = new Date(1000 * Number(dateTime)).toISOString();\n          //let dateSeries = d.setUTCSeconds(dateTime);\n          series.push(d);\n        }\n\n        this.shortenKeyList(series);\n        if (series.length === 0) {\n          this.series = null;\n          this.values = null;\n        } else {\n          series = this.fixMissingDates(series);\n          let dateSeries = [];\n          let seriesRange = this.getDatesByTimeMode(series);\n          for (let i = 0; i < seriesRange.length; i++) {\n            let startIndex = seriesRange[i][0];\n            let endIndex = seriesRange[i][1];\n            let count = 0;\n            let total = 0;\n            dateSeries.push(series[startIndex]);\n            while (startIndex >= endIndex) {\n              for (let j = 0; j < keyList.length; j++) {\n                let dateTime: any = keyList[j];\n                let d = new Date(dateTime * 1000).toISOString();\n                if (d === series[startIndex]) {\n                  total += data.scores[dateTime].score;\n                  count++;\n                }\n              }\n              startIndex--;\n            }\n            if (count !== 0) {\n              let average = total / count;\n              values.push(average);\n            } else {\n              values.push(null);\n            }\n          }\n          this.values = [{data: values}];\n          this.series = dateSeries;\n          this.status = \"idle\";\n          //let keyList = Array.from(keySet);\n        }\n      });\n    }\n  }\n\n  fetchMetricsData(metricModelName, chartName, chartInfo, previewDataSets) {\n    this.title = chartName;\n    var self = this;\n    if (!chartName) {\n      return;\n    }\n    var self = this;\n    if (!this.tableInfo && metricModelName !== 'MetricContainer') {\n      return this.apiService.get(\"/metrics/describe_table/\" + metricModelName).subscribe(function (tableInfo) {\n        //console.log(\"FunMetric: Describe table: \" + metricModelName);\n        self.tableInfo = tableInfo;\n        // return self.tableInfo;\n        self.fetchData(metricModelName, chartName, chartInfo, previewDataSets, tableInfo);\n      }, error => {\n        this.loggerService.error(\"fetchMetricsData\");\n      })\n    } else {\n      // return this.tableInfo;\n      this.fetchData(metricModelName, chartName, chartInfo, previewDataSets, this.tableInfo);\n    }\n  }\n\n  getValidatedData(data, minimum, maximum): any {\n    let result = data;\n    if (data < 0) {\n      data = null;\n    }\n    result = {\n      y: data,\n      marker: {\n        radius: 3\n      }\n    };\n    return result;\n  }\n\n  counter(num: number): number[] {\n    let newArray = new Array(num);\n    return newArray;\n  }\n\n\n}\n","module.exports = \".tableContainer {\\n  margin: 5px;\\n  padding: 5px;\\n}\\n/*.switch {*/\\n/*position: relative;*/\\n/*display: inline-block;*/\\n/*width: 40px;*/\\n/*height: 20px;*/\\n/*}*/\\n/*.switch input {display:none;}*/\\n/*.slider {*/\\n/*position: absolute;*/\\n/*cursor: pointer;*/\\n/*top: 0;*/\\n/*left: 0;*/\\n/*right: 0;*/\\n/*bottom: 0;*/\\n/*background-color: #ccc;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*.slider:before {*/\\n/*position: absolute;*/\\n/*content: \\\"\\\";*/\\n/*height: 20px;*/\\n/*width: 20px;*/\\n/*background-color: white;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*input:checked + .slider {*/\\n/*background-color: #2196F3;*/\\n/*}*/\\n/*input:focus + .slider {*/\\n/*box-shadow: 0 0 1px #2196F3;*/\\n/*}*/\\n/*input:checked + .slider:before {*/\\n/*-webkit-transform: translateX(26px);*/\\n/*-ms-transform: translateX(26px);*/\\n/*transform: translateX(26px);*/\\n/*}*/\\n/*!* Rounded sliders *!*/\\n/*.slider.round {*/\\n/*border-radius: 20px;*/\\n/*}*/\\n/*.slider.round:before {*/\\n/*border-radius: 50%;*/\\n/*}*/\\n.fake-link {\\n    color: blue;\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\na {\\n  cursor: pointer;\\n}\\n#pageDiv {\\n  float: right;\\n  padding: 10px;\\n}\\n#advancedLink {\\n  margin: 5px;\\n}\\n/*.switch {*/\\n/*width: 40px;*/\\n/*margin: 5px;*/\\n/*}*/\\n/*.slider {*/\\n/*right: 10px;*/\\n/*}*/\\n/*.round {*/\\n/*right: 5px;*/\\n/*}*/\\n/* The switch - the box around the slider */\\n/*.switch {*/\\n/*position: relative;*/\\n/*display: inline-block;*/\\n/*width: 30px;*/\\n/*height: 15px;*/\\n/*}*/\\n/*!* Hide default HTML checkbox *!*/\\n/*.switch input {display:none;}*/\\n/*!* The slider *!*/\\n/*.slider {*/\\n/*position: absolute;*/\\n/*cursor: pointer;*/\\n/*top: 0;*/\\n/*left: 0;*/\\n/*right: 0;*/\\n/*bottom: 0;*/\\n/*background-color: #ccc;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*.slider:before {*/\\n/*position: absolute;*/\\n/*content: \\\"\\\";*/\\n/*height: 10px;*/\\n/*width: 10px;*/\\n/*background-color: white;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*input.default:checked + .slider {*/\\n/*background-color: #444;*/\\n/*}*/\\n/*input.primary:checked + .slider {*/\\n/*background-color: #2196F3;*/\\n/*}*/\\n/*input.success:checked + .slider {*/\\n/*background-color: #8bc34a;*/\\n/*}*/\\n/*input.info:checked + .slider {*/\\n/*background-color: #3de0f5;*/\\n/*}*/\\n/*input.warning:checked + .slider {*/\\n/*background-color: #FFC107;*/\\n/*}*/\\n/*input.danger:checked + .slider {*/\\n/*background-color: #f44336;*/\\n/*}*/\\n/*input:focus + .slider {*/\\n/*box-shadow: 0 0 1px #2196F3;*/\\n/*}*/\\n/*input:checked + .slider:before {*/\\n/*-webkit-transform: translateX(26px);*/\\n/*-ms-transform: translateX(26px);*/\\n/*transform: translateX(26px);*/\\n/*}*/\\n/*!* Rounded sliders *!*/\\n/*.slider.round {*/\\n/*border-radius: 10px;*/\\n/*}*/\\n/*.slider.round:before {*/\\n/*border-radius: 50%;*/\\n/*}*/\\n\"","module.exports = \"<p>\\n  table works!\\n</p>\\n<div class=\\\"card tableContainer\\\">\\n  <div>\\n    <div>\\n      <!-- pager -->\\n      <div id=\\\"pageDiv\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(1)\\\">First </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous </a>\\n        </span>\\n        <span *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n          <a (click)=\\\"setPage(page)\\\">{{page}} </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.totalPages)\\\">Last </a>\\n        </span>\\n      </div>\\n      <!-- items being paged -->\\n      <table class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n        <tr>\\n            <th *ngFor=\\\"let header of filtered(headers)\\\" mat-sort-header=\\\"{{headers.indexOf(header)}}\\\">{{ header }}</th>\\n          <!--<th *ngFor=\\\"let header of headers\\\" mat-sort-header=\\\"{{headers.indexOf(header)}}\\\">{{ header }}</th>-->\\n          <!-- th *ngFor=\\\"let key of headerIndexMap.keys()\\\" >{{ headers[key] }}</th-->\\n        </tr>\\n        <tr *ngFor=\\\"let item of pagedItems\\\">\\n            <td *ngFor=\\\"let rowItems of filtered(item)\\\">{{rowItems}}</td>\\n          <!--<td *ngFor=\\\"let rowItems of item\\\">{{rowItems}}</td>-->\\n        </tr>\\n      </table>\\n      <a id=\\\"advancedLink\\\" (click)=\\\"editColumns()\\\">Advanced</a>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"hideShowColumns\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">Columns</div>\\n      <div class=\\\"panel-body\\\" style=\\\"vertical-align: center;\\\">\\n          <table>\\n            <tr *ngFor=\\\"let header of headers\\\">\\n              <td>\\n               <label>\\n                 {{header}}\\n               </label>\\n              </td>\\n              <td style=\\\"padding: 10px; margin: 5px;\\\">\\n                <label class=\\\"switch\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"headerIndexMap.get(headers.indexOf(header))\\\" (change)=\\\"setHeaders(header)\\\" class=\\\"switch\\\" data-toggle=\\\"toggle\\\" >\\n          <span class=\\\"slider round\\\"></span>\\n        </label>\\n              </td>\\n            </tr>\\n          </table>\\n\\n      </div>\\n    </div>\\n    <button (click)=\\\"editColumns()\\\" style=\\\"margin: 5px;\\\">Close</button>\\n  </div>\\n</div>\\n\"","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {Sort} from '@angular/material';\nimport {PagerService} from '../services/pager/pager.service';\nimport {LoggerService} from \"../services/logger/logger.service\";\nimport {ApiService} from \"../services/api/api.service\";\n\n@Component({\n  selector: 'fun-table',\n  templateUrl: './fun-table.component.html',\n  styleUrls: ['./fun-table.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\n\nexport class FunTableComponent implements OnInit {\n  headers: any[];\n  // originalHeaders: any[];\n  rows: any[];\n  // originalRows: any[];\n  pageSize: number;\n  hideShowColumns: boolean = false;\n  headerIndexMap: Map<number, boolean> = new Map<number, boolean>();\n  static readonly defaultPageSize: number = 10;\n\n  constructor(private apiService: ApiService, private pagerService: PagerService, private logger: LoggerService, private changeDetector: ChangeDetectorRef) {\n    this.logger.log(\"FunTableComponent init\");\n  }\n\n  // private allItems: any = [];\n  pager: any = {};\n  pagedItems: any[];\n  // originalData: any[];\n  @Input() data: any = [];\n  @Output() nextPage: EventEmitter<number> = new EventEmitter();\n\n  ngOnInit() {\n    if (this.data.rows && this.data.rows.length === 10000) {\n      this.logger.log(\"10000 rows\");\n    }\n    // this.doSomething1();\n  }\n\n  //setting the page number\n  setPage(page: number) {\n    // get pager object from service\n    if (!this.data.all) {\n      this.nextPage.emit(page);\n    } else {\n      this.setPagedItems(page);\n    }\n  }\n\n  //setting the rows to be displayed by the template\n  setPagedItems(page: number) {\n    this.pager = this.pagerService.getPager(this.data.totalLength, page, this.pageSize);\n    if (this.data.all) {\n      this.pagedItems = this.rows.slice(this.pager.startIndex, this.pager.endIndex + 1);\n    } else {\n      this.pagedItems = this.rows.slice(0, this.pageSize);\n    }\n  }\n\n  ngOnChanges() {\n    if (this.data.currentPageIndex < 0) {\n      this.logger.fatal(\"Page Index is less than 1\");\n    } else {\n      this.rows = this.data.rows;\n      this.headers = this.data.headers;\n      // this.originalHeaders = this.data.headers;\n      // this.originalRows = this.data.rows;\n      for (let i in this.headers) {\n        this.headerIndexMap.set(Number(i), true);\n      }\n      // this.headerIndexMap.set(0, true);\n      // this.originalData = Array.from(this.rows);\n      if (this.data.pageSize) {\n        this.pageSize = this.data.pageSize;\n      }\n      else {\n        this.pageSize = FunTableComponent.defaultPageSize;\n      }\n      this.setPagedItems(this.data.currentPageIndex);\n      //this.setPage(1);\n    }\n  }\n\n  //sorts the input rows in the data\n  sortData(sort: Sort) {\n    if (!sort.active || sort.direction === '') {\n      // this.pagedItems = Array.from(this.originalData);\n      // this.rows = this.pagedItems;\n      // this.setPage(1);\n      return;\n    }\n    this.pagedItems = this.rows.sort((a, b) => {\n      const isAscending = sort.direction === 'asc';\n      if (sort.active) {\n        return compare(a[sort.active], b[sort.active], isAscending);\n      }\n    });\n    this.setPage(1);\n  }\n\n  //toggle between hide and show columns\n  editColumns() {\n    this.logger.log(\"Open form is entered\");\n    this.headerIndexMap.forEach((value, key) => {\n      console.log(Number(key) ,this.headerIndexMap.get(Number(key)));\n    });\n    this.hideShowColumns = !this.hideShowColumns;\n  }\n\n  setHeaders(header) {\n    // this.headerIndexMap.set(this.originalHeaders.indexOf(header), !this.headerIndexMap.get(this.originalHeaders.indexOf(header)));\n    // let newHeaders = this.originalHeaders.filter(item => {\n    //   if(this.headerIndexMap.get(this.originalHeaders.indexOf(item)) === true) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // for (let i = 0; i < this.originalRows.length; i++) {\n    //   this.rows[i] = this.originalRows[i].filter(item => {\n    //   if(this.headerIndexMap.get(this.originalHeaders.indexOf(item)) === true) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // }\n    // this.headers = newHeaders;\n    // // this.setPage(1);\n    this.headerIndexMap.set(this.headers.indexOf(header), !this.headerIndexMap.get(this.headers.indexOf(header)));\n    // this.filtered(this.headers);\n    // this.changeDetector.detectChanges();\n  }\n\n  // filteredHeaders(indexMap) {\n  //   console.log(\"filtered header\");\n  //   return this.headers.filter(item => {\n  //           if(this.headers.indexOf(item) < indexMap.size && indexMap.get(this.headers.indexOf(item))) {\n  //             return true;\n  //           }\n  //           return false;\n  //       });\n  // }\n\n  filtered(item) {\n    return item.filter(oldItem => {\n            if(item.indexOf(oldItem) < this.headerIndexMap.size && this.headerIndexMap.get(item.indexOf(oldItem))) {\n              return true;\n            }\n            return false;\n        });\n  }\n    doSomething1(): void {\n    console.log(\"Doing Something1\");\n    let payload = {\"metric_id\": 122, \"date_range\": [\"2018-04-01T07:00:01.000Z\", \"2018-09-13T06:59:59.765Z\"]};\n    this.apiService.post('/metrics/scores', payload).subscribe(response => {\n        //console.log(response.data);\n\n      },\n      error => {\n        //console.log(error);\n        this.delay(1000)\n        this.doSomething1();\n      });\n\n  }\n  async delay(ms: number) {\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\n}\nr() {\n   return Math.random();\n}\n\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \".info-box {\\n  border: 1px;\\n  border-color: #4CAF50;\\n  border-style: solid;\\n  border-radius: 5px;\\n  width: inherit;\\n  margin-top: 5px;\\n}\\n\\n.info-box-header {\\n  background-color: #dff0d8;\\n  border-radius: 5px;\\n\\n}\\n\\n.info-box-text {\\n  padding: 5px;\\n}\\n\\n.aspect-label {\\n  padding: 5px;\\n}\\n\\n.aspect-label-text {\\n  padding: 5px;\\n}\\n\\n.fa-icon-green {\\n  color: green;\\n}\\n\\n.fa-icon-red {\\n  color: red;\\n}\\n\\n#score-table-parent {\\n  display: table;\\n  width: 60px;\\n  height: 60px;\\n  border: 3px solid lightsteelblue;\\n  border-radius: 5px;\\n}\\n\\n#score-table-child {\\n  display: table-cell;\\n  vertical-align: middle;\\n  text-align: center;\\n  font-size: 25px;\\n  color: white;\\n\\n}\\n\\n#score-table-info-icon {\\n  display: table-cell;\\n  vertical-align: top;\\n}\\n\\n.score-card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n  width: 40%;\\n  background-color: #006699;\\n}\\n\\n.fade-element-in.ng-enter {\\n  opacity: 0;\\n}\\n\\n.fade-element-in-init .fade-element-in.ng-enter {\\n  opacity: 1;\\n}\\n\\n.fade-element-in.ng-enter.ng-enter-active {\\n  opacity: 1;\\n}\\n\\n.fade-element-in.ng-leave {\\n  transition: 0.3s linear all;\\n  opacity: 1;\\n}\\n\\n.fade-element-in.ng-leave.ng-leave-active {\\n  opacity: 0;\\n}\\n\\narrow-icon {\\n  border: solid black;\\n  border-width: 0 3px 3px 0;\\n  display: inline-block;\\n  padding: 3px;\\n\\n}\\n\\n.arrow-right {\\n  transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n\\n}\\n\\n.arrow-down {\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n}\\n\\n.trend-button-green {\\n  background-color: white;\\n  border: 1px solid #4CAF50;\\n  color: white;\\n  text-align: center;\\n  text-decoration: none;\\n  border-radius: 1.5px;\\n\\n}\\n\\n.score-label {\\n  -webkit-text-decoration: solid;\\n          text-decoration: solid;\\n}\\n\\n.trend-button-red {\\n  background-color: white;\\n  border: 1px solid red;\\n  color: white;\\n  text-align: center;\\n  text-decoration: none;\\n  border-radius: 1.5px;\\n\\n}\\n\"","module.exports = \"\\n<!--<fun-table (nextPage)=\\\"setValues($event)\\\" [data]=\\\"data\\\"></fun-table>-->\\n<!--<li *ngFor='let in of counter(50) ;let i = index'>{{i}}-->\\n  <!--<fun-chart></fun-chart>-->\\n<!--</li>-->\\n<div class=\\\"content\\\">\\n  <div class=\\\"col-lg-6 col-xl-6 col-md-6\\\">\\n    <div>\\n      <table class=\\\"table table-nonfluid\\\">\\n        <tr>\\n          <th class=\\\"text-center\\\">Aspect</th>\\n          <th class=\\\"text-center\\\">Score</th>\\n          <th class=\\\"text-center\\\">#</th>\\n          <!--th></th-->\\n          <th class=\\\"text-center\\\">More Info</th>\\n\\n        </tr>\\n        <tr class=\\\"fade-element-in\\\" ng-if=\\\"!node.hide\\\" ng-repeat=\\\"node in flatNodes track by $index\\\">\\n          <td id=\\\"{{ node.guid }}\\\" class=\\\"child-transition\\\">\\n                        <span ng-bind-html=\\\"getIndentHtml(node) | unsafe\\\">\\n                        </span>\\n            <a ng-if=\\\"node.leaf\\\" href=\\\"#\\\" ng-click=\\\"setCurrentChart(node)\\\">{{ node.label }}</a>\\n            <a ng-if=\\\"!node.leaf\\\" href=\\\"#\\\" ng-click=\\\"showNonAtomicMetric(node)\\\">{{ node.label }}</a>\\n            <!-- span ng-if=\\\"!node.leaf\\\">{{ node.label }}</span -->&nbsp\\n            <span ng-if=\\\"node.numChildren\\\">\\n                            <a href=\\\"#{{ node.guid }}\\\" ng-if=\\\"!node.collapsed\\\" ng-click=\\\"collapseNode(node)\\\">\\n                                <span class=\\\"arrow-down\\\"></span>\\n                            </a>\\n                            <a href=\\\"#{{ node.guid }}\\\" ng-if=\\\"node.collapsed\\\" ng-click=\\\"expandNode(node)\\\">\\n                                <span class=\\\"arrow-right\\\"></span>\\n                            </a>\\n                        </span>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n            <div ng-if=\\\"node.chartName !== 'All metrics'\\\" class=\\\"score-label\\\"><span style=\\\"vertical-align: top\\\"\\n                                                                                    ng-bind-html=\\\"getTrendHtml(node) | unsafe\\\"></span>{{ node.goodness }}\\n            </div>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n            <span ng-if=\\\"!node.leaf\\\">{{ node.numLeaves }}</span>\\n          </td>\\n\\n          <td ng-bind-html=\\\"getStatusHtml(node) | unsafe\\\"></td>\\n        </tr>\\n      </table>\\n\\n    </div>\\n    <!--<p>Last updated at: {{ lastStatusUpdateTime }}</p>-->\\n  </div>\\n\\n\\n  <div ng-if=\\\"mode\\\" class=\\\"card col-xl-6 col-lg-6 col-xxl-6\\\" ng-switch=\\\"mode\\\">\\n    <div ng-switch-when=\\\"showingGoodnessTrend\\\">\\n      <!-- fun-chart values=\\\"goodnessTrendValues\\\" show-legend=\\\"true\\\"\\n                 title=\\\"goodnessTrendChartTitle\\\" charting=\\\"charting\\\" chart-type=\\\"line-chart\\\">\\n      </fun-chart-->\\n    </div>\\n    <div ng-switch-when=\\\"showingAtomicMetric\\\">\\n      <div ng-if=\\\"currentChartName\\\">\\n        <table>\\n          <tr>\\n            <td>\\n                                    <span id=\\\"score-table-parent\\\" class=\\\"score-card\\\">\\n                                        <span id=\\\"score-table-child\\\">{{ currentNode.goodness }}\\n                                        </span>\\n                                    </span>\\n            </td>\\n            <td valign=\\\"top\\\" align=\\\"left\\\">\\n                                <span id=\\\"score-table-info-icon\\\">\\n                                    <i class=\\\"fa fa-info-circle\\\" style=\\\"padding: 2px\\\"\\n                                       ng-click=\\\"showNodeInfoClick(currentNode)\\\">\\n                                    </i>\\n                                </span>\\n            </td>\\n            <td style=\\\"width: 100%\\\">\\n                                <span style=\\\"float: right;\\\">\\n                                            <button class=\\\"btn\\\" style=\\\"background-color: white\\\"\\n                                                    ng-click=\\\"openAtomicTab()\\\">\\n                                                <i class=\\\"fa fa-external-link\\\"></i></button>\\n                                </span>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div ng-if=\\\"showingNodeInfo\\\">\\n          <h5>Score calculation</h5>\\n          <p ng-bind-html=\\\"currentNodeInfo\\\"></p>\\n        </div>\\n\\n        <br>\\n\\n        <div class=\\\"closed-section\\\"></div>\\n        <!--fun-metric-chart chart-name=\\\"currentChartName\\\" model-name=\\\"currentMetricModelName\\\"></fun-metric-chart-->\\n      </div>\\n    </div>\\n    <div ng-switch-when=\\\"showingNonAtomicMetric\\\">\\n      <!-- div style=\\\"padding-bottom: 10px;\\\"><h4>Aspect: {{ currentNode.chartName }}</h4></div-->\\n      <div>\\n        <table>\\n          <tr>\\n            <td>\\n                                    <span id=\\\"score-table-parent\\\" class=\\\"score-card\\\">\\n                                        <span id=\\\"score-table-child\\\">{{ currentNode.goodness }}\\n                                        </span>\\n                                    </span>\\n            </td>\\n            <td valign=\\\"top\\\" align=\\\"left\\\">\\n                                <span id=\\\"score-table-info-icon\\\">\\n                                    <i class=\\\"fa fa-info-circle\\\" style=\\\"padding: 2px\\\"\\n                                       ng-click=\\\"showNodeInfoClick(currentNode)\\\">\\n                                    </i>\\n                                </span>\\n            </td>\\n          </tr>\\n        </table>\\n        <div ng-if=\\\"showingContainerNodeInfo\\\">\\n          <br>\\n          <h5>Children</h5>\\n          <div ng-if=\\\"currentNode\\\">\\n            <table class=\\\"table table-nonfluid\\\">\\n              <tr>\\n                <th>Aspect</th>\\n                <th>Weight</th>\\n                <th>Last score</th>\\n                <th>Weight * Last Score</th>\\n              </tr>\\n              <tr ng-repeat=\\\"(childId, info) in currentNode.children\\\">\\n                <td>{{ metricMap[childId].chartName }}</td>\\n                <td>\\n                  <p ng-click=\\\"editingWeightClick(info)\\\" ng-if=\\\"!info.editing\\\">{{ info.weight }}</p>\\n                  <span ng-if=\\\"info.editing\\\">\\n                                        <input style=\\\"padding-right: 10px\\\" type=\\\"number\\\" ng-model=\\\"info.editingWeight\\\">\\n                                        <button style=\\\"border: 1px solid black;overflow: hidden; padding-left: 10px;\\\"\\n                                                class=\\\"btn btn-sm\\\"\\n                                                ng-click=\\\"submitWeightClick(currentNode, childId, info)\\\">&#10003;</button>\\n                                        <button style=\\\"border: 1px solid black;\\\" class=\\\"btn btn-sm\\\"\\n                                                ng-click=\\\"closeEditingWeightClick(info)\\\">&#10060;</button>\\n                                    </span>\\n                </td>\\n                <td>\\n                  {{ currentNode.childrenScoreMap[childId] | number: 1}}\\n                </td>\\n                <td>\\n                  {{ info.weight }} * {{ currentNode.childrenScoreMap[childId] |\\n                  number: 1 }} = {{ info.weight * currentNode.childrenScoreMap[childId]\\n                  | number: 1 }}\\n                </td>\\n                <!-- td>{{ childId }}</td -->\\n              </tr>\\n              <tr>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td>Total ~ {{ getScoreTotal(currentNode) | number: 1}}</td>\\n              </tr>\\n              <tr>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td>Sum of child weights = {{ getSumChildWeights (currentNode.children) }}</td>\\n              </tr>\\n              <tr>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td>Score ~ {{ getScoreTotal(currentNode) | number: 1}} / {{ getSumChildWeights(currentNode.children) }}\\n                  = {{ getScoreTotal(currentNode) /  getSumChildWeights(currentNode.children) | number: 1}}</td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"closed-section\\\"></div>\\n      <!--fun-metric-chart chart-name=\\\"currentChartName\\\" model-name=\\\"currentMetricModelName\\\"></fun-metric-chart-->\\n\\n      <br>\\n      <br>\\n      <!--<div class=\\\"closed-section\\\"></div>-->\\n      <div ng-if=\\\"grid.length\\\">\\n        <table class=\\\"table\\\" ng-if=\\\"grid\\\">\\n          <tr ng-repeat=\\\"row in grid track by $index\\\">\\n            <td ng-repeat=\\\"node in row track by $index\\\" style=\\\"width: 50%\\\">\\n              <!--fun-metric-chart\\n                chart-name=\\\"node.name\\\"\\n                model-name=\\\"node.metricModelName\\\"\\n                atomic=\\\"atomic\\\"\\n                chart-only=\\\"true\\\"\\n                wait-time=\\\"(($parent.$index * numGridColumns) + $index) * 1000\\\">\\n              </fun-metric-chart-->\\n            </td>\\n          </tr>\\n        </table>\\n        <div class=\\\"closed-section\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {ApiService} from \"../services/api/api.service\";\nimport {LoggerService} from \"../services/logger/logger.service\";\n\n\n\nclass Node {\n  metricId: number;\n  leaf: boolean;\n  chartName: string;\n  metricModelName: string;\n  numChildrenFailed: number;\n  numChildrenDegrades: number;\n  lastNumBuildFailed: number;\n  numLeaves: number\n}\n\nclass FlatNode {\n  gUid: number;\n  node: Node;\n  collapsed: boolean;\n  hide: boolean;\n}\n\n@Component({\n  selector: 'app-performance',\n  templateUrl: './performance.component.html',\n  styleUrls: ['./performance.component.css']\n})\nexport class PerformanceComponent implements OnInit {\n  numGridColumns: number;\n  lastStatusUpdateTime: any;\n  mode: any;\n  jenkinsJobIdMap: any;\n  metricMap: any;\n  cachedNodeInfo: any;\n  goodnessTrendValues: any;\n  inner: any;\n  //data: any;\n  dataSets: any;\n  childData: any;\n  headers: any[];\n  data: any[];\n  dag: any = null;\n\n  nodeMap: { [metricId: number] : Node } = {};\n  lastGuid: number = 0;\n  flatNodes: FlatNode[] = [];\n\n  constructor(\n    private location: Location,\n    private apiService: ApiService,\n    private loggerService: LoggerService\n  ) {\n  }\n\n  ngOnInit() {\n    // this.getLastStatusUpdateTime();\n    this.numGridColumns = 2;\n    this.data = [['hi', 'hello'], ['how', 'are'], ['you', 'its'], ['been', 'a'], ['long', 'time'], ['also', 'when'], ['where', 'how'], ['are', 'we'], ['meeting', 'if'], [1, 2], [3, 4]];\n    this.headers = ['Names', 'Numbers'];\n    this.fetchDag();\n    if (window.screen.width <= 1441) {\n      this.numGridColumns = 2;\n    }\n  }\n\n  getGuid(): number {\n    this.lastGuid++;\n    return this.lastGuid;\n  }\n\n  fetchDag(): void {\n    // Fetch the DAG\n    let payload: { [i: string]: string} = {metric_model_name: \"MetricContainer\", chart_name: \"Total\"};\n    this.apiService.post(\"/metrics/dag\", payload).subscribe( response => {\n      this.dag = response.data;\n      this.walkDag(this.dag);\n      let i = 0;\n    }, error => {\n      this.loggerService.error(\"fetchDag\");\n    })\n  }\n\n  getNodeFromEntry(metricId: number, dagEntry: any): Node {\n    let node = new Node();\n    node.metricId = metricId;\n    node.chartName = dagEntry.chart_name;\n    node.metricModelName = dagEntry.metric_model_name;\n    node.numLeaves = dagEntry.num_leaves;\n    node.numChildrenDegrades = dagEntry.last_num_degrades;\n    node.lastNumBuildFailed = dagEntry.last_num_build_failed;\n    return node;\n  }\n\n\n  addNodeToMap(metricId: number, node: Node): void {\n    this.nodeMap[metricId] = node;\n  }\n\n  getNewFlatNode(node: Node): FlatNode {\n    let newFlatNode = new FlatNode();\n    newFlatNode.gUid = this.getGuid();\n    newFlatNode.node = node;\n    newFlatNode.hide = true;\n    newFlatNode.collapsed = true;\n    return newFlatNode;\n  }\n\n  walkDag(dagEntry: object): void {\n    this.loggerService.log(dagEntry);\n    for (let metricId in dagEntry) {\n      let numMetricId: number = Number(metricId); // TODO, why do we need this conversion\n      let nodeInfo = dagEntry[numMetricId];\n      let newNode = this.getNodeFromEntry(numMetricId, dagEntry[numMetricId]);\n      this.addNodeToMap(numMetricId, newNode);\n\n      this.flatNodes.push(this.getNewFlatNode(newNode));\n      this.loggerService.log('Node:' + nodeInfo.chart_name);\n      if (!nodeInfo.leaf) {\n        let children = nodeInfo.children;\n        children.forEach((cId) => {\n          //let childEntry: {[childId: number]: object} = {cId: nodeInfo.children_info[Number(childId)]};\n          let childEntry = {[cId]: nodeInfo.children_info[Number(cId)]};\n          this.walkDag(childEntry);\n        })\n      }\n    }\n  }\n\n  setValues(pageNumber): void {\n    this.data = [['hi', 'hello'], ['how', 'are']];\n    this.headers = ['Names', 'Numbers'];\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  getLastStatusUpdateTime() {\n    this.apiService.get('/common/time_keeper/' + \"last_status_update\").subscribe((data) => {\n      this.lastStatusUpdateTime = data;\n    }, error => {\n\n    });\n  }\n\n\n  fetchRootMetricInfo(chartName, metricModelName): any {\n    let payload = {\"metric_model_name\": metricModelName, chart_name: chartName};\n    this.apiService.post('/metrics/chart_info', payload).subscribe((data) => {\n      return data;\n    }, error => {\n      this.loggerService.error(\"fetchRootMetricInfo\");\n    });\n  }\n\n  populateNodeInfoCache(data) {\n    if (!(data.metric_id in this.cachedNodeInfo)) {\n      this.cachedNodeInfo[data.metric_id] = data;\n    }\n    data.children_info.forEach((value, key) => {\n      this.cachedNodeInfo[key] = value;\n      value.children_info.forEach((v2, key2) => {\n        this.populateNodeInfoCache(v2);\n      });\n    });\n  }\ncounter(i: number) {\n    return new Array(i);\n  }\n\n\n\n  getNodeFromData = (data): any => {\n    let newNode = {\n      info: data.description,\n      label: data.chart_name,\n      collapsed: true,\n      metricId: data.metric_id,\n      hide: true,\n      leaf: data.leaf,\n      chartName: data.chart_name,\n      metricModelName: data.metric_model_name,\n      childrenWeights: JSON.parse(data.children_weights),\n      children: {},\n      lineage: [],\n      numChildDegrades: data.last_num_degrades,\n      positive: data.positive,\n      numChildren: 0,\n      numChildrenPassed: data.num_children_passed,\n      numChildrenFailed: data.last_num_build_failed,\n      lastBuildStatus: data.last_build_status,\n      status: true\n\n    };\n    this.metricMap[newNode.metricId] = {chartName: newNode.chartName};\n    if (newNode.info === \"\") {\n      newNode.info = \"<p>Please update the description</p>\";\n    }\n\n    //     let dateRange = this.getDateRange();\n    //     let fromDate = dateRange[0];\n    //     let toDate = dateRange[1];\n    //     return this.fetchScores(data.metric_id, fromDate.toISOString(), toDate.toISOString()).then((scoreData) => {\n    //         newNode.childrenScoreMap = scoreData[\"children_score_map\"];\n    //         this.evaluateScores(newNode, scoreData[\"scores\"]);\n    //         newNode.childrenWeights.forEach((info, childId) => {\n    //             newNode.children[childId] = {weight: newNode.childrenWeights[childId], editing: false};\n    //         });\n    //\n    //         if (newNode.lastBuildStatus === \"PASSED\") {\n    //             newNode.status = true;\n    //         } else {\n    //             newNode.status = false;\n    //         }\n    //\n    //         let newNodeChildrenIds = JSON.parse(data.children);\n    //         if (newNodeChildrenIds.length > 0) {\n    //             newNode.numChildren = newNodeChildrenIds.length;\n    //         }\n    return newNode;\n    //     });\n    //\n    //\n  };\n\n  guid = () => {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  };\n\n  expandNode = (node, all) => {\n    node.collapsed = false;\n    if (node.hasOwnProperty(\"numChildren\") && (node.numChildren > 0)) {\n      let thisNode = node;\n      // Fetch children ids\n\n      // return this.fetchMetricInfoById(node).then((data) => {\n      //     console.log(\"Fetching Metrics Info for node:\" + node.metricId);\n      //     node.hide = false;\n      //     let childrenIds = JSON.parse(data.children);\n      //     return this._insertNewNode(node, childrenIds, all, node.childrenFetched).then(() => {\n      //         console.log(\"Inserted: \" + node.chartName);\n      //         node.childrenFetched = true;\n      //         return null;\n      //     });\n      //\n      // });\n\n    }\n    else {\n      return null;\n    }\n    //node.hide = false;\n\n  };\n\n\n}\n\n//\n//     this.clearNodeInfoCache = () => {\n//         this.cachedNodeInfo = {};\n//     };\n//\n//\n//\n//\n//\n//\n//\n//     this.getIndex = (node) => {\n//         let index = this.flatNodes.map(function(x) {return x.guid;}).indexOf(node.guid);\n//         return index;\n//     };\n//\n//     this.getNode = (guid) => {\n//         return this.flatNodes[this.getIndex({guid: guid})];\n//     };\n//\n//     this.expandAllNodes = () => {\n//         this.flatNodes.forEach((node) => {\n//             this.expandNode(node, true);\n//         });\n//         this.collapsedAll = false;\n//         this.expandedAll = true;\n//     };\n//\n//     this.collapseAllNodes = () => {\n//         this.collapseNode(this.flatNodes[0]);\n//         this.expandedAll = false;\n//         this.collapsedAll = true;\n//     };\n//\n//     this.getDateBound = (dt, lower) => {\n//         let newDay = new Date(dt);\n//         if (lower) {\n//             newDay.setHours(0, 0, 1);\n//         } else {\n//             newDay.setHours(23, 59, 59);\n//         }\n//\n//         return newDay;\n//     };\n//\n//     function isSameDay(d1, d2) {\n//           return d1.getFullYear() === d2.getUTCFullYear() &&\n//             d1.getUTCMonth() === d2.getUTCMonth() &&\n//             d1.getUTCDate() === d2.getUTCDate();\n//     }\n//\n//     this.getYesterday = (today) => {\n//         let yesterday = new Date(today);\n//         yesterday = yesterday.setDate(yesterday.getDate() - 1);\n//         return yesterday;\n//     };\n//\n//\n//     this.getDateRange = () => {\n//         let today = new Date();\n//         console.log(today);\n//         let startMonth = 4 - 1;\n//         let startDay = 1;\n//         let startMinute = 59;\n//         let startHour = 23;\n//         let startSecond = 1;\n//         let fromDate = new Date(today.getFullYear(), startMonth, startDay, startHour, startMinute, startSecond);\n//         fromDate = this.getDateBound(fromDate, true);\n//         // console.log(fromDate);\n//         // console.log(this.getDateBound(fromDate, true));\n//         // console.log(this.getDateBound(fromDate, false));\n//\n//         let yesterday = this.getYesterday(today);\n//         let toDate = new Date(yesterday);\n//         toDate = this.getDateBound(toDate, false);\n//         //let fromDate = new Date();\n//         // fromDate.setDate(toDate.getDate() - 7);\n//         // fromDate = this.getDateBound(fromDate, true);\n//         return [fromDate, toDate];\n//\n//     };\n//\n//\n//\n//     this.fetchScores = (metricId, fromDate, toDate) => {\n//         let payload = {};\n//         payload.metric_id = metricId;\n//         payload.date_range = [fromDate, toDate];\n//         return commonService.apiPost('/metrics/scores', payload).then((data) => {\n//             return data;\n//         });\n//     };\n//\n//\n//     this.getSumChildWeights = (children) => {\n//         let sumOfWeights = 0;\n//         angular.forEach(children, (info, childId) => {\n//             sumOfWeights += info.weight;\n//         });\n//         return sumOfWeights;\n//     };\n//\n//     this.getScoreTotal = (currentNode) => {\n//         let children = currentNode.children;\n//         let scoreTotal = 0;\n//\n//\n//         angular.forEach(children, (info, childId) => {\n//             scoreTotal += info.weight * currentNode.childrenScoreMap[childId];\n//         });\n//\n//         let lastDate = new Date(this.validDates.slice(-1)[0] * 1000);\n//         let lastDateLower = this.getDateBound(lastDate, true);\n//         let lastDateUpper = this.getDateBound(lastDate, false);\n//\n//\n//\n//\n//         return scoreTotal;\n//     };\n//\n//     this.evaluateScores = (node, scores) => {\n//\n//         let keys = Object.keys(scores);\n//         let sortedKeys = keys.sort();\n//         if (node.chartName === \"Total\") {\n//             this.validDates = sortedKeys;\n//         }\n//\n//         if (Object.keys(scores).length) {\n//\n//             let mostRecentDateTimestamp = sortedKeys.slice(-1)[0];\n//             let mostRecentDate = new Date(mostRecentDateTimestamp * 1000);\n//             console.log(mostRecentDate);\n//             console.log(scores[mostRecentDateTimestamp].score);\n//             /*\n//             let dateRange = this.getDateRange();\n//             let fromDate = dateRange[0].getTime()/1000;\n//             let toDate = dateRange[1].getTime()/1000;\n//             let lastEntry = scores[toDate].score;*/\n//         }\n//         let goodnessValues = [];\n//         sortedKeys.forEach((key) => {\n//             goodnessValues.push(scores[key].score);\n//         });\n//\n//         // console.log(\"Goodness values: \" + goodnessValues);\n//\n//         node.goodnessValues = goodnessValues;\n//         try {\n//                 node.goodness = Number(goodnessValues[goodnessValues.length - 1].toFixed(1));\n//         } catch (e) {\n//\n//         }\n//\n//         node.childrenGoodnessMap = {};\n//         node.trend = \"flat\";\n//         if (goodnessValues.length > 1) {\n//             let penultimateGoodness = Number(goodnessValues[goodnessValues.length - 2].toFixed(1));\n//             if (penultimateGoodness > node.goodness) {\n//                 node.trend = \"down\";\n//             } else if (penultimateGoodness < node.goodness) {\n//                 node.trend = \"up\";\n//             }\n//             if (Number(goodnessValues[goodnessValues.length - 1].toFixed(1)) === 0) {\n//                 node.trend = \"down\";\n//             }\n//         }\n//         console.log(\"Node: \" + node.chartName + \" Goodness: \" + node.goodness);\n//     };\n//\n//     this.evaluateGoodness = (node, goodness_values, children_goodness_map) => {\n//         if (goodness_values.length) {\n//             try {\n//                 node.goodness = Number(goodness_values[goodness_values.length - 1].toFixed(1));\n//             } catch (e) {\n//             }\n//             node.goodnessValues = goodness_values;\n//             node.childrenGoodnessMap = children_goodness_map;\n//             node.trend = \"flat\";\n//             let penultimateGoodness = Number(goodness_values[goodness_values.length - 2].toFixed(1));\n//             if (penultimateGoodness > node.goodness) {\n//                 node.trend = \"down\";\n//             } else if (penultimateGoodness < node.goodness) {\n//                 node.trend = \"up\";\n//             }\n//             if (Number(goodness_values[goodness_values.length - 1].toFixed(1)) === 0) {\n//                 node.trend = \"down\";\n//             }\n//         }\n//     };\n//\n//     this.getLastElement = (array) => {\n//         let result = null;\n//         if (array.length) {\n//             result = array[array.length - 1];\n//         }\n//         return result;\n//     };\n//\n//     this.setCurrentChart = (node) => {\n//         this.mode = \"showingAtomicMetric\";\n//         this.currentChartName = node.chartName;\n//         this.currentMetricModelName = node.metricModelName;\n//         this.currentNode = node;\n//     };\n//\n//     this.showNodeInfoClick = (node) => {\n//         if(this.currentMetricModelName === 'MetricContainer') {\n//             this.showingContainerNodeInfo = !this.showingContainerNodeInfo;\n//         }\n//         else {\n//             this.showingNodeInfo = !this.showingNodeInfo;\n//             this.currentNodeInfo = null;\n//             if (node.positive) {\n//                 this.currentNodeInfo = \"(&nbsp&#8721; <sub>i = 1 to n </sub>(last actual value/expected value) * 100&nbsp)/n\";\n//             } else {\n//                 this.currentNodeInfo = \"(&nbsp&#8721; <sub>i = 1 to n </sub>(expected value/last actual value) * 100&nbsp)/n\";\n//             }\n//             this.currentNodeInfo += \"&nbsp, where n is the number of data-sets\";\n//         }\n//     };\n//\n//\n//\n//\n//     this.getChildWeight = (node, childMetricId) => {\n//         if (node.hasOwnProperty(\"childrenWeights\")) {\n//             return node.childrenWeights[childMetricId];\n//         } else {\n//             return 0;\n//         }\n//     };\n//\n//     this.editDescriptionClick = () => {\n//         this.editingDescription = true;\n//     };\n//\n//\n//     this.closeEditingDescriptionClick = () => {\n//         this.editingDescription = false;\n//     };\n//\n//     this.openAtomicTab = () => {\n//         let url = \"/metrics/atomic/\" + this.currentChartName + \"/\" + this.currentMetricModelName;\n//         $window.open(url, '_blank');\n//     };\n//\n//     this.submitDescription = (node) => {\n//         let payload = {};\n//         payload[\"metric_model_name\"] = node.metricModelName;\n//         payload[\"chart_name\"] = node.chartName;\n//         payload[\"description\"] = this.inner.nonAtomicMetricInfo;\n//\n//         // TODO: Refresh cache\n//         commonService.apiPost('/metrics/update_chart', payload, \"EditDescription: Submit\").then((data) => {\n//             if (data) {\n//                 alert(\"Submitted\");\n//             } else {\n//                 alert(\"Submission failed. Please check alerts\");\n//             }\n//         });\n//         this.editingDescription = false;\n//\n//     };\n//\n//     this.tooltipFormatter = (x, y) => {\n//         let softwareDate = \"Unknown\";\n//         let hardwareVersion = \"Unknown\";\n//         let sdkBranch = \"Unknown\";\n//         let gitCommit = \"Unknown\";\n//         let r = /(\\d{4}-\\d{2}-\\d{2}\\s+\\d{2}:\\d{2})/g;\n//         let match = r.exec(x);\n//         let key = \"\";\n//         if (match) {\n//             key = match[1];\n//         }\n//         let s = \"\";\n//\n//         if (key in this.buildInfo) {\n//             softwareDate = this.buildInfo[key][\"software_date\"];\n//             hardwareVersion = this.buildInfo[key][\"hardware_version\"];\n//             sdkBranch = this.buildInfo[key][\"fun_sdk_branch\"]\n//             s = \"<b>SDK branch:</b> \" + sdkBranch + \"<br>\";\n//             s += \"<b>Software date:</b> \" + softwareDate + \"<br>\";\n//             s += \"<b>Hardware version:</b> \" + hardwareVersion + \"<br>\";\n//             s += \"<b>Git commit:</b> \" + this.buildInfo[key][\"git_commit\"].replace(\"https://github.com/fungible-inc/FunOS/commit/\", \"\")  + \"<br>\";\n//             s += \"<b>Value:</b> \" + y + \"<br>\";\n//         } else {\n//             s += \"<b>Value:</b> \" + y + \"<br>\";\n//         }\n//\n//         return s;\n//     };\n//\n//\n//     this.fetchMetricInfoById = (node) => {\n//         let thisNode = node;\n//         let p1 = {metric_id: node.metricId};\n//         if (node.metricId in this.cachedNodeInfo) {\n//             return $q.resolve(this.cachedNodeInfo[node.metricId]);\n//         }\n//         return commonService.apiPost('/metrics/metric_info', p1).then((data) => {\n//            return data;\n//         });\n//     };\n//\n//\n//     this.testClick = function () {\n//         console.log(\"testClick\");\n//         console.log(ctrl.f);\n//     };\n//\n//     this.showInfoClick = (node) => {\n//         node.showInfo = !node.showInfo;\n//     };\n//\n//     this.getConsolidatedTrend = (node) => {\n//         let numTrendDown = 0;\n//\n//         if (node.hasOwnProperty(\"childrenGuids\")) {\n//             node.childrenGuids.forEach((childGuid) => {\n//                 let child = this.flatNodes[this.getIndex({guid: childGuid})];\n//                 numTrendDown += this.getConsolidatedTrend(child);\n//             });\n//         } else {\n//             if (node.trend === \"down\") {\n//                 numTrendDown += 1;\n//             }\n//         }\n//         return numTrendDown;\n//     };\n//\n//     this.getStatusHtml = (node) => {\n//         let s = \"\";\n//         if (node.leaf) {\n//             if (node.hasOwnProperty(\"status\")) {\n//                 if (node.status !== true) {\n//                     s = \"Bld: <label class=\\\"label label-danger\\\">FAILED</label>\";\n//                 }\n//                 if ((!node.hasOwnProperty(\"numChildren\") && (!node.leaf)) || ((node.numChildren === 0) && !node.leaf)) {\n//                     s = \"<p style='background-color: white' class=\\\"\\\">No Data</p>\";\n//                 }\n//             }\n//         } else {\n//\n//\n//\n//             //s = \"<p><span style='color: green'>&#10003;:</span><b>\" + numTrendUp + \"</b>\" + \"&nbsp\" ;\n//             //s = \"<icon class=\\\"fa fa-arrow-down aspect-trend-icon fa-icon-red\\\"></icon>\";\n//             /*if (node.chartName === \"BLK_LSV: Latency\") {\n//                 let u = 0;\n//             }*/\n//\n//             if (node.numChildDegrades) {\n//                 s += \"<span style='color: red'><i class='fa fa-arrow-down aspect-trend-icon fa-icon-red'>:</i></span>\" + node.numChildDegrades + \"\";\n//             }\n//             if (node.numChildrenFailed) {\n//                 if (node.numChildDegrades) {\n//                     s += \",&nbsp\";\n//                 }\n//                 s += \"<i class='fa fa-times fa-icon-red'>:</i>\" + \"<span style='color: black'>\" + node.numChildrenFailed + \"</span>\";\n//             }\n//         }\n//         return s;\n//     };\n//\n//     this.getTrendHtml = (node) => {\n//         let s = \"\";\n//         if (node.hasOwnProperty(\"trend\")) {\n//             if (node.trend === \"up\") {\n//                 s = \"<icon class=\\\"fa fa-arrow-up aspect-trend-icon fa-icon-green\\\"></icon>&nbsp\";\n//             } else if (node.trend === \"down\") {\n//                 s = \"<icon class=\\\"fa fa-arrow-down aspect-trend-icon fa-icon-red\\\"></icon>&nbsp;\";\n//             }\n//             else if (node.trend === \"flat\") {\n//                 s = \"<icon class=\\\"fa fa-arrow-down aspect-trend-icon\\\" style=\\\"visibility: hidden;\\\"></icon>&nbsp;\";\n//             }\n//         }\n//         return s;\n//     };\n//\n//     this.isLeafsParent = (node) => {\n//         let isLeafParent = false; // Parent of a leaf\n//         if (node.hasOwnProperty(\"childrenGuids\")) {\n//             node.childrenGuids.forEach((childGuid) => {\n//                 let child = this.flatNodes[this.getIndex({guid: childGuid})];\n//                 if (child.leaf) {\n//                     isLeafParent = true;\n//                 }\n//             });\n//         }\n//         return isLeafParent;\n//     };\n//\n//     this.showNonAtomicMetric = (node) => {\n//         this.resetGrid();\n//         this.mode = \"showingNonAtomicMetric\";\n//         this.currentNode = node;\n//         this.currentChartName = node.chartName;\n//         this.currentMetricModelName = \"MetricContainer\";\n//         this.expandNode(node).then(() => {\n//\n//             //this.mode = \"showingNonAtomicMetric\";\n//             this._setupGoodnessTrend(node);\n//             this.inner.nonAtomicMetricInfo = node.info;\n//             //this.currentNode = null;\n//            // this.currentNode = node;\n//             // let payload = {\n//             //     metric_model_name: \"MetricContainer\",\n//             //     chart_name: node.chartName\n//             // };\n//             //this.currentChartName = node.chartName;\n//             //this.currentMetricModelName = \"MetricContainer\";\n//             console.log(\"Before getting leaves\");\n//             if ((node.chartName === \"All metrics\") || (!this.isLeafsParent(node))) {\n//                 return $q.resolve(null);\n//             } else {\n//                 return $q.resolve(null); // Disable for now\n//                 // commonService.apiPost('/metrics/get_leaves', payload, 'test').then((leaves) => {\n//                 //\n//                 //     let flattenedLeaves = {};\n//                 //     this.flattenLeaves(\"\", flattenedLeaves, leaves);\n//                 //     $timeout(()=> {\n//                 //         this.prepareGridNodes(flattenedLeaves);\n//                 //     }, 1000);\n//                 //\n//                 //     console.log(angular.element($window).width());\n//                 //\n//                 // });\n//\n//             }\n//\n//         });\n//\n//\n//     };\n//\n//     this.flattenLeaves = function (parentName, flattenedLeaves, node) {\n//         let myName = node.name;\n//         if (parentName !== \"\") {\n//             myName = parentName + \" > \" + node.name;\n//         }\n//         if (!node.leaf) {\n//             node.children.forEach((child) => {\n//                 this.flattenLeaves(myName, flattenedLeaves, child);\n//             });\n//         } else {\n//             node.lineage = parentName;\n//             let newNode = {name: node.name, id: node.id, metricModelName: node.metric_model_name};\n//             flattenedLeaves[newNode.id] = newNode;\n//         }\n//     };\n//\n//     this.resetGrid = () => {\n//         this.grid = [];\n//     };\n//\n//     this.prepareGridNodes = (flattenedNodes) => {\n//         let maxRowsInMiniChartGrid = 10;\n//         console.log(\"Prepare Grid nodes\");\n//         let tempGrid = [];\n//         let rowIndex = 0;\n//         Object.keys(flattenedNodes).forEach((key) => {\n//             if (rowIndex < maxRowsInMiniChartGrid) {\n//                 if (tempGrid.length - 1 < rowIndex) {\n//                     tempGrid.push([]);\n//                 }\n//                 tempGrid[rowIndex].push(flattenedNodes[key]);\n//                 if (tempGrid[rowIndex].length === this.numGridColumns) {\n//                     rowIndex++;\n//                 }\n//             }\n//         });\n//         this.grid = tempGrid;\n//\n//     };\n//\n//     this._setupGoodnessTrend = (node) => {\n//         let values = [{\n//                 data: node.goodnessValues\n//             }];\n//         this.goodnessTrendValues = null;\n//         $timeout (() => {\n//             this.goodnessTrendValues = values;\n//         }, 1);\n//\n//         this.charting = true;\n//\n//         this.goodnessTrendChartTitle = node.chartName;\n//     };\n//\n//     this.getChildrenGuids = (node) => {\n//         return node.childrenGuids;\n//     };\n//\n//     this.showGoodnessTrend = (node) => {\n//         this.mode = \"showingGoodnessTrend\";\n//         this._setupGoodnessTrend(node);\n//     };\n//\n//     this.getIndentHtml = (node) => {\n//         let s = \"\";\n//         if (node.hasOwnProperty(\"indent\")) {\n//             for(let i = 0; i < node.indent - 1; i++) {\n//                 s += \"<span style=\\\"color: white\\\">&rarr;</span>\";\n//             }\n//             if (node.indent)\n//                 s += \"<span>&nbsp;&nbsp;</span>\";\n//         }\n//\n//         return s;\n//     };\n//\n//     this.editingWeightClick = (info) => {\n//         info.editing = true;\n//         info.editingWeight = info.weight;\n//     };\n//\n//     this.submitWeightClick = (node, childId, info) => {\n//         let payload = {};\n//         payload.metric_id = node.metricId;\n//         payload.lineage = node.lineage;\n//         payload.child_id = childId;\n//         payload.weight = info.editingWeight;\n//         commonService.apiPost('/metrics/update_child_weight', payload).then((data) => {\n//             info.weight = info.editingWeight;\n//             this.clearNodeInfoCache();\n//             if (node.hasOwnProperty(\"lineage\") && node.lineage.length > 0) {\n//                 this.refreshNode(this.getNode(node.lineage[0]));\n//             } else {\n//                 this.refreshNode(node);\n//             }\n//         });\n//         info.editing = false;\n//     };\n//\n//     this.closeEditingWeightClick = (info) => {\n//         info.editing = false;\n//     };\n//\n//\n//     this.collapseNode = (node) => {\n//         if (node.hasOwnProperty(\"numChildren\")) {\n//             this.collapseBranch(node);\n//         }\n//         node.collapsed = true;\n//     };\n//\n//\n//\n//     this._insertNewNode = (node, childrenIds, all, alreadyInserted) => {\n//         if (childrenIds.length <= 0) {\n//             return;\n//         }\n//         let thisNode = node;\n//         let thisAll = all;\n//         let childId = childrenIds.pop();\n//         let thisChildrenIds = childrenIds;\n//         let p1 = {metric_id: childId};\n//         if (!node.hasOwnProperty(\"childrenGuids\")) {\n//             node.childrenGuids = [];\n//         }\n//\n//         return this.fetchMetricInfoById({metricId: childId}).then((data) => {\n//             if (!alreadyInserted) {\n//                 console.log(\"!alreadyInserted\");\n//                 return this.getNodeFromData(data).then((newNode) => {\n//                     newNode.guid = this.guid();\n//                     thisNode.lineage.forEach((ancestor) => {\n//                        newNode.lineage.push(ancestor);\n//                     });\n//                     newNode.lineage.push(thisNode.guid);\n//                     console.log(\"Added childGuid for node:\" + node.chartName);\n//                     node.childrenGuids.push(newNode.guid);\n//\n//                     newNode.indent = thisNode.indent + 1;\n//                     let index = this.getIndex(thisNode);\n//                     this.flatNodes.splice(index + 1, 0, newNode);\n//                     this._insertNewNode(thisNode, thisChildrenIds, thisAll);\n//                     newNode.hide = false;\n//                     if (thisAll) {\n//                         this.expandNode(newNode, thisAll);\n//                     }\n//                 });\n//\n//             } else {\n//                 console.log(\"alreadyInserted\");\n//                 node.childrenGuids.forEach((childGuid) => {\n//                    let childNode = this.flatNodes[this.getIndex({guid: childGuid})];\n//                    //let childrenIds = JSON.parse(data.children);\n//                    childNode.hide = false;\n//\n//                 });\n//\n//                 this._insertNewNode(thisNode, thisChildrenIds, thisAll, alreadyInserted);\n//             }\n//             return $q.resolve(null);\n//         });\n//\n//\n//     };\n//\n//     this.refreshNode = (node) => {\n//         let payload = {metric_id: node.metricId};\n//         commonService.apiPost('/metrics/metric_info', payload).then((data) => {\n//             this.populateNodeInfoCache(data);\n//             this.evaluateGoodness(node, data.goodness_values, data.children_goodness_map);\n//             this._setupGoodnessTrend(node);\n//         });\n//         if (node.hasOwnProperty(\"childrenGuids\")) {\n//             node.childrenGuids.forEach((childGuid) => {\n//                 this.refreshNode(this.getNode(childGuid));\n//             });\n//         }\n//     };\n//\n\n//\n//     this.collapseBranch = (node, traversedNodes) => {\n//         let thisIndex = this.getIndex(node);\n//         if (node.hasOwnProperty(\"numChildren\")) {\n//             this.hideChildren(node, true);\n//             /*\n//             for(let i = 1; i <= node.numChildren; i++) {\n//                 if (!node.collapsed) {\n//                     traversedNodes += this.collapseBranch(this.flatNodes[thisIndex + traversedNodes + 2]);\n//                     this.flatNodes[thisIndex + traversedNodes + 1].collapsed = true;\n//                     this.flatNodes[thisIndex + traversedNodes + 1].hide = true;\n//                 }\n//             }*/\n//         }\n//         return traversedNodes;\n//     };\n//\n//     this.hideChildren = (node, root) => {\n//         let totalHides = 0;\n//         if (!node) {\n//             return 0;\n//         }\n//         let thisIndex = this.getIndex(node);\n//\n//\n//\n//         if (node.hasOwnProperty(\"numChildren\")) {\n//             if (!node.childrenFetched) {\n//                 return 0;\n//             }\n//\n//             let nextIndex = thisIndex + 1;\n//             if ((nextIndex >= this.flatNodes.length) && (!node.collapsed)) {\n//                 console.log(\"Huh!\");\n//                 return 0;\n//             }\n//             for(let i = 1; i <= node.numChildren  && (nextIndex < this.flatNodes.length); i++) {\n//                 let hides = 0;\n//                 if (true) {\n//                     hides += this.hideChildren(this.flatNodes[nextIndex], false);\n//                 }\n//\n//                 this.flatNodes[nextIndex].collapsed = true;\n//                 this.flatNodes[nextIndex].hide = true;\n//                 totalHides += 1 + hides;\n//                 nextIndex += hides + 1;\n//\n//             }\n//         }\n//         /*\n//         if (!root) {\n//             this.flatNodes[thisIndex].collapsed = true;\n//             this.flatNodes[thisIndex].hide = true;\n//             totalHides += 1;\n//         }*/\n//         return totalHides;\n//     };\n//\n//     isNodeVisible = (node) => {\n//         return !node.hide;\n//     }\n//\n// }\n//\n//\n//\n//\n//\n//\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'funTableFilter',\n  pure: true\n})\nexport class FunTableFilterPipe implements PipeTransform {\n\n  transform(items: any[], filter: Map<number, boolean>): any {\n    console.log(\"Filter Pipe\");\n    if (!items || !filter) {\n            return items;\n        }\n\n        return items.filter(item => {\n            if(items.indexOf(item) < filter.size && filter.get(items.indexOf(item))) {\n              return true;\n            }\n            return false;\n        });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map} from 'rxjs/operators';\nimport {Observable, of} from \"rxjs\";\n\nexport class ApiResponse {\n  status: boolean;\n  data: object;\n  error_message: string;\n  message: string;\n  public constructor(\n    fields?: {\n      status?: boolean,\n      data?: object,\n      message?: string\n  }) {\n    if (fields) Object.assign(this, fields);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  private static handleError(error: HttpErrorResponse): Observable<ApiResponse> {\n    let result: ApiResponse = new ApiResponse();\n    result.status = false;\n    result.data = null;\n    result.error_message = `Http Error: Status: ${error.status} Text: ${error.statusText} URL: ${error.url}`; // TODO: Improve this\n    throw of(result);\n\n  }\n\n  post(url: string, payload: any): Observable<ApiResponse> {\n    return this.httpClient.post<ApiResponse>(url, payload)\n      .pipe(\n        map(response => {\n          return response;\n        }),\n        catchError(ApiService.handleError)\n      );\n  }\n\n  get(url: string): Observable<ApiResponse> {\n    return this.httpClient.get<ApiResponse>(url)\n      .pipe(\n        map(response => {\n          return response;\n        }),\n        catchError(ApiService.handleError)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6\n}\n\nexport class LogEntry {\n  // Public properties\n  entryDate: Date = new Date();\n  message = '';\n  level: LogLevel = LogLevel.Debug;\n  extraInfo: any[] = [];\n  logWithDate = true;\n\n  buildLogString(): string {\n    let ret = '';\n\n    if (this.logWithDate) {\n      ret = new Date() + ' - ';\n    }\n    ret += 'Type: ' + LogLevel[this.level];\n    ret += ' - Message: ' + this.message;\n    if (this.extraInfo.length) {\n      ret += ' - Extra Info: ' + LogEntry.formatParams(this.extraInfo);\n    }\n\n    return ret;\n  }\n\n  private static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    if (params.some(p => typeof p === 'object')) {\n      ret = '';\n      for (const item of params) {\n        ret += JSON.stringify(item) + ',';\n      }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable()\nexport class LoggerService {\n  // Public properties\n  level: LogLevel = LogLevel.All;\n  logWithDate = true;\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret = false;\n\n    if (this.level !== LogLevel.Off && level >= this.level) {\n      ret = true;\n    }\n\n    return ret;\n  }\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  log(msg: any, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n\n      console.log(entry);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\n        // calculate total pages\n        let totalPages = Math.ceil(totalItems / pageSize);\n\n        // ensure current page isn't out of range\n        if (currentPage < 1) {\n            currentPage = 1;\n        } else if (currentPage > totalPages) {\n            currentPage = totalPages;\n        }\n\n        let startPage: number, endPage: number;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        let startIndex = (currentPage - 1) * pageSize;\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n","module.exports = \"\"","module.exports = \"<!--<p>-->\\n  <!--test works!-->\\n\\n<!--</p>-->\\n<!--<div class=\\\"jumbotron text-center\\\">-->\\n  <!--<h1>My First Bootstrap Page</h1>-->\\n  <!--<p>Resize this responsive page to see the effect!</p>-->\\n<!--</div>-->\\n\\n<!--<div class=\\\"container\\\">-->\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 1</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 2</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 3</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n<!--</div>-->\\n\\n<!--<ul class=\\\"list-group\\\">-->\\n  <!--<li class=\\\"list-group-item active\\\">Active item</li>-->\\n  <!--<li class=\\\"list-group-item\\\">Second item</li>-->\\n  <!--<li class=\\\"list-group-item\\\">Third item</li>-->\\n<!--</ul>-->\\n\\n<!--<div class=\\\"container\\\">-->\\n  <!--<h2>Card Image</h2>-->\\n  <!--<p>Image at the top (card-img-top):</p>-->\\n  <!--<div class=\\\"card\\\" style=\\\"width:400px\\\">-->\\n    <!--<img class=\\\"card-img-top\\\" src=\\\"https://www.w3schools.com/bootstrap4/img_avatar1.png\\\" alt=\\\"Card image\\\" style=\\\"width:100%\\\">-->\\n    <!--<div class=\\\"card-body\\\">-->\\n      <!--<h4 class=\\\"card-title\\\">John Doe</h4>-->\\n      <!--<p class=\\\"card-text\\\">Some example text some example text. John Doe is an architect and engineer</p>-->\\n      <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">See Profile</a>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n  <!--<br>-->\\n\\n  <!--<p>Image at the bottom (card-img-bottom):</p>-->\\n  <!--<div class=\\\"card\\\" style=\\\"width:400px\\\">-->\\n    <!--<div class=\\\"card-body\\\">-->\\n      <!--<h4 class=\\\"card-title\\\">Jane Doe</h4>-->\\n      <!--<p class=\\\"card-text\\\">Some example text some example text. Jane Doe is an architect and engineer</p>-->\\n      <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">See Profile</a>-->\\n    <!--</div>-->\\n    <!--<img class=\\\"card-img-bottom\\\" src=\\\"img_avatar6.png\\\" alt=\\\"Card image\\\" style=\\\"width:100%\\\">-->\\n  <!--</div>-->\\n<!--</div>-->\\n<div class=\\\"card\\\">\\n  <fun-metric-chart [chartName]=\\\"'Best time for 1 malloc/free (WU)'\\\" [modelName]=\\\"'AllocSpeedPerformance'\\\"></fun-metric-chart>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  yValues: any = [];\n  xValues: any = [];\n  title: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    // let temp = [];\n    // temp[\"name\"] = 'series 1';\n    // temp[\"data\"] = [1,2,3,4,5];\n    // this.yValues[0] = temp;\n    this.yValues.push({ name: 'series 1', data: [1,2,3,4,5]});\n    this.yValues.push({ name: 'series 2', data: [6,7,8,9,10]});\n    this.yValues.push({ name: 'series 3', data: [11,12,13,14,15]});\n    this.yValues.push({ name: 'series 4', data: [16,17,18,19,20]});\n    this.yValues.push({ name: 'series 5', data: [21,22,23,24,25]});\n    this.xValues.push([0,1,2,3,4]);\n    this.title = \"Funchart\";\n    this.xAxisLabel = \"Date\";\n    this.yAxisLabel = \"Range\";\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}