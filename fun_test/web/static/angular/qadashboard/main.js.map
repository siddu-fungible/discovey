{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart/chart.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/fun-chart/fun-chart.component.css","webpack:///./src/app/fun-chart/fun-chart.component.html","webpack:///./src/app/fun-chart/fun-chart.component.ts","webpack:///./src/app/fun-table/fun-table.component.css","webpack:///./src/app/fun-table/fun-table.component.html","webpack:///./src/app/fun-table/fun-table.component.ts","webpack:///./src/app/performance/performance.component.css","webpack:///./src/app/performance/performance.component.html","webpack:///./src/app/performance/performance.component.ts","webpack:///./src/app/pipe/fun-table-filter.pipe.ts","webpack:///./src/app/services/api/api.service.ts","webpack:///./src/app/services/logger/logger.service.ts","webpack:///./src/app/services/pager/pager.service.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { PerformanceComponent } from \"./performance/performance.component\";\nimport {TestComponent} from \"./test/test.component\";\n\nconst routes: Routes = [\n  { path: 'upgrade', component: DashboardComponent },\n  { path: 'upgrade/dashboard', component: DashboardComponent },\n  { path: 'upgrade/performance', component: PerformanceComponent },\n  { path: 'upgrade/test', component: TestComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\" ng-app=\\\"qa-dashboard\\\">\\n<head>\\n    <title>QA Dashboard</title>\\n\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n\\n    <!-- css -->\\n    <!-- link href=\\\"static/css/common/bootstrap.min.css\\\"  rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\" -->\\n\\n</head>\\n<body>\\n  <h1>QA Dashboard</h1>\\n\\n<!--div class=\\\"nav-side-menu\\\" style=\\\"width: 10%\\\">\\n    <div class=\\\"brand\\\">Fungible QA</div>\\n    <i class=\\\"fa fa-bars fa-2x toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menu-content\\\"></i>\\n    <div class=\\\"menu-list\\\">\\n        <ul id=\\\"menu-content\\\" class=\\\"menu-content collapse out\\\">\\n            <li data-toggle=\\\"collapse\\\" data-target=\\\"#regression-tasks\\\">\\n                <a href=\\\"#\\\"><i class=\\\"fa fa-dashboard fa-lg\\\"></i>Regression<span class=\\\"arrow\\\"></span></a>\\n            </li>\\n            <ul class=\\\"sub-menu\\\" id=\\\"regression-tasks\\\">\\n                <li class=\\\"active\\\"><a href=\\\"/regression\\\">All Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/completed_jobs\\\">Completed Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/pending_jobs\\\">Pending Jobs</a></li>\\n                <li class=\\\"active\\\"><a href=\\\"/regression/jenkins_jobs\\\">Jenkins Jobs</a></li>\\n                <li><a href=\\\"/regression/submit_job_page\\\">Submit Jobs</a></li>\\n            </ul>\\n            <li data-toggle=\\\"collapse\\\" data-target=\\\"#test-case\\\" class=\\\"collapsed\\\">\\n                <a href=\\\"#\\\"><i class=\\\"fa fa-globe fa-lg\\\"></i> Test-cases <span class=\\\"arrow\\\"></span></a>\\n            </li>\\n            <ul class=\\\"sub-menu collapse\\\" id=\\\"test-case\\\">\\n                <li><a href=\\\"/tcm/view_catalog_page\\\">View Catalog</a></li>\\n                <li><a href=\\\"/tcm/create_catalog_page\\\">Create Catalog</a></li>\\n            </ul>\\n        </ul>\\n    </div>\\n</div-->\\n\\n<nav class=\\\"navbar navbar-default\\\" style=\\\"background-color: #337ab7;\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\n                    data-target=\\\"#qa-dashboard-navbar\\\" aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"/\\\" style=\\\"color: white\\\">Integration</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"qa-dashboard-navbar\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li>\\n                    <a href=\\\"/upgrade/performance\\\" style=\\\"color: white;background-color: #337ab7\\\" role=\\\"button\\\">Performance</a>\\n                </li>\\n\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"/common/home\\\" style=\\\"color: white;background-color: #337ab7\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\">Regression<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/regression\\\">All Jobs</a></li>\\n                        <li><a href=\\\"/regression/completed_jobs\\\">Completed Jobs</a></li>\\n                        <li><a href=\\\"/regression/pending_jobs\\\">Pending Jobs</a></li>\\n                        <li><a href=\\\"/regression/submit_job_page\\\">Submit Job</a></li>\\n                        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n                        <li><a href=\\\"/regression/jenkins_jobs\\\">Jenkins Jobs</a></li>\\n                        <li><a href=\\\"/regression/jobs_by_tag/network-sanity\\\">Networking Sanity</a></li>\\n                        <li><a href=\\\"/metrics/atomic/Unit-Tests/UnitTestPerformance\\\">FunOS Unit-Tests</a></li>\\n                    </ul>\\n                </li>\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\" style=\\\"color: white;background-color: #337ab7\\\">Test-cases<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/tcm/releases_page\\\">Releases</a> </li>\\n                        <li><a href=\\\"/tcm/view_catalogs\\\">View Catalogs</a></li>\\n                        <li><a href=\\\"/tcm/create_catalog_page\\\">Create Catalog</a></li>\\n                    </ul>\\n                </li>\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"#\\\" style=\\\"color: white;background-color: #337ab7\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\"\\n                       aria-expanded=\\\"false\\\">Administration<span class=\\\"caret\\\"></span></a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"/metrics\\\">All</a> </li>\\n                        <li><a href=\\\"/metrics/summary\\\">Summary</a></li>\\n                        <li><a href=\\\"/initialize\\\">Initialize</a></li>\\n                    </ul>\\n                </li>\\n            </ul>\\n            <!--form class=\\\"navbar-form navbar-left\\\">\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n            </form-->\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li><a href=\\\"/common/alerts_page\\\" role=\\\"button\\\" style=\\\"color: white;background-color: #337ab7\\\">Alerts</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<div class=\\\"content\\\" ng-controller=\\\"QaDashBoardController\\\" ng-if=\\\"showCommonError\\\">\\n    <div class=\\\"alert alert-danger alert-dismissible show\\\" role=\\\"alert\\\">\\n        <strong>{{ commonErrorMessage }} </strong>&nbsp <a href=\\\"{{ commonAlertLink }}\\\">Details</a> {{ detailError }}\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" ng-click=\\\"closeCommonError()\\\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n<div class=\\\"content\\\" ng-controller=\\\"QaDashBoardController\\\" ng-if=\\\"showCommonSuccess\\\">\\n    <div class=\\\"alert alert-success alert-dismissible show\\\" role=\\\"alert\\\">\\n        <strong>{{ commonSuccessMessage }}</strong>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" ng-click=\\\"closeCommonSuccess()\\\">&times;</span>\\n        </button>\\n    </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n</body>\\n</html>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'qadashboard';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSortModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { PerformanceComponent } from './performance/performance.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FunTableComponent } from './fun-table/fun-table.component';\nimport {ApiService} from \"./services/api/api.service\";\nimport {LoggerService} from \"./services/logger/logger.service\";\nimport { TestComponent } from './test/test.component';\nimport { FunTableFilterPipe } from './pipe/fun-table-filter.pipe';\nimport { ChartModule } from 'angular-highcharts';\nimport { ChartComponent } from './chart/chart.component';\nimport { FunChartComponent } from './fun-chart/fun-chart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PerformanceComponent,\n    FunTableComponent,\n    TestComponent,\n    FunTableFilterPipe,\n    ChartComponent,\n    FunChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSortModule,\n    ChartModule\n  ],\n\n  providers: [ApiService, LoggerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'angular-highcharts';\nimport { ApiService} from \"../services/api/api.service\";\n\n@Component({\n  selector: 'app-fun-chart',\n  template: `\n    <button (click)=\"add()\">Add Point!</button>\n    <div [chart]=\"chart\"></div>\n  `\n})\nexport class ChartComponent implements OnInit {\n  ngOnInit() {\n    // this.doSomething1();\n\n  }\n  constructor(private apiService: ApiService) {\n\n  }\n\n  chart = new Chart({\n    chart: {\n      type: 'line'\n    },\n    title: {\n      text: 'Linechart'\n    },\n    credits: {\n      enabled: false\n    },\n    series: [\n      {\n        name: 'Line 1',\n        data: [1, 2, 3]\n      }\n    ]\n  });\n  doSomething1(): void {\n    console.log(\"Doing Something1\");\n    let payload = {\"metric_id\": 122, \"date_range\": [\"2018-04-01T07:00:01.000Z\", \"2018-09-13T06:59:59.765Z\"]};\n    this.apiService.post('/metrics/scores', payload).subscribe(response => {\n        console.log(response.data);\n        this.delay(1000);\n      },\n      error => {\n        console.log(error);\n        this.delay(1000);\n\n      });\n  }\n\n   async delay(ms: number) {\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=> {\n            this.add();\n        this.doSomething1();\n      console.log(\"fired\")\n    });\n}\nr() {\n   return Math.random();\n}\n\n\n  // add point to chart serie\n  add() {\n    this.chart.addPoint(Math.floor(Math.random() * 10));\n  }\n}\n","module.exports = \"\"","module.exports = \"<title>QA Dashboard</title>\\n<div>\\n  My dashboard\\n  <app-performance></app-performance>\\n  <!--<app-test></app-test>-->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PerformanceComponent } from \"../performance/performance.component\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  fun-chart works!\\n</p>\\n<div class=\\\"card\\\">\\n<button (click)=\\\"add()\\\">Add Point!</button>\\n    <div [chart]=\\\"chart\\\"></div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Chart } from 'angular-highcharts';\n\n@Component({\n  selector: 'fun-chart',\n  templateUrl: './fun-chart.component.html',\n  styleUrls: ['./fun-chart.component.css']\n})\nexport class FunChartComponent implements OnInit {\n  // autoUpdate: any;\n  // charting: any;\n  // @Input() values: any[];\n  // updateChartsNow: any;\n  // showLegend: any;\n  // series: any;\n  // title: any;\n  // minimal: any;\n  // chartType: any;\n  // colors: any;\n  // width: any;\n  // height: any;\n  // xaxisTitle: any;\n  // yaxisTitle: any;\n  // pointClickCallback: any;\n  // xaxisFormatter: any;\n  // tooltipFormatter: any;\n  //\n  // genId: any = null;\n  @Input() yValues: any[];\n  @Input() xValues: any[];\n  @Input() title: string;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n\n  // @Input() xValues: any[];\n  // @Input() yValues: any[];\n\n  chart = new Chart({\n    chart: {\n      type: 'line',\n      height: 500,\n      width: 500\n    },\n    title: {\n      text: this.title\n    },\n    xAxis: {\n      labels: {\n        format: this.xAxisLabel\n      }\n    },\n    yAxis: {\n      labels: {\n        format: this.yAxisLabel\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    series: this.yValues\n  });\n\n  add() {\n    this.chart.addPoint(Math.floor(Math.random() * 10));\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    // this.yValues = {};\n    // this.xValues.foreach((input)  => {\n    //             this.yValues[input] = [];\n    //         });\n   // this.getRandomId();\n  }\n\n  // getRandomId() {\n  //   if (!this.genId) {\n  //     let min = Math.ceil(0);\n  //     let max = Math.floor(10000);\n  //     this.genId = Math.floor(Math.random() * (max - min + 1)) + min;\n  //     return this.genId;\n  //   } else {\n  //     return this.genId;\n  //   }\n  // }\n\n}\n//\n//                 if (ctrl.charting) {\n//                     $timeout(function () {\n//                          if (ctrl.chartType === \"line-chart\") {\n//                             let series = angular.copy(ctrl.values);\n//                             let chartInfo = {\n//                                 chart: {\n//                                     height: ctrl.height,\n//                                     width: ctrl.width\n//                                 },\n//                                 title: {\n//                                     text: ctrl.title\n//                                 },\n//\n//                                 subtitle: {\n//                                     text: ''\n//                                 },\n//                                 xAxis: {\n//                                     categories: ctrl.series,\n//                                     title: {\n//                                         text: ctrl.xaxisTitle\n//                                     }\n//                                 },\n//\n//                                 yAxis: {\n//                                     title: {\n//                                         text: ctrl.yaxisTitle\n//                                     }\n//                                 },\n//                                 legend: {\n//                                     layout: 'vertical',\n//                                     align: 'right',\n//                                     verticalAlign: 'middle'\n//                                 },\n//                                 credits: {\n//                                     enabled: false\n//                                 },\n//                                 plotOptions: {\n//                                     line: {\n//                                         animation: false,\n//                                         marker: {\n//                                             enabled: true\n//                                         }\n//                                     },\n//                                     series: {\n//                                         animation: false,\n//                                         label: {\n//                                             connectorAllowed: false\n//                                         },\n//                                         point: {\n//                                             events: {\n//                                                 click: function (e) {\n//                                                     /*location.href = 'https://en.wikipedia.org/wiki/' +\n//                                                         this.options.key;*/\n//                                                     console.log(ctrl.pointClickCallback);\n//                                                     ctrl.pointClickCallback()(e.point);\n//                                                 }\n//                                             }\n//                                         }\n//                                     }\n//\n//                                 },\n//\n//                                 series: series,\n//\n//\n//                                 responsive: {\n//                                     rules: [{\n//                                         condition: {\n//                                             maxWidth: 500\n//                                         },\n//                                         chartOptions: {\n//                                             legend: {\n//                                                 layout: 'horizontal',\n//                                                 align: 'center',\n//                                                 verticalAlign: 'bottom'\n//                                             }\n//                                         }\n//                                     }]\n//                                 }\n//\n//                             };\n//                             try {\n//                                 if (ctrl.xaxisFormatter && ctrl.xaxisFormatter()()) {\n//                                     chartInfo.xAxis[\"labels\"] = {formatter: function () {\n//                                         return ctrl.xaxisFormatter()(this.value);\n//                                     }};\n//                                 }\n//\n//                                 if (ctrl.tooltipFormatter && ctrl.tooltipFormatter()()) {\n//                                     chartInfo.tooltip = {\n//                                         formatter: function () {\n//                                             return ctrl.tooltipFormatter()(this.x, this.y);\n//                                         }\n//                                     }\n//                                 }\n//\n//                                 if (ctrl.pointClickCallback && ctrl.pointClickCallback()()) {\n//                                     chartInfo.plotOptions.series[\"point\"] = {\n//                                         events: {\n//                                             click: function (e) {\n//                                                 ctrl.pointClickCallback()(e.point);\n//                                             }\n//                                         }\n//                                     }\n//                                 }\n//                             } catch (e) {\n//                                 console.log(e);\n//\n//                             }\n//\n//\n//                             Highcharts.chart(\"c-\" + $scope.genId, chartInfo);\n//                         } }, 10);\n//\n//                 }\n//             }, true);\n//\n//         ctrl.$onInit = function () {\n//\n//             //[\"Sent\", \"Received\"];\n//             $scope.xValue = 0;\n//             $scope.values = {};\n//             angular.forEach(ctrl.series, function (input) {\n//                 $scope.values[input] = [];\n//             });\n//\n//             /*$timeout($scope.repeat, 1000);*/\n//\n//\n//         };\n//\n//         $scope.repeat = function () {\n//             console.log(ctrl);\n//             $timeout($scope.repeat, 1000);\n//         }\n//\n//     }\n//             autoUpdate: '<',\n//             charting: '<',\n//             values: '<',\n//             updateChartsNow: '=',\n//             showLegend: '<',\n//             series: '<',\n//             title: '<',\n//             minimal: '<',\n//             chartType: '@',\n//             colors: '<',\n//             width: '<',\n//             height: '<',\n//             xaxisTitle: '<',\n//             yaxisTitle: '<',\n//             pointClickCallback: '&',\n//             xaxisFormatter: '&',\n//             tooltipFormatter: '&'\n//         }\n//     });\n//\n// })(window.angular);\n","module.exports = \".tableContainer {\\n  margin: 5px;\\n  padding: 5px;\\n}\\n/*.switch {*/\\n/*position: relative;*/\\n/*display: inline-block;*/\\n/*width: 40px;*/\\n/*height: 20px;*/\\n/*}*/\\n/*.switch input {display:none;}*/\\n/*.slider {*/\\n/*position: absolute;*/\\n/*cursor: pointer;*/\\n/*top: 0;*/\\n/*left: 0;*/\\n/*right: 0;*/\\n/*bottom: 0;*/\\n/*background-color: #ccc;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*.slider:before {*/\\n/*position: absolute;*/\\n/*content: \\\"\\\";*/\\n/*height: 20px;*/\\n/*width: 20px;*/\\n/*background-color: white;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*input:checked + .slider {*/\\n/*background-color: #2196F3;*/\\n/*}*/\\n/*input:focus + .slider {*/\\n/*box-shadow: 0 0 1px #2196F3;*/\\n/*}*/\\n/*input:checked + .slider:before {*/\\n/*-webkit-transform: translateX(26px);*/\\n/*-ms-transform: translateX(26px);*/\\n/*transform: translateX(26px);*/\\n/*}*/\\n/*!* Rounded sliders *!*/\\n/*.slider.round {*/\\n/*border-radius: 20px;*/\\n/*}*/\\n/*.slider.round:before {*/\\n/*border-radius: 50%;*/\\n/*}*/\\n.fake-link {\\n    color: blue;\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\na {\\n  cursor: pointer;\\n}\\n#pageDiv {\\n  float: right;\\n  padding: 10px;\\n}\\n#advancedLink {\\n  margin: 5px;\\n}\\n/*.switch {*/\\n/*width: 40px;*/\\n/*margin: 5px;*/\\n/*}*/\\n/*.slider {*/\\n/*right: 10px;*/\\n/*}*/\\n/*.round {*/\\n/*right: 5px;*/\\n/*}*/\\n/* The switch - the box around the slider */\\n/*.switch {*/\\n/*position: relative;*/\\n/*display: inline-block;*/\\n/*width: 30px;*/\\n/*height: 15px;*/\\n/*}*/\\n/*!* Hide default HTML checkbox *!*/\\n/*.switch input {display:none;}*/\\n/*!* The slider *!*/\\n/*.slider {*/\\n/*position: absolute;*/\\n/*cursor: pointer;*/\\n/*top: 0;*/\\n/*left: 0;*/\\n/*right: 0;*/\\n/*bottom: 0;*/\\n/*background-color: #ccc;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*.slider:before {*/\\n/*position: absolute;*/\\n/*content: \\\"\\\";*/\\n/*height: 10px;*/\\n/*width: 10px;*/\\n/*background-color: white;*/\\n/*-webkit-transition: .4s;*/\\n/*transition: .4s;*/\\n/*}*/\\n/*input.default:checked + .slider {*/\\n/*background-color: #444;*/\\n/*}*/\\n/*input.primary:checked + .slider {*/\\n/*background-color: #2196F3;*/\\n/*}*/\\n/*input.success:checked + .slider {*/\\n/*background-color: #8bc34a;*/\\n/*}*/\\n/*input.info:checked + .slider {*/\\n/*background-color: #3de0f5;*/\\n/*}*/\\n/*input.warning:checked + .slider {*/\\n/*background-color: #FFC107;*/\\n/*}*/\\n/*input.danger:checked + .slider {*/\\n/*background-color: #f44336;*/\\n/*}*/\\n/*input:focus + .slider {*/\\n/*box-shadow: 0 0 1px #2196F3;*/\\n/*}*/\\n/*input:checked + .slider:before {*/\\n/*-webkit-transform: translateX(26px);*/\\n/*-ms-transform: translateX(26px);*/\\n/*transform: translateX(26px);*/\\n/*}*/\\n/*!* Rounded sliders *!*/\\n/*.slider.round {*/\\n/*border-radius: 10px;*/\\n/*}*/\\n/*.slider.round:before {*/\\n/*border-radius: 50%;*/\\n/*}*/\\n\"","module.exports = \"<p>\\n  table works!\\n</p>\\n<div class=\\\"card tableContainer\\\">\\n  <div>\\n    <div>\\n      <!-- pager -->\\n      <div id=\\\"pageDiv\\\" *ngIf=\\\"pager.pages && pager.pages.length\\\">\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(1)\\\">First </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous </a>\\n        </span>\\n        <span *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n          <a (click)=\\\"setPage(page)\\\">{{page}} </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next </a>\\n        </span>\\n        <span [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.totalPages)\\\">Last </a>\\n        </span>\\n      </div>\\n      <!-- items being paged -->\\n      <table class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n        <tr>\\n            <th *ngFor=\\\"let header of filtered(headers)\\\" mat-sort-header=\\\"{{headers.indexOf(header)}}\\\">{{ header }}</th>\\n          <!--<th *ngFor=\\\"let header of headers\\\" mat-sort-header=\\\"{{headers.indexOf(header)}}\\\">{{ header }}</th>-->\\n          <!-- th *ngFor=\\\"let key of headerIndexMap.keys()\\\" >{{ headers[key] }}</th-->\\n        </tr>\\n        <tr *ngFor=\\\"let item of pagedItems\\\">\\n            <td *ngFor=\\\"let rowItems of filtered(item)\\\">{{rowItems}}</td>\\n          <!--<td *ngFor=\\\"let rowItems of item\\\">{{rowItems}}</td>-->\\n        </tr>\\n      </table>\\n      <a id=\\\"advancedLink\\\" (click)=\\\"editColumns()\\\">Advanced</a>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"hideShowColumns\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">Columns</div>\\n      <div class=\\\"panel-body\\\" style=\\\"vertical-align: center;\\\">\\n          <table>\\n            <tr *ngFor=\\\"let header of headers\\\">\\n              <td>\\n               <label>\\n                 {{header}}\\n               </label>\\n              </td>\\n              <td style=\\\"padding: 10px; margin: 5px;\\\">\\n                <label class=\\\"switch\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"headerIndexMap.get(headers.indexOf(header))\\\" (change)=\\\"setHeaders(header)\\\" class=\\\"switch\\\" data-toggle=\\\"toggle\\\" >\\n          <span class=\\\"slider round\\\"></span>\\n        </label>\\n              </td>\\n            </tr>\\n          </table>\\n\\n      </div>\\n    </div>\\n    <button (click)=\\\"editColumns()\\\" style=\\\"margin: 5px;\\\">Close</button>\\n  </div>\\n</div>\\n\"","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {Sort} from '@angular/material';\nimport {PagerService} from '../services/pager/pager.service';\nimport {LoggerService} from \"../services/logger/logger.service\";\nimport {ApiService} from \"../services/api/api.service\";\n\n@Component({\n  selector: 'fun-table',\n  templateUrl: './fun-table.component.html',\n  styleUrls: ['./fun-table.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\n\nexport class FunTableComponent implements OnInit {\n  headers: any[];\n  // originalHeaders: any[];\n  rows: any[];\n  // originalRows: any[];\n  pageSize: number;\n  hideShowColumns: boolean = false;\n  headerIndexMap: Map<number, boolean> = new Map<number, boolean>();\n  static readonly defaultPageSize: number = 10;\n\n  constructor(private apiService: ApiService, private pagerService: PagerService, private logger: LoggerService, private changeDetector: ChangeDetectorRef) {\n    this.logger.log(\"FunTableComponent init\");\n  }\n\n  // private allItems: any = [];\n  pager: any = {};\n  pagedItems: any[];\n  // originalData: any[];\n  @Input() data: any = [];\n  @Output() nextPage: EventEmitter<number> = new EventEmitter();\n\n  ngOnInit() {\n    if (this.data.rows && this.data.rows.length === 10000) {\n      this.logger.log(\"10000 rows\");\n    }\n    // this.doSomething1();\n  }\n\n  //setting the page number\n  setPage(page: number) {\n    // get pager object from service\n    if (!this.data.all) {\n      this.nextPage.emit(page);\n    } else {\n      this.setPagedItems(page);\n    }\n  }\n\n  //setting the rows to be displayed by the template\n  setPagedItems(page: number) {\n    this.pager = this.pagerService.getPager(this.data.totalLength, page, this.pageSize);\n    if (this.data.all) {\n      this.pagedItems = this.rows.slice(this.pager.startIndex, this.pager.endIndex + 1);\n    } else {\n      this.pagedItems = this.rows.slice(0, this.pageSize);\n    }\n  }\n\n  ngOnChanges() {\n    if (this.data.currentPageIndex < 0) {\n      this.logger.fatal(\"Page Index is less than 1\");\n    } else {\n      this.rows = this.data.rows;\n      this.headers = this.data.headers;\n      // this.originalHeaders = this.data.headers;\n      // this.originalRows = this.data.rows;\n      for (let i in this.headers) {\n        this.headerIndexMap.set(Number(i), true);\n      }\n      // this.headerIndexMap.set(0, true);\n      // this.originalData = Array.from(this.rows);\n      if (this.data.pageSize) {\n        this.pageSize = this.data.pageSize;\n      }\n      else {\n        this.pageSize = FunTableComponent.defaultPageSize;\n      }\n      this.setPagedItems(this.data.currentPageIndex);\n      //this.setPage(1);\n    }\n  }\n\n  //sorts the input rows in the data\n  sortData(sort: Sort) {\n    if (!sort.active || sort.direction === '') {\n      // this.pagedItems = Array.from(this.originalData);\n      // this.rows = this.pagedItems;\n      // this.setPage(1);\n      return;\n    }\n    this.pagedItems = this.rows.sort((a, b) => {\n      const isAscending = sort.direction === 'asc';\n      if (sort.active) {\n        return compare(a[sort.active], b[sort.active], isAscending);\n      }\n    });\n    this.setPage(1);\n  }\n\n  //toggle between hide and show columns\n  editColumns() {\n    this.logger.log(\"Open form is entered\");\n    this.headerIndexMap.forEach((value, key) => {\n      console.log(Number(key) ,this.headerIndexMap.get(Number(key)));\n    });\n    this.hideShowColumns = !this.hideShowColumns;\n  }\n\n  setHeaders(header) {\n    // this.headerIndexMap.set(this.originalHeaders.indexOf(header), !this.headerIndexMap.get(this.originalHeaders.indexOf(header)));\n    // let newHeaders = this.originalHeaders.filter(item => {\n    //   if(this.headerIndexMap.get(this.originalHeaders.indexOf(item)) === true) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // for (let i = 0; i < this.originalRows.length; i++) {\n    //   this.rows[i] = this.originalRows[i].filter(item => {\n    //   if(this.headerIndexMap.get(this.originalHeaders.indexOf(item)) === true) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n    // }\n    // this.headers = newHeaders;\n    // // this.setPage(1);\n    this.headerIndexMap.set(this.headers.indexOf(header), !this.headerIndexMap.get(this.headers.indexOf(header)));\n    // this.filtered(this.headers);\n    // this.changeDetector.detectChanges();\n  }\n\n  // filteredHeaders(indexMap) {\n  //   console.log(\"filtered header\");\n  //   return this.headers.filter(item => {\n  //           if(this.headers.indexOf(item) < indexMap.size && indexMap.get(this.headers.indexOf(item))) {\n  //             return true;\n  //           }\n  //           return false;\n  //       });\n  // }\n\n  filtered(item) {\n    return item.filter(oldItem => {\n            if(item.indexOf(oldItem) < this.headerIndexMap.size && this.headerIndexMap.get(item.indexOf(oldItem))) {\n              return true;\n            }\n            return false;\n        });\n  }\n    doSomething1(): void {\n    console.log(\"Doing Something1\");\n    let payload = {\"metric_id\": 122, \"date_range\": [\"2018-04-01T07:00:01.000Z\", \"2018-09-13T06:59:59.765Z\"]};\n    this.apiService.post('/metrics/scores', payload).subscribe(response => {\n        //console.log(response.data);\n\n      },\n      error => {\n        //console.log(error);\n        this.delay(1000)\n        this.doSomething1();\n      });\n\n  }\n  async delay(ms: number) {\n    await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\n}\nr() {\n   return Math.random();\n}\n\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  performance works!\\n</p>\\n<!--<li *ngFor='let in of counter(50) ;let i = index'>{{i}}-->\\n  <!--<fun-chart></fun-chart>-->\\n<!--</li>-->\\n<fun-chart></fun-chart>\\n<fun-table (nextPage)=\\\"setValues($event)\\\" [data]=\\\"data\\\"></fun-table>\\n<app-test></app-test>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from \"../services/api/api.service\";\nimport {LoggerService} from \"../services/logger/logger.service\";\n\n@Component({\n  selector: 'app-performance',\n  templateUrl: './performance.component.html',\n  styleUrls: ['./performance.component.css']\n})\nexport class PerformanceComponent implements OnInit {\n  numGridColumns: number;\n  lastStatusUpdateTime: any;\n  mode: string;\n  jenkinsJobIdMap: any;\n  buildInfo: any;\n  flatNodes: any;\n  metricMap: any;\n  cachedNodeInfo: any;\n  goodnessTrendValues: any;\n  inner: any;\n  currentNodeChildrenGuids: any;\n  validDates: any;\n  collapsedAll: boolean;\n  expandedAll: boolean;\n\n\n  constructor(private apiService: ApiService, private logger: LoggerService) {\n    this.logger.log(\"Performance component init\");\n  }\n\n  private componentState: string = \"Unknown\";\n  data: any = [];\n\n  ngOnInit() {\n    this.data[\"rows\"] = [['hi', 'hello'], ['how', 'are'], ['you', 'its'], ['been', 'a'], ['long', 'time'], ['also', 'when'], ['where', 'how'], ['are', 'we'], ['meeting', 'if'], ['hey', 'buddy'], ['let', 'go'], ['we', 'will']];\n    this.data[\"headers\"] = ['Names', 'Numbers'];\n    this.data[\"all\"] = true;\n\n    this.data[\"totalLength\"] = 12;\n    this.data[\"currentPageIndex\"] = 1;\n    this.data[\"pageSize\"] = 10;\n\n\n    //this.getLastStatusUpdateTime();\n    this.numGridColumns = 2;\n    if(window.screen.width <= 1441) {\n            this.numGridColumns = 2;\n    }\n\n    this.mode = null;\n    //this.fetchJenkinsJobIdMap();\n\n    this.flatNodes = [];\n    this.metricMap = {};\n    this.cachedNodeInfo = {};\n\n    // this.fetchRootMetricInfo(\"Total\", \"MetricContainer\").then((data) => {\n    //   let metricId = data.metric_id;\n    //   let p1 = {metric_id: metricId};\n    //   this.apiService.post('/metrics/metric_info', p1).subscribe((data) => {\n    //     this.populateNodeInfoCache(data);\n    //     let newNode = this.getNodeFromData(data).then((newNode) => {\n    //       newNode.guid = this.guid();\n    //       newNode.hide = false;\n    //       newNode.indent = 0;\n    //       this.flatNodes.push(newNode);\n    //       // this.expandNode(newNode);\n    //       this.collapsedAll = true;\n    //     });\n    //\n    //   },\n    //     error => {\n    //         console.log(error);\n    //         this.componentState = \"Error\";\n    //       });\n    //   return data;\n    // });\n\n    this.goodnessTrendValues = null;\n    this.inner = {};\n    this.inner.nonAtomicMetricInfo = \"\";\n    this.currentNodeChildrenGuids = null;\n    this.validDates = null;\n  }\n  //\n  // getLastStatusUpdateTime(): void {\n  //       this.apiService.get('/common/time_keeper/' + \"last_status_update\").subscribe((data) => {\n  //           this.lastStatusUpdateTime = data;\n  //       },\n  //         error => {\n  //           console.log(error);\n  //           this.componentState = \"Error\";\n  //         });\n  //   }\n  //\n  //   fetchJenkinsJobIdMap(): void {\n  //       this.apiService.get('/regression/jenkins_job_id_maps').subscribe((data) => {\n  //           this.jenkinsJobIdMap = data;\n  //           this.apiService.get('/regression/build_to_date_map').subscribe((data) => {\n  //               this.buildInfo = data;\n  //           },\n  //             error => {\n  //           console.log(error);\n  //           this.componentState = \"Error\";\n  //         });\n  //       },\n  //         error => {\n  //           console.log(error);\n  //           this.componentState = \"Error\";\n  //         });\n  //   }\n  //\n  //   fetchRootMetricInfo(chartName, metricModelName): any {\n  //       let payload = {\"metric_model_name\": metricModelName, chart_name: chartName};\n  //       return this.apiService.post('/metrics/chart_info', payload).subscribe((data) => {\n  //           return data;\n  //       },\n  //        error => {\n  //       console.log(error);\n  //       this.componentState = \"Error\";\n  //       });\n  //   }\n  //\n  //   populateNodeInfoCache(data): void {\n  //       if (!(data.metric_id in this.cachedNodeInfo)) {\n  //           this.cachedNodeInfo[data.metric_id] = data;\n  //       }\n  //       data.children_info.forEach((value, key) => {\n  //          this.cachedNodeInfo[key] = value;\n  //          value.children_info.forEach((v2, key2) => {\n  //              this.populateNodeInfoCache(v2);\n  //          });\n  //       });\n  //   }\n  //\n  //   guid(): any {\n  //     function s4() {\n  //       return Math.floor((1 + Math.random()) * 0x10000)\n  //         .toString(16)\n  //         .substring(1);\n  //     }\n  //     return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  //   }\n  //\n  //   expandAllNodes(): void {\n  //       this.flatNodes.forEach((node) => {\n  //           this.expandNode(node, true);\n  //       });\n  //       this.collapsedAll = false;\n  //       this.expandedAll = true;\n  //   }\n  //\n  //   collapseAllNodes(): void {\n  //       this.collapseNode(this.flatNodes[0]);\n  //       this.expandedAll = false;\n  //       this.collapsedAll = true;\n  //   };\n  //\n  // expandNode(node, all): any {\n  //       node.collapsed = false;\n  //       if (node.hasOwnProperty(\"numChildren\") && (node.numChildren > 0)) {\n  //           let thisNode = node;\n  //           return this.fetchMetricInfoById(node).then((data) => {\n  //               console.log(\"Fetching Metrics Info for node:\" + node.metricId);\n  //               node.hide = false;\n  //               let childrenIds = JSON.parse(data.children);\n  //               return this._insertNewNode(node, childrenIds, all, node.childrenFetched).then(() => {\n  //                   console.log(\"Inserted: \" + node.chartName);\n  //                   node.childrenFetched = true;\n  //                   return null;\n  //               });\n  //\n  //           });\n  //       }\n  //       else {\n  //           return null;\n  //       }\n  //   }\n  //\n  //   fetchMetricInfoById(node): any {\n  //       let thisNode = node;\n  //       let p1 = {metric_id: node.metricId};\n  //       if (node.metricId in this.cachedNodeInfo) {\n  //           return this.cachedNodeInfo[node.metricId];\n  //       }\n  //       return this.apiService.post('/metrics/metric_info', p1).subscribe((data) => {\n  //          return data;\n  //       },\n  //         error => {\n  //           console.log(error);\n  //           this.componentState = \"Error\";\n  //         });\n  //   }\n  //\n  //   collapseNode(node): void {\n  //       if (node.hasOwnProperty(\"numChildren\")) {\n  //           // this.collapseBranch(node);\n  //       }\n  //       node.collapsed = true;\n  //   }\n  //\n  //   collapseBranch(node, traversedNodes): any {\n  //       let thisIndex = this.getIndex(node);\n  //       if (node.hasOwnProperty(\"numChildren\")) {\n  //           this.hideChildren(node, true);\n  //       }\n  //       return traversedNodes;\n  //   }\n  //\n  //   hideChildren(node, root): any {\n  //       let totalHides = 0;\n  //       if (!node) {\n  //           return 0;\n  //       }\n  //       let thisIndex = this.getIndex(node);\n  //\n  //       if (node.hasOwnProperty(\"numChildren\")) {\n  //           if (!node.childrenFetched) {\n  //               return 0;\n  //           }\n  //\n  //           let nextIndex = thisIndex + 1;\n  //           if ((nextIndex >= this.flatNodes.length) && (!node.collapsed)) {\n  //               console.log(\"Huh!\");\n  //               return 0;\n  //           }\n  //           for(let i = 1; i <= node.numChildren  && (nextIndex < this.flatNodes.length); i++) {\n  //               let hides = 0;\n  //               if (true) {\n  //                   hides += this.hideChildren(this.flatNodes[nextIndex], false);\n  //               }\n  //\n  //               this.flatNodes[nextIndex].collapsed = true;\n  //               this.flatNodes[nextIndex].hide = true;\n  //               totalHides += 1 + hides;\n  //               nextIndex += hides + 1;\n  //\n  //           }\n  //       }\n  //       return totalHides;\n  //   };\n  //\n  //   _insertNewNode(node, childrenIds, all, alreadyInserted): any {\n  //       if (childrenIds.length <= 0) {\n  //           return;\n  //       }\n  //       let thisNode = node;\n  //       let thisAll = all;\n  //       let childId = childrenIds.pop();\n  //       let thisChildrenIds = childrenIds;\n  //       let p1 = {metric_id: childId};\n  //       if (!node.hasOwnProperty(\"childrenGuids\")) {\n  //           node.childrenGuids = [];\n  //       }\n  //\n  //       return this.fetchMetricInfoById({metricId: childId}).then((data) => {\n  //           if (!alreadyInserted) {\n  //               console.log(\"!alreadyInserted\");\n  //               return this.getNodeFromData(data).then((newNode) => {\n  //                   newNode.guid = this.guid();\n  //                   thisNode.lineage.forEach((ancestor) => {\n  //                      newNode.lineage.push(ancestor);\n  //                   });\n  //                   newNode.lineage.push(thisNode.guid);\n  //                   console.log(\"Added childGuid for node:\" + node.chartName);\n  //                   node.childrenGuids.push(newNode.guid);\n  //\n  //                   newNode.indent = thisNode.indent + 1;\n  //                   let index = this.getIndex(thisNode);\n  //                   this.flatNodes.splice(index + 1, 0, newNode);\n  //                   this._insertNewNode(thisNode, thisChildrenIds, thisAll, alreadyInserted);\n  //                   newNode.hide = false;\n  //                   if (thisAll) {\n  //                       this.expandNode(newNode, thisAll);\n  //                   }\n  //               });\n  //\n  //           } else {\n  //               console.log(\"alreadyInserted\");\n  //               node.childrenGuids.forEach((childGuid) => {\n  //                  let childNode = this.flatNodes[this.getIndex({guid: childGuid})];\n  //                  //let childrenIds = JSON.parse(data.children);\n  //                  childNode.hide = false;\n  //\n  //               });\n  //\n  //               this._insertNewNode(thisNode, thisChildrenIds, thisAll, alreadyInserted);\n  //           }\n  //           return null;\n  //       });\n  //   }\n  //\n  //   getIndex(node): any {\n  //       let index = this.flatNodes.map(function(x) {return x.guid;}).indexOf(node.guid);\n  //       return index;\n  //   }\n  //\n  //   getNodeFromData(data): any {\n  //       let newNode = {\n  //           info: data.description,\n  //           label: data.chart_name,\n  //           collapsed: true,\n  //           metricId: data.metric_id,\n  //           hide: true,\n  //           leaf: data.leaf,\n  //           chartName: data.chart_name,\n  //           metricModelName: data.metric_model_name,\n  //           childrenWeights: JSON.parse(data.children_weights),\n  //           children: {},\n  //           lineage: [],\n  //           numChildDegrades: data.last_num_degrades,\n  //           positive: data.positive,\n  //           numChildrenPassed: data.num_children_passed,\n  //           numChildrenFailed: data.last_num_build_failed,\n  //           lastBuildStatus: data.last_build_status,\n  //           numLeaves: data.num_leaves,\n  //           childrenScoreMap: {},\n  //           status: false,\n  //           numChildren: null\n  //\n  //       };\n  //       this.metricMap[newNode.metricId] = {chartName: newNode.chartName};\n  //       if (newNode.info === \"\") {\n  //           newNode.info = \"<p>Please update the description</p>\";\n  //       }\n  //\n  //       let dateRange = this.getDateRange();\n  //       let fromDate = dateRange[0];\n  //       let toDate = dateRange[1];\n  //       return this.fetchScores(data.metric_id, fromDate.toISOString(), toDate.toISOString()).then((scoreData) => {\n  //           newNode.childrenScoreMap = scoreData[\"children_score_map\"];\n  //           this.evaluateScores(newNode, scoreData[\"scores\"]);\n  //           newNode.childrenWeights.forEach((info, childId) => {\n  //               newNode.children[childId] = {weight: newNode.childrenWeights[childId], editing: false};\n  //           });\n  //\n  //           if (newNode.lastBuildStatus === \"PASSED\") {\n  //               newNode.status = true;\n  //           } else {\n  //               newNode.status = false;\n  //           }\n  //\n  //           let newNodeChildrenIds = JSON.parse(data.children);\n  //           if (newNodeChildrenIds.length > 0) {\n  //               newNode.numChildren = newNodeChildrenIds.length;\n  //           }\n  //           return newNode;\n  //       });\n  //   }\n  //\n  //   fetchScores(metricId, fromDate, toDate): any {\n  //       let payload = {};\n  //       payload[\"metric_id\"] = metricId;\n  //       payload[\"date_range\"] = [fromDate, toDate];\n  //       return this.apiService.post('/metrics/scores', payload).subscribe((data) => {\n  //           return data;\n  //       },\n  //         error => {\n  //           console.log(error);\n  //           this.componentState = \"Error\";\n  //         });\n  //   }\n  //\n  //   getDateRange(): any {\n  //       let today = new Date();\n  //       console.log(today);\n  //       let startMonth = 4 - 1;\n  //       let startDay = 1;\n  //       let startMinute = 59;\n  //       let startHour = 23;\n  //       let startSecond = 1;\n  //       let fromDate = new Date(today.getFullYear(), startMonth, startDay, startHour, startMinute, startSecond);\n  //       fromDate = this.getDateBound(fromDate, true);\n  //\n  //       let yesterday = this.getYesterday(today);\n  //       let toDate = new Date(yesterday);\n  //       toDate = this.getDateBound(toDate, false);\n  //       return [fromDate, toDate];\n  //   }\n  //\n  //   getYesterday(today): any {\n  //       let yesterday = new Date(today);\n  //       yesterday.setDate(yesterday.getDate() - 1);\n  //       return yesterday;\n  //   }\n  //\n  //   getDateBound(dt, lower): any {\n  //       let newDay = new Date(dt);\n  //       if (lower) {\n  //           newDay.setHours(0, 0, 1);\n  //       } else {\n  //           newDay.setHours(23, 59, 59);\n  //       }\n  //       return newDay;\n  //   }\n  //\n  //   evaluateScores(node, scores): void {\n  //\n  //       let keys = Object.keys(scores);\n  //       let sortedKeys = keys.sort();\n  //       if (node.chartName === \"Total\") {\n  //           this.validDates = sortedKeys;\n  //       }\n  //\n  //       if (Object.keys(scores).length) {\n  //           let mostRecentDateTimestamp = sortedKeys.slice(-1)[0];\n  //           let mostRecentDate = new Date(mostRecentDateTimestamp);\n  //           console.log(mostRecentDate);\n  //           console.log(scores[mostRecentDateTimestamp].score);\n  //       }\n  //       let goodnessValues = [];\n  //       sortedKeys.forEach((key) => {\n  //           goodnessValues.push(scores[key].score);\n  //       });\n  //\n  //       node.goodnessValues = goodnessValues;\n  //       try {\n  //               node.goodness = Number(goodnessValues[goodnessValues.length - 1].toFixed(1));\n  //       } catch (e) {\n  //\n  //       }\n  //\n  //       node.childrenGoodnessMap = {};\n  //       node.trend = \"flat\";\n  //       if (goodnessValues.length > 1) {\n  //           let penultimateGoodness = Number(goodnessValues[goodnessValues.length - 2].toFixed(1));\n  //           if (penultimateGoodness > node.goodness) {\n  //               node.trend = \"down\";\n  //           } else if (penultimateGoodness < node.goodness) {\n  //               node.trend = \"up\";\n  //           }\n  //           if (Number(goodnessValues[goodnessValues.length - 1].toFixed(1)) === 0) {\n  //               node.trend = \"down\";\n  //           }\n  //       }\n  //       console.log(\"Node: \" + node.chartName + \" Goodness: \" + node.goodness);\n  //   }\n\n  doSomething1(): void {\n    console.log(\"Doing Something1\");\n    let payload = {\"metric_id\": 122, \"date_range\": [\"2018-04-01T07:00:01.000Z\", \"2018-09-13T06:59:59.765Z\"]};\n    this.apiService.post('/metrics/scores', payload).subscribe(response => {\n        console.log(response.data);\n        this.componentState = response.message;\n      },\n      error => {\n        console.log(error);\n        this.componentState = \"Error\";\n      });\n\n  }\n\n  getComponentState(): string {\n    return this.componentState;\n  }\ncounter(i: number) {\n    return new Array(i);\n  }\n\n\n  setValues(pageNumber): void {\n    this.data[\"rows\"] = [['hi', 'hello'], ['how', 'are']];\n    this.data[\"headers\"] = ['Names', 'Numbers'];\n    this.data[\"all\"] = false;\n    this.data[\"totalLength\"] = 14;\n    this.data[\"currentPageIndex\"] = pageNumber;\n    this.data[\"pageSize\"] = this.data[\"rows\"].length;\n\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'funTableFilter',\n  pure: true\n})\nexport class FunTableFilterPipe implements PipeTransform {\n\n  transform(items: any[], filter: Map<number, boolean>): any {\n    console.log(\"Filter Pipe\");\n    if (!items || !filter) {\n            return items;\n        }\n\n        return items.filter(item => {\n            if(items.indexOf(item) < filter.size && filter.get(items.indexOf(item))) {\n              return true;\n            }\n            return false;\n        });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map} from 'rxjs/operators';\nimport {Observable, of} from \"rxjs\";\n\nexport class ApiResponse {\n  status: boolean;\n  data: object;\n  error_message: string;\n  message: string;\n  public constructor(\n    fields?: {\n      status?: boolean,\n      data?: object,\n      message?: string\n  }) {\n    if (fields) Object.assign(this, fields);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  private static handleError(error: HttpErrorResponse): Observable<ApiResponse> {\n    let result: ApiResponse = new ApiResponse();\n    result.status = false;\n    result.data = null;\n    result.error_message = `Http Error: Status: ${error.status} Text: ${error.statusText} URL: ${error.url}`; // TODO: Improve this\n    throw of(result);\n\n  }\n\n  post(url: string, payload: any): Observable<ApiResponse> {\n    return this.httpClient.post<ApiResponse>(url, payload)\n      .pipe(\n        map(response => {\n          return response;\n        }),\n        catchError(ApiService.handleError)\n      );\n  }\n\n  get(url: string): Observable<ApiResponse> {\n    return this.httpClient.get<ApiResponse>(url)\n      .pipe(\n        map(response => {\n          return response;\n        }),\n        catchError(ApiService.handleError)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6\n}\n\nexport class LogEntry {\n  // Public properties\n  entryDate: Date = new Date();\n  message = '';\n  level: LogLevel = LogLevel.Debug;\n  extraInfo: any[] = [];\n  logWithDate = true;\n\n  buildLogString(): string {\n    let ret = '';\n\n    if (this.logWithDate) {\n      ret = new Date() + ' - ';\n    }\n    ret += 'Type: ' + LogLevel[this.level];\n    ret += ' - Message: ' + this.message;\n    if (this.extraInfo.length) {\n      ret += ' - Extra Info: ' + LogEntry.formatParams(this.extraInfo);\n    }\n\n    return ret;\n  }\n\n  private static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    if (params.some(p => typeof p === 'object')) {\n      ret = '';\n      for (const item of params) {\n        ret += JSON.stringify(item) + ',';\n      }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable()\nexport class LoggerService {\n  // Public properties\n  level: LogLevel = LogLevel.All;\n  logWithDate = true;\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret = false;\n\n    if (this.level !== LogLevel.Off && level >= this.level) {\n      ret = true;\n    }\n\n    return ret;\n  }\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  log(msg: any, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n\n      console.log(entry);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\n        // calculate total pages\n        let totalPages = Math.ceil(totalItems / pageSize);\n\n        // ensure current page isn't out of range\n        if (currentPage < 1) {\n            currentPage = 1;\n        } else if (currentPage > totalPages) {\n            currentPage = totalPages;\n        }\n\n        let startPage: number, endPage: number;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        let startIndex = (currentPage - 1) * pageSize;\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n","module.exports = \"\"","module.exports = \"<!--<p>-->\\n  <!--test works!-->\\n\\n<!--</p>-->\\n<!--<div class=\\\"jumbotron text-center\\\">-->\\n  <!--<h1>My First Bootstrap Page</h1>-->\\n  <!--<p>Resize this responsive page to see the effect!</p>-->\\n<!--</div>-->\\n\\n<!--<div class=\\\"container\\\">-->\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 1</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 2</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-sm-4\\\">-->\\n      <!--<h3>Column 3</h3>-->\\n      <!--<p>Lorem ipsum dolor..</p>-->\\n      <!--<p>Ut enim ad..</p>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n<!--</div>-->\\n\\n<!--<ul class=\\\"list-group\\\">-->\\n  <!--<li class=\\\"list-group-item active\\\">Active item</li>-->\\n  <!--<li class=\\\"list-group-item\\\">Second item</li>-->\\n  <!--<li class=\\\"list-group-item\\\">Third item</li>-->\\n<!--</ul>-->\\n\\n<!--<div class=\\\"container\\\">-->\\n  <!--<h2>Card Image</h2>-->\\n  <!--<p>Image at the top (card-img-top):</p>-->\\n  <!--<div class=\\\"card\\\" style=\\\"width:400px\\\">-->\\n    <!--<img class=\\\"card-img-top\\\" src=\\\"https://www.w3schools.com/bootstrap4/img_avatar1.png\\\" alt=\\\"Card image\\\" style=\\\"width:100%\\\">-->\\n    <!--<div class=\\\"card-body\\\">-->\\n      <!--<h4 class=\\\"card-title\\\">John Doe</h4>-->\\n      <!--<p class=\\\"card-text\\\">Some example text some example text. John Doe is an architect and engineer</p>-->\\n      <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">See Profile</a>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n  <!--<br>-->\\n\\n  <!--<p>Image at the bottom (card-img-bottom):</p>-->\\n  <!--<div class=\\\"card\\\" style=\\\"width:400px\\\">-->\\n    <!--<div class=\\\"card-body\\\">-->\\n      <!--<h4 class=\\\"card-title\\\">Jane Doe</h4>-->\\n      <!--<p class=\\\"card-text\\\">Some example text some example text. Jane Doe is an architect and engineer</p>-->\\n      <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">See Profile</a>-->\\n    <!--</div>-->\\n    <!--<img class=\\\"card-img-bottom\\\" src=\\\"img_avatar6.png\\\" alt=\\\"Card image\\\" style=\\\"width:100%\\\">-->\\n  <!--</div>-->\\n<!--</div>-->\\n<fun-chart [yValues]=\\\"yValues\\\" [xValues]=\\\"xValues\\\" [title]=\\\"title\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\"></fun-chart>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  yValues: any = [];\n  xValues: any = [];\n  title: string;\n  xAxisLabel: string;\n  yAxisLabel: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    let temp = [];\n    temp[\"name\"] = 'series 1';\n    temp[\"data\"] = [1,2,3,4,5];\n    this.yValues[0] = temp;\n    // this.yValues.push({ name: 'series 1', data: [1,2,3,4,5]});\n    // this.yValues.push({ name: 'series 2', data: [6,7,8,9,10]});\n    // this.yValues.push({ name: 'series 3', data: [11,12,13,14,15]});\n    // this.yValues.push({ name: 'series 4', data: [16,17,18,19,20]});\n    // this.yValues.push({ name: 'series 5', data: [21,22,23,24,25]});\n    this.xValues.push([0,1,2,3,4]);\n    this.title = \"Funchart\";\n    this.xAxisLabel = \"Date\";\n    this.yAxisLabel = \"Range\";\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}