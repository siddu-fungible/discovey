# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-02-07 07:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogSuite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[(b'RELEASE', b'RELEASE'), (b'ON_DEMAND', b'ON_DEMAND'), (b'REGRESSION', b'REGRESSION')], default=b'ON_DEMAND', max_length=20)),
                ('jqls', models.TextField(default=b'[]')),
                ('name', models.TextField(default=b'UNKNOWN', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogSuiteExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suite_execution_id', models.IntegerField(unique=True)),
                ('owner_email', models.EmailField(max_length=254)),
                ('instance_name', models.CharField(max_length=50, unique=True)),
                ('catalog_name', models.TextField(default=b'UNKNOWN')),
                ('result', models.CharField(choices=[(b'SCHEDULED', b'SCHEDULED'), (b'FAILED', b'FAILED'), (b'SKIPPED', b'SKIPPED'), (b'ABORTED', b'ABORTED'), (b'PASSED', b'PASSED'), (b'UNKNOWN', b'UNKNOWN'), (b'IN_PROGRESS', b'IN_PROGRESS'), (b'KILLED', b'KILLED'), (b'NOT_RUN', b'NOT_RUN'), (b'QUEUED', b'QUEUED')], default=b'UNKNOWN', max_length=10)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jira_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CatalogTestCaseExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.IntegerField(unique=True)),
                ('catalog_suite_execution_id', models.IntegerField(default=0)),
                ('jira_id', models.IntegerField()),
                ('test_bed', models.CharField(default=b'simulation', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='LastSuiteExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_suite_execution_id', models.IntegerField(default=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LastTestCaseExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_test_case_execution_id', models.IntegerField(default=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetricChart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_sets', models.TextField(default=b'[]')),
                ('chart_name', models.TextField(unique=True)),
                ('metric_model_name', models.TextField(default=b'Performance1')),
            ],
        ),
        migrations.CreateModel(
            name='ModelMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.TextField()),
                ('component', models.TextField()),
                ('model_name', models.TextField(default=b'Performance1', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('verbose_name', models.TextField(default=b'Verbose Name')),
            ],
        ),
        migrations.CreateModel(
            name='Performance1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=30, verbose_name=b'Build no.')),
                ('input1', models.CharField(choices=[(0, b'input1_0'), (1, b'input1_1')], max_length=30, verbose_name=b'Input 1 description')),
                ('input2', models.IntegerField(choices=[(0, 123), (1, 345)], verbose_name=b'Input 2 description')),
                ('output1', models.IntegerField(verbose_name=b'Output 1 description')),
                ('output2', models.IntegerField(verbose_name=b'Output 2 description')),
                ('output3', models.CharField(max_length=30, verbose_name=b'Output 3 description')),
                ('module', models.TextField(default=b'networking')),
                ('component', models.TextField(default=b'general')),
            ],
        ),
        migrations.CreateModel(
            name='SuiteExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_id', models.IntegerField(unique=True)),
                ('suite_path', models.CharField(max_length=100)),
                ('submitted_time', models.DateTimeField()),
                ('scheduled_time', models.DateTimeField()),
                ('completed_time', models.DateTimeField()),
                ('test_case_execution_ids', models.CharField(default=b'[]', max_length=10000)),
                ('result', models.CharField(choices=[(b'SCHEDULED', b'SCHEDULED'), (b'FAILED', b'FAILED'), (b'SKIPPED', b'SKIPPED'), (b'ABORTED', b'ABORTED'), (b'PASSED', b'PASSED'), (b'UNKNOWN', b'UNKNOWN'), (b'IN_PROGRESS', b'IN_PROGRESS'), (b'KILLED', b'KILLED'), (b'NOT_RUN', b'NOT_RUN'), (b'QUEUED', b'QUEUED')], default=b'UNKNOWN', max_length=10)),
                ('tags', models.TextField(default=b'[]')),
                ('version', models.CharField(default=b'UNKNOWN', max_length=50)),
                ('catalog_reference', models.TextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TestBed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_path', models.CharField(max_length=128)),
                ('execution_id', models.IntegerField(unique=True)),
                ('test_case_id', models.IntegerField()),
                ('suite_execution_id', models.IntegerField()),
                ('result', models.CharField(choices=[(b'SCHEDULED', b'SCHEDULED'), (b'FAILED', b'FAILED'), (b'SKIPPED', b'SKIPPED'), (b'ABORTED', b'ABORTED'), (b'PASSED', b'PASSED'), (b'UNKNOWN', b'UNKNOWN'), (b'IN_PROGRESS', b'IN_PROGRESS'), (b'KILLED', b'KILLED'), (b'NOT_RUN', b'NOT_RUN'), (b'QUEUED', b'QUEUED')], default=b'NOTRUN', max_length=10)),
                ('started_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('overridden_result', models.BooleanField(default=False)),
                ('bugs', models.TextField(default=b'[]')),
                ('comments', models.TextField(default=b'')),
            ],
        ),
        migrations.AddField(
            model_name='catalogtestcaseexecution',
            name='engineer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fun_test.Engineer'),
        ),
        migrations.AddField(
            model_name='catalogsuite',
            name='test_cases',
            field=models.ManyToManyField(blank=True, to='fun_test.CatalogTestCase'),
        ),
    ]
