# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2020-02-20 22:51
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fun_test', '0309_rawvolumenvmetcpmultihostperformance_input_num_dpu'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataPlaneOperationsPerformance',
            fields=[
                ('funmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fun_test.FunModel')),
                ('input_date_time', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Date time')),
                ('input_volume_size', models.IntegerField(verbose_name=b'Volume size')),
                ('input_total_volumes', models.IntegerField(verbose_name=b'Number of volumes')),
                ('input_volume_type', models.TextField(verbose_name=b'Volume type')),
                ('input_action_type', models.TextField(verbose_name=b'Action type')),
                ('input_volume_size_unit', models.TextField(default=b'MB')),
                ('input_concurrent', models.BooleanField(default=False)),
                ('input_split_performance_data', models.TextField(default={}, verbose_name=b'Split perf data')),
                ('input_platform', models.TextField(default=b'F1')),
                ('run_time_id', models.IntegerField(default=None, null=True)),
                ('status', models.CharField(default=b'PASSED', max_length=30, verbose_name=b'Status')),
                ('output_total_time', models.FloatField(default=-1, verbose_name=b'Total time taken')),
                ('output_avg_time', models.FloatField(default=-1, verbose_name=b'Avg time taken')),
                ('output_total_time_unit', models.TextField(default=b'secs')),
                ('output_avg_time_unit', models.TextField(default=b'secs')),
            ],
            bases=('fun_test.funmodel',),
        ),
    ]
