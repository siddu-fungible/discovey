# toolMain_ui.tcl --
#
# UI generated by GUI Builder Build 146 on 2013-12-24 15:43:34 from:
#    D:/Perforce/xTapiwork/TestCenter/p2_dev_HltApi/mainline/content/HltAPI/ReleasePackage/SourceCode/tools/toolMain.ui
# THIS IS AN AUTOGENERATED FILE AND SHOULD NOT BE EDITED.
# The associated callback file should be modified instead.
#

# Declare the namespace for this dialog
namespace eval toolMain {}

package require Tk
# toolMain::ui --
#
#   Create the UI for this dialog.
#
# ARGS:
#   root     the parent window for this form
#   wdir     the working path to find hlapiGen.tcl
#   args     a catch-all for other args, but none are expected
#
proc toolMain::ui {root wdir args} {
    # this handles '.' as a special case
    set base [expr {($root == ".") ? "" : $root}]
    variable ROOT $root
    variable BASE $base
    variable SCRIPTDIR ; # defined in main script
    set myDIR $wdir
    set warn_info ""
    if {$myDIR ne ""} {
	catch {source [file join $myDIR hlapiGen.tcl]
	    set ePluginMsg [::sth::hlapiGen::loadPluginFile $myDIR]
	} myerr
	if {$myerr ne ""} {
	    append $warn_info "<warning>\"Save As HLTAPI\"'s plugin loading mistakes: $myerr\n"
	}
	if {[info exist ePluginMsg] && $ePluginMsg ne ""} {
	    append $warn_info "<warning>\"Save As HLTAPI\"'s plugin loading mistakes: $ePluginMsg\n"
	}
    }
	
    # Widget Initialization
    variable _labelframe_6 [labelframe $BASE._labelframe_6]
    variable _labelframe_1 [labelframe $BASE._labelframe_1]
    variable filelabel [label $BASE.filelabel \
	    -anchor "se" \
	    -text "Save script to: " \
	    -textvariable "filelabel"]
    variable modeBut [checkbutton $BASE.modeBut \
	    -command [namespace code [list modeBut_command]] \
	    -text "Scaling mode" \
	    -variable "checkmodeBut"]
    variable runBut [button $BASE.runBut \
	    -command "Generate" \
	    -compound "center" \
	    -justify "left" \
	    -text "Generate" \
	    -width 15]
    variable _text_1 [text $BASE._text_1 \
	    -height 0 \
	    -takefocus 0 \
	    -width 0 \
	    -state disabled \
	    -xscrollcommand [namespace code [list _text_1_xscrollcommand]] \
	    -yscrollcommand [namespace code [list _text_1_yscrollcommand]]]
    variable logBut [checkbutton $BASE.logBut \
	    -command [namespace code [list logBut_command]] \
	    -takefocus 0 \
	    -text "Include log command" \
	    -textvariable 0 \
	    -variable "checklogBut"]
    variable controlBut [checkbutton $BASE.controlBut \
	    -command [namespace code [list controlBut_command]] \
	    -justify "left" \
	    -takefocus 0 \
	    -text "Include control commands" \
	    -variable "checkcontrolBut"]
    variable deviceBut [checkbutton $BASE.deviceBut \
	    -command [namespace code [list deviceBut_command]] \
	    -takefocus 0 \
	    -text "Include device_info command" \
	    -variable "checkdeviceBut"]
    variable optimizeBut [checkbutton $BASE.optimizeBut \
	    -command [namespace code [list optimizeBut_command]] \
	    -takefocus 0 \
	    -text "Include optimize command" \
	    -variable "checkoptimizeBut"]
    variable resultBut [checkbutton $BASE.resultBut \
	    -command [namespace code [list resultBut_command]] \
	    -takefocus 0 \
	    -text "Include result commands" \
	    -variable "checkresultBut"]
    variable trafficBut [checkbutton $BASE.trafficBut \
	    -command [namespace code [list trafficBut_command]] \
	    -justify "right" \
	    -takefocus 0 \
	    -text "Include traffic commands" \
	    -variable "checktrafficBut"]
    variable packetBut [checkbutton $BASE.packetBut \
	    -command [namespace code [list packetBut_command]] \
	    -takefocus 0 \
	    -text "Include packet commands" \
	    -variable "checkpacketBut"]
    variable defaultBut [checkbutton $BASE.defaultBut \
	    -command [namespace code [list defaultBut_command]] \
	    -takefocus 0 \
	    -text "output default options" \
	    -variable "checkdefaultBut"]
    variable defaultyamlBut [checkbutton $BASE.defaultyamlBut \
	    -command [namespace code [list defaultyamlBut_command]] \
	    -takefocus 0 \
	    -text "customize default in yaml" \
	    -variable "checkdefaultyamlBut"]
    variable fileBut [button $BASE.fileBut \
	    -command "FindPath" \
	    -text "Browse..." \
	    -textvariable "fileBut"]
    variable hltapiBut [radiobutton $BASE.hltapiBut \
	    -command [namespace code [list hltapiBut_command]] \
	    -takefocus 0 \
	    -text "HLTAPI for Tcl" \
	    -value "tcl" \
	    -variable "hlapiType"]
    variable hlpapiBut [radiobutton $BASE.hlpapiBut \
	    -command [namespace code [list hlpapiBut_command]] \
	    -takefocus 0 \
	    -text "HLTAPI for Perl" \
	    -value "perl" \
	    -variable "hlapiType"]
    variable hlpyapiBut [radiobutton $BASE.hlpyapiBut \
	    -command [namespace code [list hlpyapiBut_command]] \
	    -takefocus 0 \
	    -text "HLTAPI for Python" \
	    -value "python" \
	    -variable "hlapiType"]
    variable hlrapiBut [radiobutton $BASE.hlrapiBut \
	    -command [namespace code [list hlrapiBut_command]] \
	    -takefocus 0 \
	    -text "HLTAPI for Robot" \
	    -value "robot" \
	    -variable "hlapiType"]    
	if {[info exist ::sth::hlapiGen::v_plugins]} {
		foreach one $::sth::hlapiGen::v_plugins {
			set mytext [::sth::hlapiGen::getInfo_$one txt]
			set one [string tolower $one]
			variable $one\But [radiobutton $BASE.$one\But \
			   -command [namespace code [list hlpyapiBut_command]] \
			   -takefocus 0 \
			   -text $mytext \
			   -value $one \
			   -variable "hlapiType"]
		}
	}
    variable filetext [text $BASE.filetext \
		-takefocus 1 \
	    -height 0 \
	    -width 0 \
	    -xscrollcommand [namespace code [list filetext_xscrollcommand]] \
	    -yscrollcommand [namespace code [list filetext_yscrollcommand]]]

    # Geometry Management
	set size 0
	if {[info exist ::sth::hlapiGen::v_plugins]} {
		set size [llength $::sth::hlapiGen::v_plugins]
	}
    grid $BASE._labelframe_6 -in $root -row 3 -column 1 \
	    -columnspan 6 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 10 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE._labelframe_1 -in $root -row 2 -column 1 \
	    -columnspan [expr 5+$size] \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 12 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "nws"
    grid $BASE.filelabel -in $root -row 1 -column 1 \
	    -columnspan 2 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 10 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.modeBut -in $root -row 2 -column 6 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "e"
    grid $BASE.runBut -in $root -row 4 -column 1 \
	    -columnspan 6 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky ""
    grid $BASE._text_1 -in $root -row 5 -column 1 \
	    -columnspan 7 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 10 \
	    -pady 0 \
	    -rowspan 3 \
	    -sticky "news"
    grid $BASE.logBut -in $base._labelframe_6 -row 1 -column 1 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 5 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.controlBut -in $base._labelframe_6 -row 1 -column 3 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 20 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.deviceBut -in $base._labelframe_6 -row 1 -column 5 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 30 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.optimizeBut -in $base._labelframe_6 -row 2 -column 1 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 5 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.resultBut -in $base._labelframe_6 -row 2 -column 3 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 20 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.trafficBut -in $base._labelframe_6 -row 2 -column 5 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 30 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.packetBut -in $base._labelframe_6 -row 3 -column 1 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 5 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.defaultBut -in $base._labelframe_6 -row 3 -column 3 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 20 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.defaultyamlBut -in $base._labelframe_6 -row 3 -column 5 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 30 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "w"
    grid $BASE.fileBut -in $root -row 1 -column 6 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 10 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "ew"
    grid $BASE.hltapiBut -in $base._labelframe_1 -row 1 -column 1 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky ""
    grid $BASE.hlpapiBut -in $base._labelframe_1 -row 1 -column 2 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky ""
    grid $BASE.hlpyapiBut -in $base._labelframe_1 -row 1 -column 3 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky ""
    grid $BASE.hlrapiBut -in $base._labelframe_1 -row 1 -column 4 \
	    -columnspan 1 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 0 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky ""    
	if {[info exist ::sth::hlapiGen::v_plugins]} {
		set i 1
		foreach one $::sth::hlapiGen::v_plugins {
			set one [string tolower $one]
			grid $BASE.$one\But -in $base._labelframe_1 -row 1 -column [expr 4+$i] \
				-columnspan 1 \
				-ipadx 0 \
				-ipady 0 \
				-padx 0 \
				-pady 0 \
				-rowspan 1 \
				-sticky ""
			incr i
		}
	}
    grid $BASE.filetext -in $root -row 1 -column 2 \
	    -columnspan 4 \
	    -ipadx 0 \
	    -ipady 0 \
	    -padx 8 \
	    -pady 0 \
	    -rowspan 1 \
	    -sticky "ew"

    # Resize Behavior
    grid rowconfigure $root 1 -weight 1 -minsize 30 -pad 0
    grid rowconfigure $root 2 -weight 1 -minsize 1 -pad 0
    grid rowconfigure $root 3 -weight 1 -minsize 83 -pad 0
    grid rowconfigure $root 4 -weight 1 -minsize 31 -pad 0
    grid rowconfigure $root 5 -weight 0 -minsize 29 -pad 0
    grid rowconfigure $root 6 -weight 0 -minsize 93 -pad 0
    grid rowconfigure $root 7 -weight 1 -minsize 117 -pad 0
    grid columnconfigure $root 1 -weight 0 -minsize 84 -pad 0
    grid columnconfigure $root 2 -weight 1 -minsize 13 -pad 0
    grid columnconfigure $root 3 -weight 1 -minsize 5 -pad 0
    grid columnconfigure $root 4 -weight 1 -minsize 100 -pad 0
    grid columnconfigure $root 5 -weight 1 -minsize 21 -pad 0
    grid rowconfigure $base._labelframe_1 1 -weight 0 -minsize 19 -pad 0
    grid columnconfigure $base._labelframe_1 1 -weight 0 -minsize 30 -pad 0
    grid columnconfigure $base._labelframe_1 2 -weight 0 -minsize 40 -pad 0
    grid columnconfigure $base._labelframe_1 3 -weight 0 -minsize 40 -pad 0
    grid rowconfigure $base._labelframe_6 1 -weight 0 -minsize 7 -pad 0
    grid rowconfigure $base._labelframe_6 2 -weight 0 -minsize 16 -pad 0
    grid rowconfigure $base._labelframe_6 3 -weight 0 -minsize 25 -pad 0
    grid columnconfigure $base._labelframe_6 1 -weight 0 -minsize 40 -pad 0
    grid columnconfigure $base._labelframe_6 2 -weight 0 -minsize 40 -pad 0
    grid columnconfigure $base._labelframe_6 3 -weight 0 -minsize 69 -pad 0
    if {![regexp "^$" $warn_info]} {
	._text_1 configure -state normal
	._text_1 insert end "\n$warn_info"
	._text_1 configure -state disable
    }
}
