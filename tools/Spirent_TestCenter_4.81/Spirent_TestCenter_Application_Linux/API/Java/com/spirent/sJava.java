/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.spirent;

public class sJava {
  public static void salLog(String logLevel, String msg) {
    sJavaJNI.salLog(logLevel, msg);
  }

  public static void salInit() {
    sJavaJNI.salInit();
  }

  public static void salShutdown() {
    sJavaJNI.salShutdown();
  }

  public static void salConnect(StringVector hostNames) {
    sJavaJNI.salConnect(StringVector.getCPtr(hostNames), hostNames);
  }

  public static void salDisconnect(StringVector hostNames) {
    sJavaJNI.salDisconnect(StringVector.getCPtr(hostNames), hostNames);
  }

  public static String salCreate(String type, StringVector propertyPairs) {
    return sJavaJNI.salCreate(type, StringVector.getCPtr(propertyPairs), propertyPairs);
  }

  public static void salDelete(String handle) {
    sJavaJNI.salDelete(handle);
  }

  public static void salSet(String handle, StringVector propertyPairs) {
    sJavaJNI.salSet(handle, StringVector.getCPtr(propertyPairs), propertyPairs);
  }

  public static StringVector salGet(String handle, StringVector propertyNames) {
    return new StringVector(sJavaJNI.salGet(handle, StringVector.getCPtr(propertyNames), propertyNames), true);
  }

  public static StringVector salPerform(String commandName, StringVector propertyPairs) {
    return new StringVector(sJavaJNI.salPerform(commandName, StringVector.getCPtr(propertyPairs), propertyPairs), true);
  }

  public static StringVector salReserve(StringVector CSPs) {
    return new StringVector(sJavaJNI.salReserve(StringVector.getCPtr(CSPs), CSPs), true);
  }

  public static void salRelease(StringVector CSPs) {
    sJavaJNI.salRelease(StringVector.getCPtr(CSPs), CSPs);
  }

  public static String salSubscribe(StringVector inputParameters) {
    return sJavaJNI.salSubscribe(StringVector.getCPtr(inputParameters), inputParameters);
  }

  public static void salUnsubscribe(String handle) {
    sJavaJNI.salUnsubscribe(handle);
  }

  public static String salHelp(String info) {
    return sJavaJNI.salHelp(info);
  }

  public static void salApply() {
    sJavaJNI.salApply();
  }

}
