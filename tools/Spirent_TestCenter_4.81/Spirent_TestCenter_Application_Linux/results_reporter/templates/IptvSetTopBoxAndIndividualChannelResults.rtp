<?xml version="1.0" encoding="UTF-8"?>

<template name="" type="stc">
  <reported>
    <instance>
      <name>MinJoinLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( minjlat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT MinJLat, ViewedChannel from IptvEventResultsAggJoinLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>MaxJoinLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( maxjlat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT MaxJLat, viewedchannel from IptvEventResultsAggJoinLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>AvgJoinLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( avgjlat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT AvgJLat, viewedchannel from IptvEventResultsAggJoinLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>MinLeaveLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MinLLat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT MinLLat, viewedchannel from IptvEventResultsAggLeaveLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>MaxLeaveLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MaxLLat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT MaxLLat, viewedchannel from IptvEventResultsAggLeaveLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>AvgLeaveLatencyByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( AvgLLat, 'N/A') FROM (select viewedchannel from IptvEventResultsGroupByViewedChannel) as b LEFT OUTER JOIN (SELECT AvgLLat, viewedchannel from IptvEventResultsAggLeaveLatencyGroupByViewedChannel) as a ON a.viewedchannel = b.viewedchannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>ViewedIpv4AddrByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ViewedIpv4Addr from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Error Counts,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>ViewedIpv6AddrByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ViewedIpv6Addr from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Error Counts,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>ViewedChannelByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ViewedChannel from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Error Counts,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>StbNameByBlk</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Name from IptvStbBlockConfig where datasetid =1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>JoinFailsByBlk</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select JoinFails from IptvStbBlockResults where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>TestResult</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestResult from IptvTestResults where datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestName from IptvTestResults where datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ZapBehavior</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ZapBehavior from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ZapDirection</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ZapDirection from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ZapIntervalType</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ZapIntervalType from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>Interval</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Interval from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ChangesBeforeView</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ChangesBeforeView from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ViewDuration</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ViewDuration from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>SetTopLeaveJoinDelay</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select SetTopLeaveJoinDelay from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>JoinLatencyThreshold</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select JoinLatencyThreshold from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>LeaveLatencyThreshold</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select LeaveLatencyThreshold from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ProfileName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Name from IptvViewingProfileConfig where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceCnt</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DeviceCount from AllDevice where Handle in (Select ParentHnd from IptvStbBlockConfig where datasetid = 1) and datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>ProfName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select Name from IptvViewingProfileConfig, RelationTable where IptvViewingProfileConfig.Handle = RelationTable.TargetHnd and IptvViewingProfileConfig.datasetid = 1 and relationtable.datasetid =1 Order By RelationTable.SourceHnd</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>StbBlockName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select Name from IptvStbBlockConfig, RelationTable where IptvStbBlockConfig.datasetid = 1 and relationtable.datasetid =1 and IptvStbBlockConfig.Handle = RelationTable.SourceHnd and RelationTable.Type="IptvProfile"</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>HostConfigName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select Name from IgmpHostConfig, RelationTable where IgmpHostConfig.datasetid =1 and IgmpHostConfig.Handle = RelationTable.TargetHnd and RelationTable.Type="MulticastParam"</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>TypeOfTest</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TypeOfTest from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>TestEnv</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestEnv from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>TestTime</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestTime from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,IPTV Test Summary,Test Configuration</pageName>
    </instance>
    <instance>
      <name>JoinFailPercentageThreshold</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select JoinFailPercentageThreshold from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>UdpPortTypeFilter</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select UdpPortTypeFilter from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>UdpPortNum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select UdpPortNum from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>VlanSubFilter</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select VlanSubFilter from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>InterStbStartDelayStep</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select InterStbStartDelayStep from IptvStartTestCommand where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>VCName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Name from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ChannelRangeStart</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ChannelRangeStart from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ChannelRangeEnd</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ChannelRangeEnd from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>ChannelRangeStep</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ChannelRangeStep from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>InitialChannelStart</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select InitialChannelStart from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>InitialChannelStep</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select InitialChannelStep from IptvViewedChannels where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>stiForDynamicPlots</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select settopindex from IptvEventResultsGroupBySetTopIndex order by settopindex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicJoinLatency</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT JoinLatency FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Join Latency Graph</pageName>
    </instance>
    <instance>
      <name>EventNumForDynamicPlot</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT EventNum FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Channel Gap/Overlap Graph,STB Leave Latency Graph,STB Channel Change Latency Graph,STB Join Latency Graph</pageName>
    </instance>
    <instance>
      <name>DynamicLeaveLatency</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT LeaveLatency FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Leave Latency Graph</pageName>
    </instance>
    <instance>
      <name>DynamicChangeLatency</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT ChangeLatency FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Channel Change Latency Graph</pageName>
    </instance>
    <instance>
      <name>DynamicGapLatency</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT GapLatency FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Channel Gap/Overlap Graph</pageName>
    </instance>
    <instance>
      <name>DynamicOverlapLatency</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT OverlapLatency FROM IptvEventResults where datasetid =1 and settopindex==$stiForDynamicPlots$ order by settopindex, eventnum</path>
      <multivalued>true</multivalued>
      <pageName>STB Channel Gap/Overlap Graph</pageName>
    </instance>
    <instance>
      <name>ViewedChannelsListByBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select Name from IptvViewedChannels, RelationTable where IptvViewedChannels.datasetid =1 and IptvViewedChannels.Handle = RelationTable.TargetHnd Order By RelationTable.SourceHnd</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>StbBlockForViewedchannelList</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select Name from IptvStbBlockConfig, RelationTable where IptvStbBlockConfig.datasetid =1 and IptvStbBlockConfig.Handle = RelationTable.SourceHnd and RelationTable.Type = "StbChannel"</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>Ipv4AddrForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Address from Ipv4If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv4If.ParentHnd = IptvStbBlockConfig.ParentHnd</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>Ipv6AddrForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Address from Ipv6If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv6If.ParentHnd = IptvStbBlockConfig.ParentHnd and substr(Address, 0, 4) != 'fe80'</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>Ipv4AddrStepForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AddrStep from Ipv4If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv4If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv4If.datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>Ipv6AddrStepForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AddrStep from Ipv6If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv6If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv6If.datasetid = 1 and substr(Ipv6If.Address, 0, 4) != 'fe80'</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>StbBlockNameForIpv4</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select IptvStbBlockConfig.Name from Ipv4If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv4If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv4If.datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>StbBlockNameForIpv6</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select IptvStbBlockConfig.Name from Ipv6If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv6If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv6If.datasetid = 1 and substr(Ipv6If.Address, 0, 4) != 'fe80'</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>PortNameForStbConfigTable</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select port.name from Port , IptvStbBlockConfig where port.datasetid =1 and Port.Handle in (Select TargetHnd from RelationTable where IptvStbBlockConfig.datasetid =1 and SourceHnd = IptvStbBlockConfig.ParentHnd and Type ="AffiliationPort") order by IptvStbBlockConfig.Handle</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>MinJLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( minjlat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT minjlat, settopindex from IptvEventResultsAggJoinLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>MaxJLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( maxjlat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT maxjlat, settopindex from IptvEventResultsAggJoinLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>AvgJLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( avgjlat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT avgjlat, settopindex from IptvEventResultsAggJoinLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>MinLLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MinLLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT MinLLat, settopindex from IptvEventResultsAggLeaveLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>MaxLLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MaxLLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT MaxLLat, settopindex from IptvEventResultsAggLeaveLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>AvgLLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( AvgLLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT AvgLLat, settopindex from IptvEventResultsAggLeaveLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>MinCLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MinChgLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT MinChgLat, settopindex from IptvEventResultsAggChangeLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>MaxCLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( MaxChgLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT MaxChgLat, settopindex from IptvEventResultsAggChangeLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>AvgCLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( AvgChgLat, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT AvgChgLat, settopindex from IptvEventResultsAggChangeLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>MinGLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( mingapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT mingapl, settopindex from IptvEventResultsAggGapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>MaxGLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( maxgapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT maxgapl, settopindex from IptvEventResultsAggGapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>AvgGLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( avggapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT avggapl, settopindex from IptvEventResultsAggGapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>MinOLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( minoverlapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT minoverlapl, settopindex from IptvEventResultsAggOverlapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>MaxOLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( maxoverlapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT maxoverlapl, settopindex from IptvEventResultsAggOverlapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>AvgOLBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select coalesce( avgoverlapl, 'N/A') FROM (select settopindex from IptvEventResultsGroupBySetTopIndex) as b LEFT OUTER JOIN (SELECT avgoverlapl, settopindex from IptvEventResultsAggOverlapLatencyGroupBySetTopIndex) as a ON a.settopindex = b.settopindex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>NumChanChangeBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select SetTopIndexCount from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>DroppedPktBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DroppedFrameCountSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>ReorderedPktBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ReorderedFrameCountSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>DuplicatePktBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DuplicateFrameCountSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>TotalPktBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TotalPktsSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>PrbsErrorsbySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select PrbsErrorCountSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>Ipv4AddressBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Ipv4Addr From IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,Channel Error Counts for IPTV Receiver,IPTV Receiver Change Latency,IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>Ipv6AddressBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Ipv6Addr From IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,Channel Error Counts for IPTV Receiver,IPTV Receiver Change Latency,IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>STIBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select SetTopIndex from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,Channel Error Counts for IPTV Receiver,IPTV Receiver Change Latency,IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>JoinFailsBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select FailedJoinSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>DuplicateJoinBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DuplicateJoinSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>NumChanChangeByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select SetTopIndexCount from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Leave Latency,Viewed Channel Join/Leave Latency,Viewed Channel Join Latency</pageName>
    </instance>
    <instance>
      <name>DroppedPktByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DroppedFrameCountSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>ReorderedPktByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ReorderedFrameCountSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>DuplicatePktByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DuplicateFrameCountSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>TotalPktsByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TotalPktsSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>PrbsErrorsByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select PrbsErrorCountSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>JoinFailPerChannel</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select FailedJoinSum From IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>DuplicateJoinPerChannel</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DuplicateJoinSum From IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>DeviceCountForIpv4</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DeviceCount from AllDevice where datasetid = 1 and handle in (select IptvStbBlockConfig.ParentHnd from Ipv4If, IptvStbBlockConfig where Ipv4If.datasetid = 1 and Ipv4If.ParentHnd = IptvStbBlockConfig.ParentHnd)</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceCountForIpv6</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DeviceCount from AllDevice where datasetid =1 and handle in (select IptvStbBlockConfig.ParentHnd from Ipv6If, IptvStbBlockConfig where Ipv6If.datasetid = 1 and IptvStbBlockConfig.datasetid =1 and Ipv6If.ParentHnd = IptvStbBlockConfig.ParentHnd)</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>TestStartTime</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestStartTime from IptvTestResults where datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestEndTime</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TestEndTime from IptvTestResults where datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>LatePktBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select LateFrameCountSum from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>Channel Error Counts for IPTV Receiver</pageName>
    </instance>
    <instance>
      <name>LatePktByEachChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select LateFrameCountSum from IptvEventResultsGroupByViewedChannel</path>
      <multivalued>true</multivalued>
      <pageName>Viewed Channel Error Counts</pageName>
    </instance>
    <instance>
      <name>ChannelNameForRes</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ChannelName from IptvChannelResults where datasetid = 1</path>
      <multivalued>true</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>BlockNameBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>SELECT stbname from SetTopTableGroupBySetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>NumSTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select COUNT(SetTopIndex) from IptvEventResultsGroupBySetTopIndex</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>NumChan</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select sum(NumOfChannels) from IptvChannelResults</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>NumChanChang</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select count(Id) from IptvEventResults where datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>NumSucChanChang</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select count(Id) from IptvEventResults where failedjoin = 0 and datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>NumFailChanChang</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select count(Id) from IptvEventResults where failedjoin = 1 and datasetid = 1</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MinChangeLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (minchglat,'N/A') from (select minchglat from IptvEventResultsAggChangeLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MaxChangeLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (maxchglat,'N/A') from (select maxchglat from IptvEventResultsAggChangeLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>AvgChangeLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (avgchglat,'N/A') from (select avgchglat from IptvEventResultsAggChangeLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MinJoinLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (minjlat,'N/A') from (select minjlat from IptvEventResultsAggJoinLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MaxJoinLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (maxjlat,'N/A') from (select maxjlat from IptvEventResultsAggJoinLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>AvgJoinLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (avgjlat,'N/A') from (select avgjlat from IptvEventResultsAggJoinLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MinLeaveLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (minllat,'N/A') from (select minllat from IptvEventResultsAggLeaveLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>MaxLeaveLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (maxllat,'N/A') from (select maxllat from IptvEventResultsAggLeaveLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>AvgLeaveLatSum</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select coalesce (avgllat,'N/A') from (select avgllat from IptvEventResultsAggLeaveLatency)</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Test Summary</pageName>
    </instance>
    <instance>
      <name>CompletedTypeOfTest</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select distinct TypeOfTest from IptvStartTestCommand where datasetid = 1 and State=='COMPLETED'</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicVlanTag</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select VlanTag, SetTopIndex from IptvEventResultsGroupBySetTopIndex order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicVlanInnerTag</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select VlanInnerTag, SetTopIndex from IptvEventResultsGroupBySetTopIndex order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicStbHostName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select distinct AllDevice.Name, IptvEventResults.SetTopIndex FROM AllDevice, IptvStbBlockConfig, IptvEventResults where IptvEventResults.ParentHnd=IptvStbBlockConfig.Handle and IptvStbBlockConfig.ParentHnd=AllDevice.Handle and AllDevice.datasetid=1 and IptvStbBlockConfig.datasetid=1 and IptvEventResults.datasetid=1 order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicStbIpv4Addr</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Ipv4Addr, SetTopIndex from IptvEventResultsGroupBySetTopIndex order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DynamicStbIpv6Addr</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Ipv6Addr, SetTopIndex from IptvEventResultsGroupBySetTopIndex order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbBlockName</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, IptvStbBlockConfig, RelationTable where AllDevice.datasetid = 1 and IptvStbBlockConfig.datasetid = 1 and relationtable.datasetid =1 and IptvStbBlockConfig.Handle = RelationTable.SourceHnd and RelationTable.Type="IptvProfile" and IptvStbBlockConfig.ParentHnd = AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>Test Configuration,Test Configuration</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbBlockForViewedChannelList</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>Select AllDevice.Name from AllDevice, IptvStbBlockConfig, RelationTable where IptvStbBlockConfig.datasetid =1 and IptvStbBlockConfig.Handle = RelationTable.SourceHnd and RelationTable.Type = "StbChannel" and IptvStbBlockConfig.ParentHnd = AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbNameByBlk</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and IptvStbBlockConfig.ParentHnd = AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceNameForBlockNameBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, SetTopTableGroupBySetTopIndex where SetTopTableGroupBySetTopIndex.StbParentHnd = AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Receiver Leave Latency,IPTV Receiver Join Latency,IPTV Receiver Join/Leave Latency</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbBlockNameForIpv4</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, Ipv4If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv4If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv4If.datasetid = 1 and IptvStbBlockConfig.ParentHnd = AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbBlockNameForIpv6</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, Ipv6If, IptvStbBlockConfig where IptvStbBlockConfig.datasetid =1 and Ipv6If.ParentHnd = IptvStbBlockConfig.ParentHnd and Ipv6If.datasetid = 1 and IptvStbBlockConfig.ParentHnd = AllDevice.Handle and substr(Ipv6If.Address, 0, 4) != 'fe80'</path>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceNameForSTIBySTI</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select AllDevice.Name from AllDevice, IptvEventResultsGroupBySetTopIndex, IptvStbBlockConfig where IptvEventResultsGroupBySetTopIndex.ParentHnd=IptvStbBlockConfig.Handle and IptvStbBlockConfig.ParentHnd=AllDevice.Handle</path>
      <multivalued>false</multivalued>
      <pageName>IPTV Receiver Change/Gap/Overlap Latency,IPTV Receiver Overlap Latency,Channel Error Counts for IPTV Receiver,IPTV Receiver Change Latency,IPTV Receiver Gap Latency</pageName>
    </instance>
    <instance>
      <name>DynamicVpiVci</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Vpi, Vci, SetTopIndex from IptvEventResultsGroupBySetTopIndex order by SetTopIndex</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
  </reported>
  <computed>
    <instance>
      <name>TestResultColor</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[if {$TestResult == "PASS"} {&#xa;set result "#00ff00"&#xa;} else {&#xa;set result "#ff0000"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TypeOfTestResult</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set T [ string trim $CompletedTypeOfTest \" ]&#xa;&#xa;if {$T == "CHANNEL_VERIFICATION_TEST"}  then  {&#xa;    set result "IPTV Channel Verification Test"&#xa;}  else  {&#xa;    set result "IPTV Channel Zapping Test"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Spirent TestCenter IPTV Report</pageName>
    </instance>
    <instance>
      <name>IndexAndVlanHeader</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set T [list]&#xa;set stiLength [ llength $stiForDynamicPlots ]&#xa;set vlanLength [ llength $DynamicVlanTag ]&#xa;set vlanInnerLength [ llength $DynamicVlanInnerTag ]&#xa;set ipv4AddrLength [ llength $DynamicStbIpv4Addr ]&#xa;set ipv6AddrLength [ llength $DynamicStbIpv6Addr ]&#xa;&#xa;set vpivciLength 0&#xa;if { [ info exists DynamicVpiVci ] } then {&#xa;    set vpivciLength [ llength $DynamicVpiVci ]&#xa;}&#xa;&#xa;set length $stiLength&#xa;&#xa;# first check that the first item in the SqlQuery is the column headers.  The column headers are now&#xa;# listed in the query when multiple columns are queried.  &#xa;# The following have multiple columns queried in this computed stats script:&#xa;# DynamicVlanTag, DynamicVlanInnerTag, DynamicStbIpv4Addr, and DynamicStbIpv6Addr.&#xa;&#xa;# check the length of the lists returned by the SQL query.  They should have the&#xa;# same count, but if they don't then something went wrong.  Note that the length of stiForDynamicPlots&#xa;# does not currently query on multiple columns so it will not have the column headers as part of the&#xa;# returned query results.  As such, the length  _should_ be one less than the other query results to validate against.&#xa;&#xa;&#xa;# check vlan tag headers&#xa;set hasVlanHeaders 0&#xa;set regexp "VlanTag"&#xa;if { [ lsearch -regexp $DynamicVlanTag $regexp ] != -1 } then {&#xa;    set hasVlanHeaders 1&#xa;}&#xa;&#xa;# check inner vlan tag column headers&#xa;set hasInnerVlanHeaders 0&#xa;set regexp "VlanInnerTag"&#xa;if { [ lsearch -regexp $DynamicVlanInnerTag $regexp ] != -1 } then {&#xa;    set hasInnerVlanHeaders 1&#xa;}&#xa;&#xa;# check ipv4 addr column headers&#xa;set hasIpv4AddrHeaders 0&#xa;set regexp "Ipv4Addr"&#xa;if { [ lsearch -regexp $DynamicStbIpv4Addr $regexp ] != -1 } then {&#xa;    set hasIpv4AddrHeaders 1&#xa;}&#xa;&#xa;# check ipv6 addr column headers&#xa;set hasIpv6AddrHeaders 0&#xa;set regexp "Ipv6Addr"&#xa;if { [ lsearch -regexp $DynamicStbIpv6Addr $regexp ] != -1 } then {&#xa;    set hasIpv6AddrHeaders 1&#xa;}&#xa;&#xa;# check vpi/vci column headers&#xa;set hasVpiVciHeaders 0&#xa;if { $vpivciLength != 0 } then {&#xa;    set regexp "Vpi"&#xa;    if { [ lsearch -regexp $DynamicVpiVci $regexp ] != -1 } then {&#xa;        set hasVpiVciHeaders 1&#xa;    }&#xa;}&#xa;&#xa;set allHeadersFound 0&#xa;set noHeadersFound 0&#xa;&#xa;if { $hasVlanHeaders == 1 && $hasInnerVlanHeaders == 1 && $hasIpv4AddrHeaders == 1 && $hasIpv6AddrHeaders == 1 } then {&#xa;    set allHeadersFound 1&#xa;    &#xa;    # if number of items in the dynamic queries doesn't match the number of rows in the stiForDynamicPlots (plus 1 for the header),&#xa;    # then something is wrong with the query and this computed stat should return an "unknown"&#xa;    &#xa;    set stiLenWithHdr [ expr $stiLength + 1 ] &#xa;    if { $vlanLength != $stiLenWithHdr || $vlanInnerLength != $stiLenWithHdr || $ipv4AddrLength != $stiLenWithHdr || $ipv6AddrLength != $stiLenWithHdr } then {&#xa;        set length 0&#xa;    }&#xa;    &#xa;} elseif { $hasVlanHeaders == 0 && $hasInnerVlanHeaders == 0 && $hasIpv4AddrHeaders == 0 && $hasIpv6AddrHeaders == 0 } then {&#xa;    set noHeadersFound 1&#xa;}&#xa;&#xa;# Note: if noHeadersFound == 1, then only one row of results was returned by the "dynamic" queries.&#xa;&#xa;# iterate through the arrays&#xa;if { $allHeadersFound == 1 && $length != 0} then {&#xa;&#xa;    incr length&#xa;    for { set i 1 }  { $i < $length }  { incr i }  {&#xa;&#xa;        set temp {}&#xa;        set vlan_temp 0&#xa;        set vlan_inner_temp 0&#xa;&#xa;        # ipv4 address&#xa;        set a [ lindex $DynamicStbIpv4Addr $i ]&#xa;        set a [ string trim $a {[]} ]&#xa;        set a [ split $a "," ]&#xa;        set temp_ipv4 [ lindex $a 0 ]&#xa;&#xa;        # ipv6 address&#xa;        set b [ lindex $DynamicStbIpv6Addr $i ]&#xa;        set b [ string trim $b {[]} ]&#xa;        set b [ split $b "," ]&#xa;        set temp_ipv6 [ lindex $b 0 ]&#xa;&#xa;        if { $temp_ipv6 == "::" || $temp_ipv6 == "" }  then  {&#xa;            append temp [ format "STB %s" $temp_ipv4 ]&#xa;        }  else  {&#xa;            append temp [ format "STB %s" $temp_ipv6 ]&#xa;        }&#xa;&#xa;        # vlan tag&#xa;        if { $vlanLength != 0 }  then  {&#xa;            set a [ lindex $DynamicVlanTag $i ]&#xa;            set a [ string trim $a {[]} ]&#xa;            set a [ split $a "," ]&#xa;            set temp_vlan [ lindex $a 0 ]&#xa;            set vlan_temp [ expr { int($temp_vlan) } ]&#xa;        } else {&#xa;            set vlan_temp 0&#xa;        }&#xa;    &#xa;        # inner vlan tag&#xa;        if { $vlanInnerLength != 0 }  then  {&#xa;            set a [ lindex $DynamicVlanInnerTag $i ]&#xa;            set a [ string trim $a {[]} ]&#xa;            set a [ split $a "," ]&#xa;            set temp_vlan [ lindex $a 0 ]&#xa;            set vlan_inner_temp [ expr { int($temp_vlan) } ]&#xa;        } else {&#xa;            set vlan_inner_temp 0&#xa;        }&#xa;&#xa;        if { $vlan_temp != 0 && $vlan_inner_temp != 0 }  {&#xa;            append temp [ format " ( VLAN %u / %u )" $vlan_temp $vlan_inner_temp ]&#xa;        }  elseif  { $vlan_temp != 0 }  {&#xa;            append temp [ format " ( VLAN %u )" $vlan_temp ]&#xa;        }  &#xa;&#xa;        # vpi vci&#xa;        if { $vpivciLength != 0 && $vpivciLength ==  [ expr $stiLength + 1 ] && $hasVpiVciHeaders != 0 } {&#xa;            set a [ lindex $DynamicVpiVci $i ]&#xa;            set a [ string trim $a {[]} ]&#xa;            set a [ split $a "," ]&#xa;            set temp_vpivci [ lindex $a 0 ]&#xa;            set vpi_temp [ expr { int($temp_vpivci) } ]&#xa;            set temp_vpivci [ lindex $a 1 ]&#xa;            set vci_temp [ expr { int($temp_vpivci) } ]&#xa;            if { $vpi_temp != 0 || $vci_temp != 0 } {&#xa;                append temp [ format " ( VPI %u / VCI %u )" $vpi_temp $vci_temp ]&#xa;            }&#xa;        } &#xa;&#xa;        lappend T [ format "%s" $temp ]&#xa;    }&#xa;&#xa;    set result $T&#xa;&#xa;} elseif { $noHeadersFound == 1 && $length != 0} then {&#xa;&#xa;    set temp {}&#xa;    set vlan_temp 0&#xa;    set vlan_inner_temp 0&#xa;&#xa;    # ipv4 address&#xa;    set temp_ipv4 [ lindex $DynamicStbIpv4Addr 0 ]&#xa;&#xa;    # ipv6 address&#xa;    set temp_ipv6 [ lindex $DynamicStbIpv6Addr 0 ]&#xa;&#xa;    if { $temp_ipv6 == "::" || $temp_ipv6 == "" }  then  {&#xa;        append temp [ format "STB %s" $temp_ipv4 ]&#xa;    }  else  {&#xa;        append temp [ format "STB %s" $temp_ipv6 ]&#xa;    }&#xa;&#xa;    # vlan tag&#xa;    if { $vlanLength != 0 }  then  {&#xa;        set temp_vlan [ lindex $DynamicVlanTag 0 ]&#xa;        set vlan_temp [ expr { int($temp_vlan) } ]&#xa;    } else {&#xa;        set vlan_temp 0&#xa;    }&#xa;    &#xa;    # inner vlan tag&#xa;    if { $vlanInnerLength != 0 }  then  {&#xa;        set temp_vlan [ lindex $DynamicVlanInnerTag 0 ]&#xa;        set vlan_inner_temp [ expr { int($temp_vlan) } ]&#xa;    } else {&#xa;        set vlan_inner_temp 0&#xa;    }&#xa;&#xa;    if { $vlan_temp != 0 && $vlan_inner_temp != 0 }  {&#xa;        append temp [ format " ( VLAN %u / %u )" $vlan_temp $vlan_inner_temp ]&#xa;    }  elseif  { $vlan_temp != 0 }  {&#xa;        append temp [ format " ( VLAN %u )" $vlan_temp ]&#xa;    }  &#xa;&#xa;    # vpi vci&#xa;    if { $vpivciLength != 0 && $hasVpiVciHeaders == 0 } {&#xa;        set temp_vpivci [ lindex $DynamicVpiVci 0 ]&#xa;        set vpi_temp [ expr { int($temp_vpivci) } ]&#xa;        set temp_vpivci [ lindex $DynamicVpiVci 1 ]&#xa;        set vci_temp [ expr { int($temp_vpivci) } ]&#xa;        if { $vpi_temp != 0 || $vci_temp != 0 } {&#xa;            append temp [ format " ( VPI %u / VCI %u )" $vpi_temp $vci_temp ]&#xa;        }&#xa;    } &#xa;&#xa;    lappend T [ format "%s" $temp ]&#xa;&#xa;    set result $T&#xa;    &#xa;} else {&#xa;&#xa;    set result "Unknown"&#xa;}    &#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>STB Channel Gap/Overlap Graph,STB Leave Latency Graph,STB Channel Change Latency Graph,STB Join Latency Graph</pageName>
    </instance>
    <instance>
      <name>StartTime</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result [ string trim $TestStartTime \" ]]]></script>
      <multivalued>false</multivalued>
      <pageName>Spirent TestCenter IPTV Report</pageName>
    </instance>
    <instance>
      <name>EndTime</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result [ string trim $TestEndTime \" ]]]></script>
      <multivalued>false</multivalued>
      <pageName>Spirent TestCenter IPTV Report</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestampMS</name>
      <persist>true</persist>
      <value type="String"></value>
      <script><![CDATA[set result "1328162971519"]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestamp</name>
      <persist>true</persist>
      <value type="String"></value>
      <script><![CDATA[set result "Wed Feb 01 20:09:31.519 HST 2012"]]></script>
      <multivalued>false</multivalued>
      <pageName>Contact Details</pageName>
    </instance>
    <instance>
      <name>StbHostNameHeader</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set T [list]&#xa;set stiLength [ llength $stiForDynamicPlots ]&#xa;&#xa;set length $stiLength&#xa;&#xa;# check the length of the lists returned by the SQL query.  They should have the&#xa;# same count, but if they don't then something went wrong.&#xa;&#xa;set hasHeaders 0&#xa;set regexp "AllDevice.Name"&#xa;if { [ lsearch -regexp $DynamicStbHostName $regexp ] != -1 } then {&#xa;    set hasHeaders 1&#xa;}&#xa;&#xa;if { $hasHeaders == 1 && $length != 0} then {&#xa;&#xa;    incr length&#xa;    for { set i 1 }  { $i < $length }  { incr i }  {&#xa;&#xa;        set temp {}&#xa;        set first 0&#xa;        set second 0&#xa;&#xa;        set a [ lindex $DynamicStbHostName $i ]&#xa;        set a [ string trim $a {[]} ]&#xa;&#xa;        set a [ split $a "," ]&#xa;        set first [ lindex $a 0 ]&#xa;&#xa;        if { $first == "" } then {&#xa;            append temp "Unknown"&#xa;        } else {&#xa;            append temp [ format "%s" $first ]&#xa;        }&#xa; &#xa;        lappend T [ format "%s" $temp ]&#xa;    }&#xa;&#xa;    set result $T&#xa;&#xa;} elseif { $length != 0 } then {&#xa;&#xa;    set stbName 0&#xa;&#xa;    set stbName [ lindex $DynamicStbHostName 0 ]&#xa;&#xa;    if { $stbName == "" } then {&#xa;        set result "Unknown"&#xa;    } else {&#xa;        set result [ format "%s" $stbName ]&#xa;    }&#xa;&#xa;} else {&#xa;&#xa;    set result "Invalid Device"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>STB Channel Gap/Overlap Graph,STB Leave Latency Graph,STB Channel Change Latency Graph,STB Join Latency Graph</pageName>
    </instance>
    <instance>
      <name>StbBlockNameForIp</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set length [ llength $StbBlockNameForIpv4 ]&#xa;&#xa;if { $length != 0 }  {&#xa;    set result $StbBlockNameForIpv4&#xa;} else {&#xa;    set result $StbBlockNameForIpv6&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceCountForIp</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set length [ llength $DeviceCountForIpv4 ]&#xa;&#xa;if { $length != 0 }  {&#xa;    set result $DeviceCountForIpv4&#xa;} else {&#xa;    set result $DeviceCountForIpv6&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>IpAddrForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set length [ llength $Ipv4AddrForBlock ]&#xa;&#xa;if { $length != 0 }  {&#xa;    set result $Ipv4AddrForBlock&#xa;} else {&#xa;    set result $Ipv6AddrForBlock&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>IpAddrStepForBlock</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set length [ llength $Ipv4AddrStepForBlock ]&#xa;&#xa;if { $length != 0 }  {&#xa;    set result $Ipv4AddrStepForBlock&#xa;} else {&#xa;    set result $Ipv6AddrStepForBlock&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
    <instance>
      <name>DeviceNameForStbBlockNameForIp</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set length [ llength $DeviceNameForStbBlockNameForIpv4 ]&#xa;&#xa;if { $length != 0 }  {&#xa;    set result $DeviceNameForStbBlockNameForIpv4&#xa;} else {&#xa;    set result $DeviceNameForStbBlockNameForIpv6&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Configuration (contd.)</pageName>
    </instance>
  </computed>
  <tables>
    <instance>
      <name>Profiles</name>
      <script><![CDATA[&#xa;<table>&#xa;  <tr>&#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee" >Name</td>&#xa;    <td iterate = "=$ProfileName$" bgcolor="#ffffff"> =$ProfileName$&#xa;     </td>&#xa;  </tr>&#xa;   <tr>&#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Zap Behavior</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">=$ZapBehavior$&#xa;     </td>&#xa;  </tr>&#xa;&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Zap Direction</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff"> =$ZapDirection$&#xa;     </td>&#xa;  </tr>&#xa;&#xa; <tr>    &#xa;   <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Zap Interval Type</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">=$ZapIntervalType$&#xa;     </td>&#xa;     </tr>&#xa; <tr>  &#xa;<td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Zap Interval (msec)</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">  =$Interval$&#xa;     </td>&#xa; </tr>&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Changes Before View</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff"> =$ChangesBeforeView$&#xa;     </td>&#xa; </tr>&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">View Duration (sec)</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">=$ViewDuration$&#xa;     </td>&#xa; </tr>&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Set Top Leave Join Delay (msec)</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">=$SetTopLeaveJoinDelay$&#xa;     </td>&#xa; </tr>&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Join Latency Threshold (msec)</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff">=$JoinLatencyThreshold$&#xa;     </td>&#xa; </tr>&#xa; <tr>  &#xa;    <td halign ="left" colspan="1" rowspan="1" bgcolor="#eeeeee">Leave Latency Threshold (msec)</td>&#xa;  <td iterate = "=$ProfileName$" bgcolor="#ffffff"> =$LeaveLatencyThreshold$&#xa;     </td>&#xa;  </tr>&#xa;&#xa;   &#xa;</table>]]></script>
    </instance>
    <instance>
      <name>StbConfig</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port Name</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB Block Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewing Profile Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Igmp Host Config Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># of STBs</td>&#xa;    &#xa;    &#xa;  </tr>&#xa;   <tr iterate = "=$StbBlockName$">&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$PortNameForStbConfigTable$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$StbBlockName$</td>   &#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$DeviceNameForStbBlockName$</td>   &#xa;      <td colspan="1" rowspan="1" bgcolor="#ffffff">=$ProfName$</td>&#xa;      <td colspan="1" rowspan="1" bgcolor="#ffffff">=$HostConfigName$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$DeviceCnt$</td>&#xa;&#xa;      &#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>VCTable</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewed Channel Name</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$VCName$&#xa;        </td>&#xa;  </tr>&#xa;  &#xa;  <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Channel Type</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$ChannelNameForRes$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Channel Range Start</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$ChannelRangeStart$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Channel Range Step</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$ChannelRangeStep$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Channel Range End</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$ChannelRangeEnd$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Initial Channel Start</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$InitialChannelStart$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;   <tr>&#xa;        <td colspan="1" rowspan="1" bgcolor="#eeeeee">Initial Channel Step</td>&#xa;        <td iterate="=$VCName$" bgcolor="#ffffff"> =$InitialChannelStep$&#xa;        </td>&#xa;  </tr>&#xa;&#xa;</table>]]></script>
    </instance>
    <instance>
      <name>VCList</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB Block Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewed Channels Name</td>&#xa;   </tr>&#xa;   <tr iterate="=$StbBlockForViewedchannelList$">&#xa;    <td colspan="1" rowspan="1" bgcolor="#ffffff">=$StbBlockForViewedchannelList$</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#ffffff">=$DeviceNameForStbBlockForViewedChannelList$</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#ffffff">=$ViewedChannelsListByBlock$</td>&#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>VCTable2</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB Block Name</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device Name</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Join Fails by STB</td>&#xa;  </tr>&#xa;&#xa;   <tr iterate = "=$JoinFailsByBlk$">&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$StbNameByBlk$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$DeviceNameForStbNameByBlk$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$JoinFailsByBlk$</td>   &#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>StiRowStats1</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB\nBlock\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IPTV\nReceiver\nNumber</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Channel\nChanges</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min. Join\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max. Join\n Latency\n(msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg. Join\nLatency\n(msec)</td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$BlockNameBySTI$              </td>&#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForBlockNameBySTI$              </td>&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td>   &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">=$NumChanChangeBySTI$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinJLBySTI$           </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxJLBySTI$            </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgJLBySTI$             </td>&#xa;&#xa;  </tr>&#xa;   &#xa;</table>]]></script>
    </instance>
    <instance>
      <name>SummaryTab</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Summary Results</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"></td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total Test Duration (sec) </td>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$TestTime$ </td>&#xa;  </tr>&#xa; <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total # IPTV Receivers</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$NumSTI$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total # Channels</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$NumChan$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total # Channel Changes</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$NumChanChang$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total # Successful Channel Changes</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$NumSucChanChang$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Total # Failed Channel Changes</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$NumFailChanChang$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Min Change Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MinChangeLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Max Change Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MaxChangeLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Avg Change Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$AvgChangeLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Min Join Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MinJoinLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Max Join Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MaxJoinLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Avg Join Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$AvgJoinLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Min Leave Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MinLeaveLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Max Leave Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$MaxLeaveLatSum$</td>&#xa;  </tr>&#xa;  <tr>&#xa;    <td colspan="1" halign = "left" rowspan="1" bgcolor="#eeeeee">Avg Leave Latency (msec)</td>&#xa;     <td colspan="1" halign = "left" rowspan="1" bgcolor="#ffffff">=$AvgLeaveLatSum$</td>&#xa;  </tr>&#xa;&#xa;&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>StiRowStats2</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IPTV\nReceiver\nNumber</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min.\nChannel\nChange\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max.\nChannel\nChange\nLatency\n(msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg.\nChannel\nChange\nLatency\n(msec)</td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td> &#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForSTIBySTI$</td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinCLBySTI$           </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxCLBySTI$            </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgCLBySTI$             </td>&#xa;  </tr>&#xa;   &#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>ChannelRowStats</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewed\nChannel</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Channel\nChanges</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min. Join\nLatency (msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max. Join\nLatency (msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg. Join\nLatency (msec)</td>&#xa;  </tr>&#xa;  <tr  iterate = "=$ViewedChannelByEachChan$" >&#xa;    <td bgcolor="#bbbbbb"> =$ViewedChannelByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv4AddrByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv6AddrByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$NumChanChangeByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinJoinLatencyByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxJoinLatencyByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgJoinLatencyByEachChan$     </td>&#xa;  </tr>&#xa;  &#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>ConfigTable1</name>
      <script><![CDATA[<table>&#xa; <tr>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#eeeeee">Type Of Test</td>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#ffffff">=$TypeOfTest$</td>&#xa;</tr>&#xa;<tr>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#eeeeee">Test Environment</td>&#xa;   <td colspan="1" halign="left" rowspan="1" bgcolor="#ffffff">=$TestEnv$</td>&#xa;</tr> &#xa;<tr>&#xa;   <td colspan="1" halign="left" rowspan="1" bgcolor="#eeeeee">Test Duration </td>&#xa;   <td colspan="1" halign="left" rowspan="1" bgcolor="#ffffff">=$TestTime$ sec</td>&#xa;</tr>&#xa;<tr>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#eeeeee">Join Fail Percentage Threshold</td>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#ffffff">=$JoinFailPercentageThreshold$ %</td>    &#xa;</tr>&#xa;<tr>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#eeeeee">Inter Block Start Delay Step</td>&#xa;    <td colspan="1" halign="left" rowspan="1" bgcolor="#ffffff">=$InterStbStartDelayStep$ msec</td>&#xa;</tr>&#xa; <tr>&#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#eeeeee">Vlan Sub Filter (for ports with 2 or more vlans and ppp)</td>&#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#ffffff">=$VlanSubFilter$</td>&#xa;</tr> &#xa;<tr>   &#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#eeeeee">UDP Port Type </td>&#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#ffffff">=$UdpPortTypeFilter$</td>&#xa;</tr>&#xa;<tr>    &#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#eeeeee">UDP Port Number</td>&#xa;    <td colspan="1" halign="left"  rowspan="1" bgcolor="#ffffff">=$UdpPortNum$</td>&#xa;</tr>&#xa;&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>StiRowStats3</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Set\nTop\nIndex</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4\nAddress</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6\nAddress</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Join\nFail</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Duplicate\nJoin</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Dropped\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Reordered\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Duplicate\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Late\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># PRBS\nErrors</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"> Total\nPackets </td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td>  &#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForSTIBySTI$</td>  &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">=$JoinFailsBySTI$         </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$DuplicateJoinBySTI$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$DroppedPktBySTI$       </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$ReorderedPktBySTI$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$DuplicatePktBySTI$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$LatePktBySTI$          </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$PrbsErrorsbySTI$       </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$TotalPktBySTI$         </td>&#xa;  </tr>&#xa;   &#xa;</table>&#xa;&#xa;&#xa;]]></script>
    </instance>
    <instance>
      <name>ChanRowStat2</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewed Channel</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Address</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Address</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Dropped\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">#Re-ordered\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Duplicate\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># # Late\nPackets</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># PRBS\nErrors</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Join\nFails</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Duplicate\nJoins</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"> Total Packets </td>&#xa;&#xa;  </tr>&#xa;  <tr iterate = "=$ViewedChannelByEachChan$" >&#xa;    <td bgcolor="#bbbbbb"> =$ViewedChannelByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv4AddrByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv6AddrByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$DroppedPktByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$ReorderedPktByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$DuplicatePktByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$LatePktByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$PrbsErrorsByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$JoinFailPerChannel$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$DuplicateJoinPerChannel$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$TotalPktsByEachChan$     </td>&#xa;  </tr>&#xa;   &#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>GlossaryTable</name>
      <script><![CDATA[<table>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # Join Fails </td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Number of Channels that did not get any data from the device under test</td>&#xa;</tr>&#xa;<tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"># Duplicate Joins </td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Number of Channel Joins that already had data being received from the device under test</td>&#xa;</tr>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # Dropped\nPackets </td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Number of packets that were not received by the IPTV receiver</td>&#xa;</tr>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # Re-ordered\nPakcets </td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Count of received test packets that contain sequence numbers\nthat are less than expected, but were not counted as duplicates,\nand are greater than or equal to the late threshold value</td>&#xa;</tr>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # Duplicate\nPackets</td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Count of test packets that were determined to be duplicates\n A received test packet is a duplicate if its value falls within the current sequence run. </td>&#xa;</tr>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # Late Packets </td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Count of received test packets that contain sequence numbers\nthat are less than expected, were not counted as duplicates, and\nare less than the late threshold. Received sequence numbers\nthat are less than expected are due to packets that arrived later than the\nadjacent packets of the transmitted packet sequence. </td>&#xa;</tr>&#xa; <tr>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff"> # PRBS Errors</td>&#xa;   <td colspan="1" rowspan="1" bgcolor="#ffffff">Number of Pseudo-Random Binary Sequence Errors</td>&#xa;</tr>&#xa;&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>IpAddrList</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB Block Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device Name</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># of STBs</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IP Address</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IP Address Step</td>&#xa;  </tr>&#xa;   <tr iterate = "=$StbBlockNameForIp$">&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff"> =$StbBlockNameForIp$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff"> =$DeviceNameForStbBlockNameForIp$</td>&#xa;     <td colspan="1" rowspan="1" bgcolor="#ffffff">=$DeviceCountForIp$</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#ffffff"> =$IpAddrForBlock$</td>  &#xa;    <td colspan="1" rowspan="1" bgcolor="#ffffff"> =$IpAddrStepForBlock$</td>  &#xa;  </tr>&#xa;</table>]]></script>
    </instance>
    <instance>
      <name>StiRowStats1_leave</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">STB\nBlock\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IPTV\nReceiver\nNumber</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Channel\nChanges</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min. Leave\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max. Leave\nLatency\n(msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg. Leave\nLatency\n(msec)</td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$BlockNameBySTI$              </td>&#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForBlockNameBySTI$              </td>&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td>   &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">=$NumChanChangeBySTI$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinLLBySTI$           </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxLLBySTI$            </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgLLBySTI$             </td>&#xa;&#xa;  </tr>&#xa;   &#xa;</table>]]></script>
    </instance>
    <instance>
      <name>StiRowStats2_gap</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IPTV\nReceiver\nNumber</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min.\nChannel\nGap\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max.\nChannel\nGap\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg.\nChannel\nGap\nLatency\n(msec)</td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td> &#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForSTIBySTI$</td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinGLBySTI$           </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxGLBySTI$            </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgGLBySTI$             </td>&#xa;  </tr>&#xa;   &#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>StiRowStats2_overlap</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">IPTV\nReceiver\nNumber</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Device\nName</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min.\nChannel\nOverlap\nLatency\n(msec)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max.\nChannel\nOverlap\nLatency\n(msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg.\nChannel\nOverlap\nLatency\n(msec)</td>&#xa;  </tr>&#xa;   &#xa;  <tr iterate = "=$STIBySTI$">&#xa;    <td bgcolor="#bbbbbb"> =$STIBySTI$              </td> &#xa;    <td bgcolor="#bbbbbb"> =$DeviceNameForSTIBySTI$</td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv4AddressBySTI$       </td> &#xa;    <td bgcolor="#bbbbbb">=$Ipv6AddressBySTI$       </td>  &#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinOLBySTI$           </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxOLBySTI$            </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgOLBySTI$             </td>&#xa;  </tr>&#xa;   &#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>ChannelRowStats_leave</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Viewed\nChannel</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv4 Addr</td>    &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Ipv6 Addr</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee"># Channel\nChanges</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Min. Leave\nLatency (msec)</td> &#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Max. Leave\nLatency (msec) </td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Avg. Leave\nLatency (msec)</td>&#xa;  </tr>&#xa;  <tr  iterate = "=$ViewedChannelByEachChan$" >&#xa;    <td bgcolor="#bbbbbb"> =$ViewedChannelByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv4AddrByEachChan$     </td>&#xa;    <td bgcolor="#bbbbbb">=$ViewedIpv6AddrByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$NumChanChangeByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">  =$MinLeaveLatencyByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff"> =$MaxLeaveLatencyByEachChan$     </td>&#xa;    <td halign= "right" bgcolor="#ffffff">=$AvgLeaveLatencyByEachChan$     </td>&#xa;  </tr>&#xa;  &#xa;</table>&#xa;]]></script>
    </instance>
  </tables>
  <graphs>
    <instance type="Line">
      <name>JoinLatIterativePlot</name>
      <ThreeD>false</ThreeD>
      <iterate>true</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>DynamicJoinLatency</name>
        <title>Join Latency (msec)</title>
        <color></color>
        <valueAxis></valueAxis>
      </statistic>
      <title>Join Latency For =$StbHostNameHeader$: =$IndexAndVlanHeader$</title>
      <xStatistic>EventNumForDynamicPlot</xStatistic>
      <xTitle>Join Count</xTitle>
      <yTitle>Join Latency (msec)</yTitle>
    </instance>
    <instance type="Line">
      <name>LeaveLatIterativePlot</name>
      <ThreeD>false</ThreeD>
      <iterate>true</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>DynamicLeaveLatency</name>
        <title>Leave Latency (msec)</title>
        <color></color>
        <valueAxis></valueAxis>
      </statistic>
      <title>Leave Latency For =$StbHostNameHeader$: =$IndexAndVlanHeader$</title>
      <xStatistic>EventNumForDynamicPlot</xStatistic>
      <xTitle>Join Count</xTitle>
      <yTitle>Leave Latency(msec)</yTitle>
    </instance>
    <instance type="Line">
      <name>ChangeLatencyIterativePlot</name>
      <ThreeD>false</ThreeD>
      <iterate>true</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>DynamicChangeLatency</name>
        <title>Change Latency (msec)</title>
        <color></color>
        <valueAxis></valueAxis>
      </statistic>
      <title>Channel Change Latency For =$StbHostNameHeader$: =$IndexAndVlanHeader$</title>
      <xStatistic>EventNumForDynamicPlot</xStatistic>
      <xTitle>Join Count</xTitle>
      <yTitle>Change Latency (msec)</yTitle>
    </instance>
    <instance type="Line">
      <name>DiffLatencyIterativePlot</name>
      <ThreeD>false</ThreeD>
      <iterate>true</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>DynamicGapLatency</name>
        <title>Gap Latency (msec)</title>
        <color></color>
        <valueAxis></valueAxis>
      </statistic>
      <statistic>
        <name>DynamicOverlapLatency</name>
        <title>Overlap Latency (msec)</title>
        <color></color>
        <valueAxis></valueAxis>
      </statistic>
      <title>Channel Gap/Overlap For =$StbHostNameHeader$: =$IndexAndVlanHeader$</title>
      <xStatistic>EventNumForDynamicPlot</xStatistic>
      <xTitle>Join Count</xTitle>
      <yTitle>Diff Latency (msec)</yTitle>
    </instance>
  </graphs>
  <layout>
    <page name="Spirent TestCenter IPTV Report" display="true">
      <width>800</width>
      <height>800</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Image">
        <name>TopPg1</name>
        <x>0</x>
        <y>0</y>
        <width>800</width>
        <height>60</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>rightimpg1</name>
        <x>750</x>
        <y>60</y>
        <width>50</width>
        <height>690</height>
        <src>rightSideLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>BottomPg1</name>
        <x>0</x>
        <y>750</y>
        <width>800</width>
        <height>50</height>
        <src>footerLogo.png</src>
      </instance>
      <instance type="Image">
        <name>TopLeftPg1</name>
        <x>0</x>
        <y>0</y>
        <width>100</width>
        <height>60</height>
        <src>upperLeftLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>TestIntro</name>
        <x>210</x>
        <y>240</y>
        <width>240</width>
        <height>20</height>
        <size>25</size>
        <value xml:space="preserve">Spirent&amp;nbsp;TestCenter&amp;nbsp;Report</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestName</name>
        <x>250</x>
        <y>335</y>
        <width>209</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;Type:&amp;nbsp;=$TypeOfTestResult$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestStartTime</name>
        <x>250</x>
        <y>365</y>
        <width>202</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;Start&amp;nbsp;Time:&amp;nbsp;=$StartTime$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestEndTime</name>
        <x>250</x>
        <y>395</y>
        <width>199</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;End&amp;nbsp;Time:&amp;nbsp;=$EndTime$</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Test Summary" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Image">
        <name>SumTopIm</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>SumBotIm</name>
        <x>0</x>
        <y>490</y>
        <width>720</width>
        <height>50</height>
        <src>footerLogo.png</src>
      </instance>
      <instance type="Image">
        <name>SumLeftIm</name>
        <x>660</x>
        <y>75</y>
        <width>60</width>
        <height>420</height>
        <src>rightSideLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>SumTab</name>
        <x>175</x>
        <y>120</y>
        <width>243</width>
        <height>255</height>
        <value>SummaryTab</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>SumTxt1</name>
        <x>146</x>
        <y>75</y>
        <width>311</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Executive&amp;nbsp;Summary&amp;nbsp;of&amp;nbsp;IPTV&amp;nbsp;Test&amp;nbsp;Results</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Receiver Join Latency" display="true">
      <width>735</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIRow1</name>
        <x>5</x>
        <y>120</y>
        <width>730</width>
        <height>60</height>
        <value>StiRowStats1</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>TopImSTI1</name>
        <x>0</x>
        <y>0</y>
        <width>735</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STI1txt</name>
        <x>155</x>
        <y>75</y>
        <width>435</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Join&amp;nbsp;Latency&amp;nbsp;Statistics&amp;nbsp;for&amp;nbsp;IPTV&amp;nbsp;Receivers</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Receiver Leave Latency" display="true">
      <width>735</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIRow1</name>
        <x>5</x>
        <y>120</y>
        <width>730</width>
        <height>60</height>
        <value>StiRowStats1_leave</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>TopImSTI1</name>
        <x>0</x>
        <y>0</y>
        <width>735</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STI1txt</name>
        <x>155</x>
        <y>75</y>
        <width>435</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Leave&amp;nbsp;Latency&amp;nbsp;Statistics&amp;nbsp;for&amp;nbsp;IPTV&amp;nbsp;Receivers</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Receiver Change Latency" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIRow2</name>
        <x>22</x>
        <y>120</y>
        <width>675</width>
        <height>919</height>
        <value>StiRowStats2</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>STI2Im</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STI2Txt1</name>
        <x>85</x>
        <y>75</y>
        <width>511</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Change&amp;nbsp;Latency&amp;nbsp;Statistics&amp;nbsp;for&amp;nbsp;IPTV&amp;nbsp;Receiver</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Receiver Gap Latency" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIRow2</name>
        <x>22</x>
        <y>120</y>
        <width>355</width>
        <height>86</height>
        <value>StiRowStats2_gap</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>STI2Im</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STI2Txt1</name>
        <x>85</x>
        <y>75</y>
        <width>511</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Gap&amp;nbsp;Latency&amp;nbsp;Statistics&amp;nbsp;for&amp;nbsp;IPTV&amp;nbsp;Receiver</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="IPTV Receiver Overlap Latency" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIRow2</name>
        <x>22</x>
        <y>120</y>
        <width>355</width>
        <height>86</height>
        <value>StiRowStats2_overlap</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>STI2Im</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STI2Txt1</name>
        <x>85</x>
        <y>75</y>
        <width>511</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Overlap&amp;nbsp;Latency&amp;nbsp;Statistics&amp;nbsp;for&amp;nbsp;IPTV&amp;nbsp;Receiver</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="Channel Error Counts for IPTV Receiver" display="true">
      <width>832</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>STIStats3</name>
        <x>5</x>
        <y>120</y>
        <width>822</width>
        <height>893</height>
        <value>StiRowStats3</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>StiErrorIm</name>
        <x>0</x>
        <y>0</y>
        <width>832</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>STiErrorTxt</name>
        <x>261</x>
        <y>75</y>
        <width>317</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Channel&amp;nbsp;Error&amp;nbsp;Counts&amp;nbsp;For&amp;nbsp;IPTV&amp;nbsp;Recievers</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="Viewed Channel Join Latency" display="true">
      <width>728</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>ChannelResTableHeader</name>
        <x>214</x>
        <y>75</y>
        <width>288</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Join&amp;nbsp;Latency&amp;nbsp;For&amp;nbsp;Viewed&amp;nbsp;Channels</value>
        <color>#000000</color>
      </instance>
      <instance type="Table">
        <name>EachChanRes</name>
        <x>5</x>
        <y>120</y>
        <width>718</width>
        <height>710</height>
        <value>ChannelRowStats</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>HdrPg18</name>
        <x>0</x>
        <y>0</y>
        <width>728</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Viewed Channel Leave Latency" display="true">
      <width>728</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>ChannelResTableHeader</name>
        <x>214</x>
        <y>75</y>
        <width>288</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Leave&amp;nbsp;Latency&amp;nbsp;For&amp;nbsp;Viewed&amp;nbsp;Channels</value>
        <color>#000000</color>
      </instance>
      <instance type="Table">
        <name>EachChanRes</name>
        <x>5</x>
        <y>120</y>
        <width>718</width>
        <height>710</height>
        <value>ChannelRowStats_leave</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>HdrPg18</name>
        <x>0</x>
        <y>0</y>
        <width>728</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Reference Figure" display="true">
      <width>728</width>
      <height>1000</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>REFPageHeader</name>
        <x>295</x>
        <y>75</y>
        <width>121</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Reference&amp;nbsp;Figure</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>RefFig1</name>
        <x>0</x>
        <y>120</y>
        <width>728</width>
        <height>809</height>
        <src>iptvRefFig1.png</src>
      </instance>
      <instance type="Image">
        <name>HdrPg22</name>
        <x>0</x>
        <y>0</y>
        <width>728</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>FtrPg22</name>
        <x>0</x>
        <y>950</y>
        <width>728</width>
        <height>50</height>
        <src>footerLogo.png</src>
      </instance>
    </page>
    <page name="STB Join Latency Graph" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>true</iterate>
      <iterateType>Grid</iterateType>
      <gridRows>2</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>STIJLGraphHeading</name>
        <x>143</x>
        <y>6</y>
        <width>396</width>
        <height>28</height>
        <size>21</size>
        <value xml:space="preserve">Join&amp;nbsp;Latency&amp;nbsp;Graph&amp;nbsp;For&amp;nbsp;Each&amp;nbsp;Set&amp;nbsp;Top&amp;nbsp;Box</value>
        <color>#000000</color>
      </instance>
      <instance type="Graph">
        <name>JLPerSTI</name>
        <x>26</x>
        <y>117</y>
        <width>300</width>
        <height>300</height>
        <value>JoinLatIterativePlot</value>
      </instance>
    </page>
    <page name="STB Leave Latency Graph" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>true</iterate>
      <iterateType>Grid</iterateType>
      <gridRows>2</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Graph">
        <name>IterLLBySTI</name>
        <x>0</x>
        <y>0</y>
        <width>100</width>
        <height>100</height>
        <value>LeaveLatIterativePlot</value>
      </instance>
    </page>
    <page name="STB Channel Change Latency Graph" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>true</iterate>
      <iterateType>Grid</iterateType>
      <gridRows>2</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Graph">
        <name>IterCLForSTI</name>
        <x>0</x>
        <y>0</y>
        <width>100</width>
        <height>100</height>
        <value>ChangeLatencyIterativePlot</value>
      </instance>
    </page>
    <page name="STB Channel Gap/Overlap Graph" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>true</iterate>
      <iterateType>Grid</iterateType>
      <gridRows>2</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Graph">
        <name>IterDiffLatForSTI</name>
        <x>0</x>
        <y>0</y>
        <width>100</width>
        <height>100</height>
        <value>DiffLatencyIterativePlot</value>
      </instance>
    </page>
    <page name="Test Configuration " display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>TstConfig2</name>
        <x>102</x>
        <y>298</y>
        <width>527</width>
        <height>34</height>
        <value>StbConfig</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>Heading1</name>
        <x>241</x>
        <y>75</y>
        <width>178</width>
        <height>24</height>
        <size>16</size>
        <value xml:space="preserve">Test&amp;nbsp;Configuration</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>TopImgPg2</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>TstConfig1</name>
        <x>102</x>
        <y>120</y>
        <width>404</width>
        <height>136</height>
        <value>ConfigTable1</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
    </page>
    <page name="Test Configuration (contd.)" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>IpAddrList</name>
        <x>20</x>
        <y>336</y>
        <width>332</width>
        <height>34</height>
        <value>IpAddrList</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Table">
        <name>VProfileList</name>
        <x>20</x>
        <y>120</y>
        <width>303</width>
        <height>170</height>
        <value>Profiles</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>Heading2</name>
        <x>224</x>
        <y>75</y>
        <width>258</width>
        <height>24</height>
        <size>16</size>
        <value xml:space="preserve">Test&amp;nbsp;Configuration&amp;nbsp;(contd.)</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>HdrPg3</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Test Configuration (contd.)" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>VCTableIntro1</name>
        <x>12</x>
        <y>120</y>
        <width>915</width>
        <height>133</height>
        <value>VCTable</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Table">
        <name>VCTableIntro2</name>
        <x>400</x>
        <y>285</y>
        <width>-1</width>
        <height>-1</height>
        <value>VCTable2</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>Heading3</name>
        <x>202</x>
        <y>75</y>
        <width>252</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Test&amp;nbsp;Configuration(contd.)</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>HdrPg4</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>VCSTbTable</name>
        <x>12</x>
        <y>285</y>
        <width>235</width>
        <height>34</height>
        <value>VCList</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
    </page>
    <page name="Viewed Channel Error Counts" display="true">
      <width>876</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>ChanStatErr</name>
        <x>5</x>
        <y>120</y>
        <width>866</width>
        <height>1118</height>
        <value>ChanRowStat2</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Image">
        <name>CHanStat2Im</name>
        <x>0</x>
        <y>0</y>
        <width>876</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>ChanErrStatTxt</name>
        <x>268</x>
        <y>74</y>
        <width>301</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Error&amp;nbsp;Counts&amp;nbsp;For&amp;nbsp;Each&amp;nbsp;Channel&amp;nbsp;Viewed</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="Contact Details" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Image">
        <name>LastPgHdr</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>75</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>ContactDet</name>
        <x>590</x>
        <y>240</y>
        <width>130</width>
        <height>300</height>
        <src>contactLogo.jpg</src>
      </instance>
      <instance type="Text">
        <name>Gl1</name>
        <x>252</x>
        <y>75</y>
        <width>61</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Glossary</value>
        <color>#000000</color>
      </instance>
      <instance type="Table">
        <name>GloTab</name>
        <x>10</x>
        <y>120</y>
        <width>535</width>
        <height>223</height>
        <value>GlossaryTable</value>
        <size>10</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>GloExp</name>
        <x>17</x>
        <y>369</y>
        <width>511</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">For&amp;nbsp;further&amp;nbsp;explanation&amp;nbsp;please&amp;nbsp;refer&amp;nbsp;to&amp;nbsp;the&amp;nbsp;Analyzer&amp;nbsp;documentation&amp;nbsp;in&amp;nbsp;Spirent&amp;nbsp;TestCenter</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>Timestamp</name>
        <x>17</x>
        <y>517</y>
        <width>300</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">Template&amp;nbsp;Timestamp:&amp;nbsp;=$RRTemplateSavedTimestamp$</value>
        <color>#000000</color>
      </instance>
    </page>
  </layout>
  <csv/>
</template>
