<?xml version="1.0" encoding="UTF-8"?>

<test protocol="RFC2544" type="BackToBack">
	<chapter name="Cover" type="mandatory">
	    <data name="Test Type" type="mandatory"></data>
		<data name="Test Time" type="mandatory">select datetime (Utime, 'unixepoch', 'localtime') from (SELECT (julianday(CreatedTime) - 2440587.5) * 86400.0 AS Utime from DataSet where Id in (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') )</data>
	</chapter>
	<chapter name="General Information" type="default">
		<data name="STC Software Version" type="default">select Version from StcSystem where Id in (select ParamValue from EotResultNodeParam where Name='@StartDataSetId')</data>
		<data name="Trial Duration" type="default">select (CASE WHEN DurationMode == "SECONDS" THEN DurationSeconds || ' ' || "(Seconds)" WHEN DurationMode == "BURSTS" THEN DurationBursts || ' ' || "(Bursts)" END) AS TrialTime From Rfc2544BackToBackFramesConfig Group by Name</data>
		<data name="Total Number of Trials" type="default">select MAX(TrialNum) From Rfc2544Back2BackPerLoadResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId')</data>	
		<data name="Custom Frame Size List" type="default">SELECT SelectedB2B.SelectedFrameSize AS FrameSize FROM (SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS SelectedFrameSize , (CASE WHEN FrameSizeType = 'Fixed' THEN MIN(FrameSize) WHEN FrameSizeType = 'Random' THEN 0 WHEN FrameSizeType = 'iMIX' THEN MIN(FrameLengthDistribution) ELSE cast(FrameSize as int) END) AS FrameSizeOrder FROM Rfc2544Back2BackPerLoadResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') GROUP BY SelectedFrameSize) SelectedB2B GROUP BY SelectedB2B.SelectedFrameSize ORDER BY SelectedB2B.FrameSizeOrder</data>
		<data name="Counter Mode" type="default">SELECT CASE WHEN ResultViewMode == "INTERARRIVALTIME" THEN 'Inter-arrival Time' WHEN ResultViewMode == "FORWARDING" THEN "Forwarding Performance" WHEN ResultViewMode == "LATENCY_JITTER" THEN "Latency-Jitter" WHEN ResultViewMode == "LATENCY_JITTER_RFC5481" THEN "Latency with RFC5481 Jitter" ELSE ResultViewMode END from ResultOptions</data>
		<data name="Acceptable Frame Loss (%)" type="default">SELECT DurationAcceptableFrameLoss FROM Rfc2544BackToBackFramesConfig Order by ParentHnd DESC Limit 1</data>
		<data name="Back to Back Results Table" type="default">SELECT B2BFrameSize, BS As B2B_Burst, IL As IntendedLoadPercent, FR As AverageFrameRate, TxCount As AverageTxFrames, RxCount As AverageRxFrames, FL As AveragePCTFrameLost FROM ( Select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS B2BFrameSize ,R2.FS, Coalesce(MaxDuration,0) Duration, Coalesce(MaxBurstSize,0) BS,Coalesce(ILoad,'N/A') IL , Coalesce(AvgFR,'N/A') FR, Coalesce(AvgTxFrameCount,'N/A') TxCount , Coalesce(AvgRxFrameCount,'N/A') RxCount , Coalesce(AvgPCTFrameLoss,'') FL from Rfc2544Back2BackPerLoadResult R1 LEFT JOIN ( SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN 'Configured-' || Round(ConfiguredFrameSize) || ' Avg-' || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS FS,MaxDuration, MaxBurstSize,ILoad, ROUND(AVG(FrameRate),5) AvgFR, ROUND(AVG(TxFrameCount),5) AvgTxFrameCount , ROUND(AVG(RxFrameCount),5) AvgRxFrameCount, Coalesce(ROUND(AVG(PercentLoss),3), '') AvgPCTFrameLoss FROM Rfc2544Back2BackPerLoadResult DataTbl JOIN ( Select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS ILFrameSize , MAX(c.IntendedPCTLoad) ILoad, t.BurstSize MaxBurstSize, t.DurationInSec MaxDuration from Rfc2544Back2BackPerLoadResult c JOIN ( select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS B2BFrameSize ,max(BurstSize) BurstSize,max(DurationInSec) DurationInSec from Rfc2544Back2BackPerLoadResult where DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') group by B2BFrameSize ) t ON ILFrameSize=t.B2BFrameSize and c.DurationInSec=t.DurationInSec and c.DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') group by ILFrameSize ) DurationTbl ON DataTbl.DurationInSec=DurationTbl.MaxDuration AND DataTbl.IntendedPCTLoad=DurationTbl.ILoad AND FS=DurationTbl.ILFrameSize GROUP BY FS,DataTbl.IntendedLoad ) R2 ON B2BFrameSize=R2.FS WHERE R1.DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') GROUP BY B2BFrameSize ORDER BY B2BFrameSize)</data>
	</chapter>
	<chapter name="Port Map" type="default">
		<attribute name="Traffic Pattern">SELECT CASE WHEN EXISTS (Select TableName FROM TableIndex WHERE TableName = 'TxRxPortPair') THEN 'PAIR' WHEN EXISTS (Select TableName FROM TableIndex WHERE TableName = 'TxRxPortType') THEN 'BACKBONE' ELSE 'MESH' END AS TrafficPattern FROM TableIndex GROUP BY TrafficPattern</attribute>
		<attribute name="Bidirectional Traffic">SELECT CASE WHEN IsBidirectionalTraffic = 0 THEN 'False' ELSE 'True' END FROM TxRxPortType Group by IsBidirectionalTraffic</attribute>
		<attribute name="SQL" type="PAIR">Select P1.Name AS TxPort, CAST(line1.MbpsLineRate AS INT) AS TxSpeed, P2.Name AS RxPort, CAST(line2.MbpsLineRate AS INT) AS RxSpeed FROM TxRxPortPair txrx LEFT JOIN Port AS P1 ON P1.Handle = txrx.TxPortHandle LEFT JOIN Port AS P2 ON P2.Handle = txrx.RxPortHandle LEFT JOIN (Select PortHnd, MbpsLineRate FROM TheoreticalMaxLineRatePerPort GROUP BY PortHnd) line1 ON P1.Handle = line1.PortHnd LEFT JOIN (Select PortHnd, MbpsLineRate FROM TheoreticalMaxLineRatePerPort GROUP BY PortHnd) line2 ON P2.Handle = line2.PortHnd ORDER BY TxPort, RxPort</attribute>
		<attribute name="SQL" type="BACKBONETx">Select Port.Name AS TxPort, CAST(lineSpeed.MbpsLineRate AS INT) AS TxSpeed FROM TxRxPortType txrx LEFT JOIN Port ON Port.Handle = txrx.PortHandle LEFT JOIN (Select PortHnd, MbpsLineRate FROM TheoreticalMaxLineRatePerPort GROUP BY PortHnd) lineSpeed ON Port.Handle = lineSpeed.PortHnd WHERE txrx.IsTxPort = 1 ORDER BY TxPort</attribute>
		<attribute name="SQL" type="BACKBONERx">Select Port.Name AS RxPort, CAST(lineSpeed.MbpsLineRate AS INT) AS RxSpeed FROM TxRxPortType txrx LEFT JOIN Port ON Port.Handle = txrx.PortHandle LEFT JOIN (Select PortHnd, MbpsLineRate FROM TheoreticalMaxLineRatePerPort GROUP BY PortHnd) lineSpeed ON Port.Handle = lineSpeed.PortHnd WHERE txrx.IsTxPort = 0 ORDER BY RxPort</attribute>
		<attribute name="SQL" type="MESH">Select Port AS PortName, CAST(MbpsLineRate AS INT) AS LineSpeed from TheoreticalMaxLineRatePerPort GROUP BY Port ORDER BY Port</attribute>
	</chapter>
	<chapter name="Aggregated Data" type="default">
		<attribute name="SQL">Select MaxTrial.MaxTrialNum AS Trial, Tput.FrameSize AS FrameSize, Tput.TputFps AS AggTputFps, Round(Tput.OfferedMbpsLoad, 1) AS AggTputMbps, Tput.IntendedPctLoad AS AggTxIntendedRatePercent, (CASE WHEN Tput.OfferedPCTLoad &lt; 0.001 THEN Round(Tput.OfferedPCTLoad, 1) ELSE Min(Round(Tput.OfferedPCTLoad+0.05, 1), 100) END) AS AggTxRatePercent, Tput.TxFrameCount AS AggTxCountFrames, Tput.RxFrameCount AS AggRxCountFrames, Tput.FrameLoss AS AggFrameLossFrames, Coalesce(Round(Tput.PercentLoss, 3), '') AS AggPercentLoss, CAST(avg(Tput.AvgLatency) * 1000 AS INT) AS AvgLatency, CAST(min(Tput.MinLatency) * 1000 AS INT) AS MinLatency, CAST(max(Tput.MaxLatency) * 1000 AS INT) AS MaxLatency, CAST(avg(Tput.AvgJitter) * 1000 AS INT) AS AvgJitter, CAST(min(Tput.MinJitter) * 1000 AS INT) AS MinJitter, CAST(max(Tput.MaxJitter) * 1000 AS INT) AS MaxJitter FROM (Select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS FrameSize, CAST(OfferedFPSLoad as int) AS TputFps, OfferedMbpsLoad, IntendedPctLoad, OfferedPCTLoad, FrameLoss, PercentLoss, TxFrameCount, RxFrameCount, AvgLatency, MinLatency, MaxLatency, AvgJitter, MinJitter, MaxJitter from  Rfc2544Back2BackPerFrameSizeResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') ) Tput INNER JOIN ( SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS FrameSize, Max(CAST(OfferedFPSLoad as int)) AS MaxAggTputFps from Rfc2544Back2BackPerFrameSizeResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') Group BY FrameSize ) MaxTput ON Tput.FrameSize = MaxTput.FrameSize AND Tput.TputFps = MaxTput.MaxAggTputFps INNER JOIN ( SELECT Max(TrialNum) As MaxTrialNum, (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || cast(FrameSize as int) ELSE cast(FrameSize as int) END) AS FrameSize from Rfc2544Back2BackPerFrameSizeResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') Group BY FrameSize ) MaxTrial ON Tput.FrameSize = MaxTrial.FrameSize GROUP BY Tput.FrameSize ORDER BY Tput.FrameSize</attribute>
		<data name="Agg Tput (fps)" type="default"></data>
		<data name="Agg Tput (Mbps)" type="default"></data>
		<data name="Agg Tx Intended Rate (%)" type="default"></data>
		<data name="Agg Tx Rate (%)" type="default"></data>
		<data name="Agg Tx Count (frames)" type="default"></data>
		<data name="Agg Rx Count (frames)" type="default"></data>	
		<data name="Agg Frame Loss (frames)" type="default"></data>		
		<data name="Agg Frame Loss (%)" type="default"></data>
		<data name="Avg Latency (ns)" type="default"></data>
		<data name="Min Latency (ns)" type="default"></data>
		<data name="Max Latency (ns)" type="default"></data>
		<data name="Avg Jitter (ns)" type="default"></data>
		<data name="Min Jitter (ns)" type="default"></data>
		<data name="Max Jitter (ns)" type="default"></data>
	</chapter>
	<chapter name="Iteration Summary"  type="default">
		<attribute name="SQL">SELECT TrialNum AS Trial, (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || cast(ConfiguredFrameSize as int) || " Avg-" || CAST(FrameSize as int) ELSE CAST(FrameSize as int) END) AS FrameSize, Round(OfferedMbpsLoad, 1) AS TputMbps, CAST(OfferedFPSLoad as int) AS TputFps, IntendedPctLoad AS TxIntendedRatePercent, (CASE WHEN OfferedPCTLoad &lt; 0.001 THEN Round(OfferedPCTLoad, 1) ELSE Min(Round(OfferedPCTLoad+0.05, 1), 100) END) AS TxRatePercent, TxFrameCount AS TxCountFrames, RxFrameCount AS RxCountFrames, FrameLoss AS FrameLossFrames, Round(PercentLoss, 3) AS FrameLossPercent, CAST(AvgLatency*1000 AS INT) AS AvgLatency_ns, CAST(MinLatency*1000 AS INT) AS MinLatency_ns, CAST(MaxLatency*1000 AS INT) AS MaxLatency_ns, CAST(AvgJitter*1000 AS INT) AS AvgJitter_ns, CAST(MinJitter*1000 AS INT) AS MinJitter_ns, CAST(MaxJitter*1000 AS INT) AS MaxJitter_ns from Rfc2544Back2BackPerLoadResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId')</attribute>
		<data name="Tx Tput (Mbps)" type="default"></data>
		<data name="Tx Tput (fps)" type="default"></data>
		<data name="Tx Intended Rate (%)" type="default"></data>
		<data name="Tx Rate (%)" type="default"></data>
		<data name="Tx Count (frames)" type="default"></data>
		<data name="Rx Count (frames)" type="default"></data>
		<data name="Frame Loss (frames)" type="default"></data>
		<data name="Frame Loss (%)" type="default"></data>
		<data name="Avg Latency (ns)" type="default"></data>
		<data name="Min Latency (ns)" type="default"></data>
		<data name="Max Latency (ns)" type="default"></data>
		<data name="Avg Jitter (ns)" type="default"></data>
		<data name="Min Jitter (ns)" type="default"></data>
		<data name="Max Jitter (ns)" type="default"></data>
	</chapter>
	<chapter name="Charts"  type="default">
		<data name="Traffic Duration Chart" type="default">SELECT B2BFrameSize, Duration FROM ( Select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN 'Configured-' || Round(ConfiguredFrameSize) || ' Avg-' || Round(FrameSize,3) ELSE FrameSize END) AS B2BFrameSize, Coalesce(MaxDuration,0) Duration, Coalesce(MaxBurstSize,0) BS,Coalesce(ILoad,'N/A') IL from Rfc2544Back2BackPerLoadResult R1 LEFT JOIN ( SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN 'Configured-' || Round(ConfiguredFrameSize) || ' Avg-' || Round(FrameSize,3) ELSE FrameSize END) AS FS,MaxDuration, MaxBurstSize,ILoad FROM Rfc2544Back2BackPerLoadResult DataTbl JOIN ( Select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN 'Configured-' || Round(ConfiguredFrameSize) || ' Avg-' || Round(FrameSize,3) ELSE FrameSize END) AS ILFrameSize , MAX(c.intendedload) ILoad, t.BurstSize MaxBurstSize, t.DurationInSec MaxDuration from Rfc2544Back2BackPerLoadResult c JOIN ( select (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN 'Configured-' || Round(ConfiguredFrameSize) || ' Avg-' || Round(FrameSize,3) ELSE FrameSize END) AS B2BFrameSize ,max(BurstSize) BurstSize,max(DurationInSec) DurationInSec from Rfc2544Back2BackPerLoadResult where DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') group by B2BFrameSize ) t ON ILFrameSize=t.B2BFrameSize and c.DurationInSec=t.DurationInSec and c.BurstSize=t.BurstSize and c.DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') group by ILFrameSize ) DurationTbl ON DataTbl.DurationInSec=DurationTbl.MaxDuration AND DataTbl.BurstSize=DurationTbl.MaxBurstSize AND DataTbl.IntendedLoad=DurationTbl.ILoad AND FS=DurationTbl.ILFrameSize GROUP BY FS,DataTbl.IntendedLoad ) R2 ON B2BFrameSize=R2.FS WHERE R1.DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId') GROUP BY B2BFrameSize ORDER BY B2BFrameSize)</data>
		<data name="Aggregated Latency Chart" type="default">select 'FS:' || FrameSize || '; Load:' || IntendedPCTLoad FSLoad,  CAST(MIN(MinLatency) * 1000 AS INT) as MinLatency_ns, CAST(AVG(AvgLatency) * 1000  AS INT) as AvgLatency_ns, CAST(MAX(MaxLatency) * 1000  AS INT) as MaxLatency_ns from (SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || ConfiguredFrameSize || " Avg-" || FrameSize ELSE FrameSize END) AS FrameSize, (CASE WHEN FrameSizeType = 'Fixed' THEN FrameSize WHEN FrameSizeType = 'Random' THEN 0 WHEN FrameSizeType = 'iMIX' THEN DataSetId ELSE FrameSize END) AS FrameSizeOrder, IntendedPCTLoad, MinLatency, AvgLatency, MaxLatency FROM Rfc2544Back2BackPerLoadResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId')) GROUP BY FrameSize, IntendedPCTLoad ORDER BY MIN(FrameSizeOrder), IntendedPCTLoad ASC</data>
		<data name="Aggregated Jitter Chart" type="default">select 'FS:' || FrameSize || '; Load:' || IntendedPCTLoad FSLoad,  CAST(MIN(MinJitter) * 1000  AS INT) as MinJitter_ns, CAST(AVG(AvgJitter) * 1000  AS INT) as AvgJitter_ns, CAST(MAX(MaxJitter) * 1000  AS INT) as MaxJitter_ns from (SELECT (CASE WHEN FrameSizeType = 'Random' THEN 'Random' WHEN FrameSizeType = 'iMIX' THEN FrameLengthDistribution WHEN ConfiguredFrameSize &lt;&gt; 0 AND FrameSize &lt;&gt; ConfiguredFrameSize THEN "Configured-" || ConfiguredFrameSize || " Avg-" || FrameSize ELSE FrameSize END) AS FrameSize, (CASE WHEN FrameSizeType = 'Fixed' THEN FrameSize WHEN FrameSizeType = 'Random' THEN 0 WHEN FrameSizeType = 'iMIX' THEN DataSetId ELSE FrameSize END) AS FrameSizeOrder, IntendedPCTLoad, MinJitter, AvgJitter, MaxJitter FROM Rfc2544Back2BackPerLoadResult WHERE DataSetId &gt;= (select ParamValue from EotResultNodeParam where Name='@StartDataSetId')) GROUP BY FrameSize, IntendedPCTLoad ORDER BY MIN(FrameSizeOrder), IntendedPCTLoad ASC</data>
	</chapter>
	<chapter name="iMIX Distributions Table"  type="nullable">
		<attribute name="SQL">SELECT fd.name AS iMIXDistribution, fds.frameLengthMode AS FrameLengthMode,  coalesce((case when fds.frameLengthMode = 'FIXED' then CAST(fds.fixedFrameLength AS varchar(10)) else CAST(fds.minFrameLength AS varchar(10)) || '-' || CAST(fds.maxFrameLength AS varchar(10)) end),'-') AS IPTotalLength, case when fds.frameLengthMode = 'FIXED' then MAX(fds.fixedFrameLength+18, 64) else MAX(fds.MinFrameLength+18, 64) || '-' || MAX(fds.MaxFrameLength+18, 64) END AS DefaultEthernet, case when fds.frameLengthMode = 'FIXED' then fds.fixedFrameLength+8 else (fds.MinFrameLength+8) || '-' || (fds.MaxFrameLength+8) END AS POSLength, fds.weight AS Weight, round((case when TotalWt.totalWeight=0 then 0 else ((fds.weight * 100.0) /totalWeight) end),2) AS Percentage from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from  Rfc2544Back2BackPerLoadResult) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd left join (select fd.handle AS 'Handle', coalesce(sum(fds.weight),0) AS 'TotalWeight' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from Rfc2544Back2BackPerLoadResult) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fds.parenthnd = fd.handle group by fd.handle) AS TotalWt ON TotalWt.handle = fd.handle order by fd.handle, fds.handle</attribute>
	</chapter>
	<chapter name="Theoretical Max"  type="default">
	</chapter>
</test>

