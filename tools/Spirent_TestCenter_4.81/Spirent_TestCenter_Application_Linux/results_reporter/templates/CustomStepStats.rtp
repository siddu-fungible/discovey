<?xml version="1.0" encoding="UTF-8"?>

<template name="" type="stc">
  <reported>
    <instance>
      <name>TableList</name>
      <persist>false</persist>
      <value type="strings">
        <instance>CustomTestResults</instance>
        <instance>EotResultViewDefinition</instance>
        <instance>Project</instance>
        <instance>FrameLengthDistribution</instance>
        <instance>FrameLengthDistributionSlot</instance>
        <instance>TestResultSetting</instance>
        <instance>DeviceAddrOptions</instance>
        <instance>TrafficOptions</instance>
        <instance>ResultOptions</instance>
        <instance>LabelBindingGlobalConfig</instance>
        <instance>PimGlobalConfig</instance>
        <instance>IsisPlsbGlobalConfig</instance>
        <instance>BgpGlobalConfig</instance>
        <instance>ArpNdConfig</instance>
        <instance>L2LearningConfig</instance>
        <instance>Dhcpv4Options</instance>
        <instance>Dhcpv6Options</instance>
        <instance>PppoxOptions</instance>
        <instance>EoamGlobalConfig</instance>
        <instance>VqAnalyzerOptions</instance>
        <instance>Port</instance>
        <instance>Host</instance>
        <instance>EthIIIf</instance>
        <instance>HdlcIf</instance>
        <instance>PppIf</instance>
        <instance>Ipv4If</instance>
        <instance>Ipv6If</instance>
        <instance>Analyzer</instance>
        <instance>AnalyzerConfig</instance>
        <instance>FrameLengthHistogram</instance>
        <instance>InterarrivalTimeHistogram</instance>
        <instance>JitterHistogram</instance>
        <instance>LatencyHistogram</instance>
        <instance>SeqDiffCheckHistogram</instance>
        <instance>SeqRunLengthHistogram</instance>
        <instance>DiffServConfig</instance>
        <instance>HighResolutionSamplingPortConfig</instance>
        <instance>Generator</instance>
        <instance>GeneratorConfig</instance>
        <instance>Capture</instance>
        <instance>CaptureFilter</instance>
        <instance>CaptureFilterStartEvent</instance>
        <instance>CaptureFilterStopEvent</instance>
        <instance>CaptureRawPacketTagsInfo</instance>
        <instance>IgmpPortConfig</instance>
        <instance>IgmpPortResults</instance>
        <instance>MldPortConfig</instance>
        <instance>MldPortResults</instance>
        <instance>ArpCache</instance>
        <instance>ArpNdReport</instance>
        <instance>PingReport</instance>
        <instance>StpPortConfig</instance>
        <instance>Dhcpv4PortConfig</instance>
        <instance>Dhcpv4PortResults</instance>
        <instance>Dhcpv6PortConfig</instance>
        <instance>Dhcpv6PortResults</instance>
        <instance>L2tpPortConfig</instance>
        <instance>PppoxPortConfig</instance>
        <instance>PppoePortResults</instance>
        <instance>PppProtocolConfig</instance>
        <instance>PppProtocolResults</instance>
        <instance>EoamPortConfig</instance>
        <instance>EthernetCopper</instance>
        <instance>Mii</instance>
        <instance>MiiRegister</instance>
        <instance>StreamBlock</instance>
        <instance>HostGenParams</instance>
        <instance>DeviceGenIpv4IfParams</instance>
        <instance>DeviceGenLinkedStep</instance>
        <instance>DeviceGenEthIIIfParams</instance>
        <instance>StreamBlockLoadProfile</instance>
        <instance>ContinuousTestConfig</instance>
        <instance>StepTestConfig</instance>
        <instance>TheoreticalMaxLineRate</instance>
        <instance>ResultDataSet</instance>
        <instance>RealTimeResultColumnDefinition</instance>
        <instance>RealTimeResultGroupDefinition</instance>
        <instance>ResultQuery</instance>
        <instance>EotResultNode</instance>
        <instance>EotResultNodeParam</instance>
      </value>
      <path>select TableName from TableIndex;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>tstStartDate</name>
      <persist>false</persist>
      <value type="strings">
        <instance>2008-04-30 18:44:14</instance>
      </value>
      <path>select CreatedTime from DataSet where Id = (select distinct DataSetId from EotResultNodeParam where Name = "@StartDataSetId");</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>tstEndDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select CreatedTime from DataSet where Id = =$@EndDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>PickInputId</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>select Id from DataSet where Id = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestType</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Step</instance>
      </value>
      <path>select TestType from CustomTestResults where DataSetId = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>CounterMode</name>
      <persist>false</persist>
      <value type="strings">
        <instance>histogram</instance>
      </value>
      <path>select distinct lower(ResultViewMode) from ResultOptions;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A1AggLoad</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>20.0</instance>
        <instance>20.0</instance>
      </value>
      <path>select Load from (select max(FrameRate),Load from CustomTestResults where DroppedFrameCount=0 and DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ group by FrameSize order by Handle);</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A1FS</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>361.0</instance>
        <instance>417.0</instance>
      </value>
      <path>select distinct FrameSize from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A1AggTx</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>662898.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select TxFrameCount from (select max(FrameRate),TxFrameCount,RxFrameCount from CustomTestResults where DroppedFrameCount=0 and DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ group by FrameSize order by Handle);</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A1AggRx</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>662898.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select RxFrameCount from (select max(FrameRate),TxFrameCount,RxFrameCount from CustomTestResults where DroppedFrameCount=0 and DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ group by FrameSize order by Handle);</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A1AggRate</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>65474.0</instance>
        <instance>57177.0</instance>
      </value>
      <path>select max(FrameRate) from CustomTestResults where DroppedFrameCount=0 and DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ group by FrameSize order by Handle;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A2Tx</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>331917.0</instance>
        <instance>662898.0</instance>
        <instance>288991.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select TxFrameCount from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2Rx</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>331917.0</instance>
        <instance>662898.0</instance>
        <instance>288991.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select RxFrameCount from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2Drop</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <path>select CASE WHEN (RxExpectedFrameCount-(RxFrameCount-OutOfSeqCount))>=0 THEN RxExpectedFrameCount-(RxFrameCount-OutOfSeqCount) ELSE 'N/A' END from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2PL</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <path>select CASE WHEN (RxExpectedFrameCount-(RxFrameCount-OutOfSeqCount))>=0 THEN Round(CAST(RxExpectedFrameCount-RxFrameCount+OutOfSeqCount AS FLOAT)/CAST(RxExpectedFrameCount AS FLOAT)*100,4) ELSE 'N/A' END from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2InSeq</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>331917.0</instance>
        <instance>662898.0</instance>
        <instance>288991.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select InSeqCount from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
	<instance>
      <name>A2OutOfSeq</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>331917.0</instance>
        <instance>662898.0</instance>
        <instance>288991.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select OutOfSeqCount from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A2TxRate</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>32737.0</instance>
        <instance>65474.0</instance>
        <instance>28588.0</instance>
        <instance>57177.0</instance>
      </value>
      <path>select FrameRate from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2AvgLat</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.107</instance>
        <instance>0.107</instance>
        <instance>0.107</instance>
        <instance>0.107</instance>
      </value>
      <path>select AvgLatency from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2MinLat</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.1</instance>
        <instance>0.1</instance>
        <instance>0.1</instance>
        <instance>0.1</instance>
      </value>
      <path>select MinLatency from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2MaxLat</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.11</instance>
        <instance>0.11</instance>
        <instance>0.11</instance>
        <instance>0.11</instance>
      </value>
      <path>select MaxLatency from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2Load</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>10.0</instance>
        <instance>20.0</instance>
        <instance>10.0</instance>
        <instance>20.0</instance>
      </value>
      <path>select Load from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2FS</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>361.0</instance>
        <instance>361.0</instance>
        <instance>417.0</instance>
        <instance>417.0</instance>
      </value>
      <path>select (case FrameSizeType when "Random" then "N/A" else FrameSize end) AS FrameSizeForDisplay from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>StartDataSetId</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>select '=$@StartDataSetId$' from sqlite_master limit 1</path>
      <multivalued>false</multivalued>
      <pageName>Theoretical Max</pageName>
    </instance>
    <instance>
      <name>EndDataSetId</name>
      <persist>false</persist>
      <value type="strings">
        <instance>2147483647</instance>
      </value>
      <path>select '=$@EndDataSetId$' from sqlite_master limit 1</path>
      <multivalued>false</multivalued>
      <pageName>Theoretical Max</pageName>
    </instance>
    <instance>
      <name>InputStartDataSetId</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>select DataSetId from CustomTestResults where DataSetId ==$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>InputEndDataSetId</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DataSetId from CustomTestResults where DataSetId ==$@EndDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestStatus</name>
      <persist>false</persist>
      <value type="strings">
        <instance>PASSED</instance>
      </value>
      <path>select ResultState from EotResultNode where Id = (select max(Id) from EotResultNode);</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailedContFlg</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>select EnableDetailedResultsCollection from ContinuousTestConfig where DataSetId = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailedFixedFlg</name>
      <persist>false</persist>
      <value type="String">-</value>
      <path>select EnableDetailedResultsCollection from FixedDurationTestConfig where DataSetId = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailedStepFlg</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>select EnableDetailedResultsCollection from StepTestConfig where DataSetId = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailedThruFlg</name>
      <persist>false</persist>
      <value type="String">-</value>
      <path>select EnableDetailedResultsCollection from ThroughputTestConfig where DataSetId = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ReportedAcceptableFrameLoss</name>
      <persist>false</persist>
      <value type="String">-</value>
      <path>SELECT AcceptableFrameLoss FROM CustomThroughputResultParams</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>G1AvgFR</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>49106.0</instance>
        <instance>42883.0</instance>
      </value>
      <path>select round(avg(FrameRate)) from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ group by FrameSize order by FrameSize</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>G1AvgFS</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Default</instance>
        <instance>Spirent</instance>
      </value>
      <path>select distinct (case FrameSizeType when "iMIX" then FrameLengthDistribution when "Random" then "Random" else FrameSize end) AS FrameSizeForDisplay from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>A2ExpectedRx</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>331917.0</instance>
        <instance>662898.0</instance>
        <instance>288991.0</instance>
        <instance>577483.0</instance>
      </value>
      <path>select RxExpectedFrameCount from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>FrameSizeType</name>
      <persist>false</persist>
      <value type="strings">
        <instance>iMIX</instance>
      </value>
      <path>select distinct FrameSizeType from CustomTestResults;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,iMIX Distributions,Step Test Summary</pageName>
    </instance>
	<instance>
      <name>A2Duration</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select Duration from CustomTestResults;</path>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
	<instance>
      <name>DurationType</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select distinct DurationMode from CustomTestResults;</path>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>ImixFSDistName</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
      </value>
      <path>select fd.name AS 'iMIX Distribution' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd order by fd.handle, fds.handle</path>
      <multivalued>true</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSMode</name>
      <persist>false</persist>
      <value type="strings">
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
      </value>
      <path>select fds.frameLengthMode AS 'Frame Length Mode' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd order by fd.handle, fds.handle</path>
      <multivalued>true</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSIPLen</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>40.0</instance>
        <instance>576.0</instance>
        <instance>1500.0</instance>
        <instance>40.0</instance>
        <instance>44.0</instance>
        <instance>576.0</instance>
        <instance>1500.0</instance>
      </value>
      <path>select coalesce((case when fds.frameLengthMode = 'FIXED' then CAST(fds.fixedFrameLength AS varchar(10)) else CAST(fds.minFrameLength AS varchar(10)) || '-' || CAST(fds.maxFrameLength AS varchar(10)) end),'-') AS 'IP Frame Length' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd order by fd.handle, fds.handle</path>
      <multivalued>true</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSWeight</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>7.0</instance>
        <instance>4.0</instance>
        <instance>1.0</instance>
        <instance>5867.0</instance>
        <instance>200.0</instance>
        <instance>2366.0</instance>
        <instance>1567.0</instance>
      </value>
      <path>select fds.weight AS 'Weight' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd order by fd.handle, fds.handle</path>
      <multivalued>true</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSPercentWt</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>58.33</instance>
        <instance>33.33</instance>
        <instance>8.33</instance>
        <instance>58.67</instance>
        <instance>2.0</instance>
        <instance>23.66</instance>
        <instance>15.67</instance>
      </value>
      <path>select round((case when TotalWt.totalWeight=0 then 0 else ((fds.weight * 100.0) /totalWeight) end),2) AS 'Percentage(%)' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fd.handle=fds.parentHnd left join (select fd.handle AS 'Handle', coalesce(sum(fds.weight),0) AS 'TotalWeight' from FrameLengthDistribution fd inner join (select distinct framelengthDistribution from CustomTestResults) test ON fd.name=test.frameLengthDistribution left join FrameLengthDistributionSlot fds ON fds.parenthnd = fd.handle group by fd.handle) AS TotalWt ON TotalWt.handle = fd.handle order by fd.handle, fds.handle</path>
      <multivalued>true</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>A2RxRate</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ForwardingRate from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2MaxJitter</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <path>select MaxJitter from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2MinJitter</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <path>select MinJitter from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2AvgJitter</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <path>select AvgJitter from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details</pageName>
    </instance>
    <instance>
      <name>A2FD</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
      </value>
      <path>select FrameLengthDistribution from CustomTestResults where DataSetId between =$@StartDataSetId$ and =$@EndDataSetId$ order by FrameSize, Load;</path>
      <multivalued>true</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
  </reported>
  <computed>
    <instance>
      <name>TestResultColour</name>
      <persist>false</persist>
      <value type="String">#00ff00</value>
      <script><![CDATA[# Set the text colour based on pass/fail&#xa;# In table: <td bgcolor="=$computedVarName$">&#xa;# In graphs: =$computedVarName$ instead of #xxxxxx&#xa;if {($TestStatus == "COMPLETED")||($TestStatus == "PASSED")} {&#xa;set result "#00ff00"&#xa;} else {&#xa;set result "#ff0000"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ColourList</name>
      <persist>false</persist>
      <value type="strings">
        <instance>#ff0000</instance>
        <instance>#00ff00</instance>
        <instance>#ffff00</instance>
        <instance>#cc66ff</instance>
        <instance>#aa00ff</instance>
        <instance>#ff3399</instance>
        <instance>#00bbbb</instance>
        <instance>#bbbb80</instance>
        <instance>#bbbbbb</instance>
        <instance>#cc9900</instance>
        <instance>#ff0000</instance>
        <instance>#00ff00</instance>
        <instance>#ffff00</instance>
        <instance>#cc66ff</instance>
        <instance>#aa00ff</instance>
        <instance>#ff3399</instance>
      </value>
      <script><![CDATA[&#xa;# create a list of colours that can be used in various graphs&#xa;&#xa;set result [list]&#xa;&#xa;#red&#xa;lappend result "#ff0000"&#xa;#green&#xa;lappend result "#00ff00"&#xa;#yellow&#xa;lappend result "#ffff00"&#xa;#light purple&#xa;#lappend result "#ff00ff"&#xa;#medium purple&#xa;lappend result "#cc66ff"&#xa;#dark purple&#xa;lappend result "#aa00ff"&#xa;#pink&#xa;lappend result "#ff3399"&#xa;#turquoise&#xa;lappend result "#00bbbb"&#xa;#light gray&#xa;lappend result "#bbbb80"&#xa;#dark gray&#xa;lappend result "#bbbbbb"&#xa;#brown&#xa;lappend result "#cc9900"&#xa;#red&#xa;lappend result "#ff0000"&#xa;#green&#xa;lappend result "#00ff00"&#xa;#yellow&#xa;lappend result "#ffff00"&#xa;#light purple&#xa;lappend result "#cc66ff"&#xa;#dark purple&#xa;lappend result "#aa00ff"&#xa;#pink&#xa;lappend result "#ff3399"&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailStatsEnabled</name>
      <persist>false</persist>
      <value type="String">N/A</value>
      <script><![CDATA[# Set the Detailed Stats Flag as enabled/disabled&#xa;&#xa;# default to disabled&#xa;set result  {}&#xa;&#xa;# get test type (see "GetTestType" script) - default to N/A if  @StartDataSetId == 1 since template was chosen from pcik list&#xa;if {$PickInputId == 1} {&#xa;  set tstType "None"&#xa;} else {&#xa;  set tstType $TestType&#xa;}&#xa;&#xa;if {$tstType == "Step Test"} {&#xa;  set testFlg $DetailedStepFlg&#xa;} elseif {$tstType == "Throughput Test"} {&#xa;  set testFlg $DetailedThruFlg&#xa;} elseif {$tstType == "Fixed Duration Test"} {&#xa;  set testFlg $DetailedFixedFlg&#xa;} elseif {$tstType == "Continuous Test"} {&#xa;  set testFlg $DetailedContFlg&#xa;} elseif {$tstType == "None"} {&#xa;  set testFlg "N/A"&#xa;} else {&#xa;    set testFlg $tstType&#xa;}&#xa;&#xa;# now translate into enabled/disabled&#xa;if {$testFlg == 1} {&#xa;  set result "Enabled"&#xa;} elseif {$testFlg == 0} {&#xa;  set result "Disabled"&#xa;} else {&#xa;  set result "N/A"&#xa;}&#xa; &#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ReportDate</name>
      <persist>false</persist>
      <value type="String">2008-04-30 11:47:57 PDT</value>
      <script><![CDATA[# generate the current date&#xa;set systemTime [clock seconds]&#xa;set result [clock format $systemTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestStartDate</name>
      <persist>false</persist>
      <value type="String">2008-04-30 11:44:14 PDT</value>
      <script><![CDATA[# generate the report start date - must convert from GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;set result {}&#xa;set  dateSplit [split $tstStartDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>EpochDate</name>
      <persist>false</persist>
      <value type="String">1209581277</value>
      <script><![CDATA[# generate the current date from Tx Stream timestamp&#xa;&#xa;#Note: Tx Stream timestamp is 16 characters long&#xa;#            [clock seconds] returns a 10 character number&#xa;&#xa;set systemTime [clock seconds]&#xa;#set systemTime $EpochSec&#xa;#set systemTime $EpochSecChop&#xa;set result $systemTime&#xa;&#xa;#set result [clock format $systemTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>GetTestType</name>
      <persist>false</persist>
      <value type="String">-</value>
      <script><![CDATA[# Determine test type&#xa;&#xa;# with new DB, assume that there is always a CustumTestResults table entry of 0&#xa;&#xa;# if test was entered via "pick list" then data set ID will be 1 and test type will likely be found at data set ID =3&#xa;#  - note that with the new multi DB schema that start dataset ID may now be 1&#xa;#  otherwise use the input data set ID&#xa;&#xa;set result {}&#xa;&#xa;if {$PickInputId == 1} {&#xa;  # TestTypeID3 may return 2 results, take first one&#xa;  # also note that the test types are two words&#xa;  #set result [concat [lindex $TestTypeID3 0] [lindex $TestTypeID3 1] ]&#xa;&#xa;  set result [concat [lindex $TestTypeID3 0] " Test"]&#xa;&#xa;} else {&#xa;  set result $TestType&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestEndDate</name>
      <persist>false</persist>
      <value type="String">-</value>
      <script><![CDATA[# generate the report end date - must convert from GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;set result {}&#xa;set  dateSplit [split $tstEndDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>CompTestType</name>
      <persist>false</persist>
      <value type="String">Step</value>
      <script><![CDATA[# Determine test type&#xa;&#xa;# there may be multiple entires in the custom results table for start data set ID - take the first one&#xa;&#xa;set str [lindex $TestType 0]&#xa;&#xa;set result $str]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>CounterModeType</name>
      <persist>false</persist>
      <value type="String">Histogram</value>
      <script><![CDATA[# Determine counter mode&#xa;&#xa;set str [string range $CounterMode 0 0]&#xa;set str [string toupper $str]&#xa;set str2 [string range $CounterMode 1 end]&#xa;set result $str$str2]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>TputTxCntByFrameSize</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>662898.0</instance>
        <instance>577483.0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "-" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query "select \"/\" || FrameSize ||\"/\"|| TxFrameCount from (select FrameSize, max(FrameRate), TxFrameCount from CustomTestResults where PercentLoss <= $acceptableFrameLoss  and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by FrameSize)"    &#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;set rowdata [list]&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend rowdata [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;&#xa;foreach fsize $A1FS {&#xa;&#xa;    set fsize [expr int($fsize)]&#xa;    set txcount "-"&#xa;&#xa;    set idx [lsearch  $rowdata  /$fsize/*]&#xa;&#xa;    if { $idx != -1} {&#xa;        #  list elements in the format of /framesize/framerate&#xa;        set txcount  [lindex [split [lindex $rowdata $idx] /] 2]      &#xa;    }&#xa;    lappend result $txcount&#xa;}&#xa;&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TputRxCntByFrameSize</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>662898.0</instance>
        <instance>577483.0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "-" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query "select \"/\" || FrameSize ||\"/\"|| RxFrameCount from (select FrameSize, max(FrameRate), RxFrameCount from CustomTestResults where PercentLoss <= $acceptableFrameLoss  and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by FrameSize)"    &#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;set rowdata [list]&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend rowdata [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;&#xa;foreach fsize $A1FS {&#xa;&#xa;    set fsize [expr int($fsize)]&#xa;    set txcount "-"&#xa;&#xa;    set idx [lsearch  $rowdata  /$fsize/*]&#xa;&#xa;    if { $idx != -1} {&#xa;        #  list elements in the format of /framesize/framerate&#xa;        set txcount  [lindex [split [lindex $rowdata $idx] /] 2]      &#xa;    }&#xa;    lappend result $txcount&#xa;}&#xa;&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TputRateByFrameSize</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>65474.0</instance>
        <instance>57177.0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "-" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query "select \"/\" || FrameSize ||\"/\"|| FrameRate from (select FrameSize, max(FrameRate) as FrameRate from CustomTestResults where PercentLoss <= $acceptableFrameLoss  and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by FrameSize)"    &#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;set rowdata [list]&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend rowdata [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;&#xa;foreach fsize $A1FS {&#xa;&#xa;    set fsize [expr int($fsize)]&#xa;    set txcount "-"&#xa;&#xa;    set idx [lsearch  $rowdata  /$fsize/*]&#xa;&#xa;    if { $idx != -1} {&#xa;        #  list elements in the format of /framesize/framerate&#xa;        set txcount  [lindex [split [lindex $rowdata $idx] /] 2]      &#xa;    }&#xa;    lappend result $txcount&#xa;}&#xa;&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TputLoadByFrameSize</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>20.0</instance>
        <instance>20.0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "-" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query "select \"/\" || FrameSize ||\"/\"|| Load from (select FrameSize, max(FrameRate),Load from CustomTestResults where PercentLoss <= $acceptableFrameLoss  and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by FrameSize)"    &#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;set rowdata [list]&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend rowdata [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;&#xa;foreach fsize $A1FS {&#xa;&#xa;    set fsize [expr int($fsize)]&#xa;    set txcount "-"&#xa;&#xa;    set idx [lsearch  $rowdata  /$fsize/*]&#xa;&#xa;    if { $idx != -1} {&#xa;        #  list elements in the format of /framesize/txcount&#xa;        set txcount  [lindex [split [lindex $rowdata $idx] /] 2]      &#xa;    }&#xa;    lappend result $txcount&#xa;}&#xa;&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>PassTputFrameSize</name>
      <persist>false</persist>
      <value type="String">-</value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.caw.analyzer.sqlite.SqlReader create $::dbname]&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "\"-\"" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query  "select FrameSize from (select max(FrameRate),FrameSize from CustomTestResults where PercentLoss <= $acceptableFrameLoss and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by Handle);"&#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend result [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;puts RESULT:$result]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>PassTputLoad</name>
      <persist>false</persist>
      <value type="String">-</value>
      <script><![CDATA[set result [list]&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;&#xa;# open db&#xa;set db [java::call com.caw.analyzer.sqlite.SqlReader create $::dbname]&#xa;&#xa;&#xa;&#xa;set acceptableFrameLoss 0&#xa;# If Sql query failed then ReportedAcceptableFrameLoss will equal '-'&#xa;if { $ReportedAcceptableFrameLoss  != "\"-\"" }  {&#xa;    set acceptableFrameLoss $ReportedAcceptableFrameLoss&#xa;}&#xa;&#xa;set query "select Load from (select max(FrameRate),Load from CustomTestResults where PercentLoss <= $acceptableFrameLoss and (txframecount <> 0 and rxframecount <> 0) and DataSetId between $StartDataSetId and $EndDataSetId group by FrameSize order by Handle)"&#xa;&#xa;# Run Query&#xa;set dbResult [$db query $query]&#xa;&#xa;# put query result in to result var&#xa;set count [java::field $dbResult nrows]&#xa;&#xa;for {set i 0} {$i < $count} {incr i} {&#xa;    set row [[java::field $dbResult rows] get $i]&#xa;    set rowarray [java::cast {java.lang.Object[]} $row]&#xa;    lappend result [[$rowarray get 0] toString]&#xa;}&#xa;&#xa;$db close&#xa;&#xa;puts RESULT:$result]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>FrameSizeTitle</name>
      <persist>false</persist>
      <value type="String">iMIX Distribution</value>
      <script><![CDATA[#Derive the Framesize title based on the frame size type&#xa;if {$FrameSizeType == "iMIX"} {&#xa;set result "iMIX \n Distribution"&#xa;} else {&#xa;set result "Frame Size\n(bytes)"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
	<instance>
      <name>DurationTitle</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[#Derive the duration title based on the duration mode type&#xa;if {$DurationType == "SECONDS"} {&#xa;set result "Duration\n(Seconds)"&#xa;} else {&#xa;set result "Duration\n(Bursts)"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>ImixNote</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[#Display Note when frame size type is not iMIX&#xa;if {$FrameSizeType == "iMIX"} {&#xa;set result ""&#xa;} else {&#xa;set result "Note: Imix Distributions are only available for the 'iMIX' Frame Size Type "&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixDefaultEthernet</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>64.0</instance>
        <instance>594.0</instance>
        <instance>1518.0</instance>
        <instance>64.0</instance>
        <instance>64.0</instance>
        <instance>594.0</instance>
        <instance>1518.0</instance>
      </value>
      <script><![CDATA[# Calculate Default Ethernet frame length for frame sizes in iMIX Distributions&#xa;# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;foreach fsize $ImixFSIPLen fmode $ImixFSMode {&#xa;&#xa;set etherlen "-"&#xa;if {$fmode != "RANDOM"}  {&#xa;   set fsize [expr int($fsize)]&#xa;   set etherlen [expr $fsize + 18]      &#xa;    if {$etherlen < 64} {&#xa;         set etherlen 64&#xa;     }&#xa;} else {&#xa;   set flist [split $fsize "-"]&#xa;   set minlen [expr [lindex $flist 0] + 18]&#xa;   set maxlen [expr [lindex $flist 1] + 18]&#xa;   if { $minlen < 64}  {&#xa;        set minlen 64&#xa;   }&#xa;   if { $maxlen < 64}  {&#xa;        set maxlen 64&#xa;   }&#xa;   set etherlen "$minlen-$maxlen"&#xa;}&#xa;lappend result $etherlen&#xa;}&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixPosLen</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>64.0</instance>
        <instance>594.0</instance>
        <instance>1518.0</instance>
        <instance>64.0</instance>
        <instance>64.0</instance>
        <instance>594.0</instance>
        <instance>1518.0</instance>
        <instance>48.0</instance>
        <instance>584.0</instance>
        <instance>1508.0</instance>
        <instance>48.0</instance>
        <instance>52.0</instance>
        <instance>584.0</instance>
        <instance>1508.0</instance>
      </value>
      <script><![CDATA[# Calculate P&#xa;# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;foreach fsize $ImixFSIPLen fmode $ImixFSMode {&#xa;set poslen "-"&#xa;&#xa;if {$fmode != "RANDOM"}  {&#xa;    &#xa;    set fsize [expr int($fsize)]&#xa;    set poslen [expr $fsize + 8]      &#xa;&#xa;} else {&#xa;    set flist [split $fsize "-"]&#xa;    &#xa;    set minlen [expr [lindex $flist 0] + 8]&#xa;    set maxlen [expr [lindex $flist 1] + 8]&#xa;    &#xa;    set poslen "$minlen-$maxlen"&#xa;}&#xa;    lappend result $poslen&#xa;&#xa;}&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestampMS</name>
      <persist>true</persist>
      <value type="String">1209513362131</value>
      <script><![CDATA[set result "1249947451074"]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestamp</name>
      <persist>true</persist>
      <value type="String">Tue Apr 29 16:56:02.131 PDT 2008</value>
      <script><![CDATA[set result "Mon Aug 10 16:37:31.074 PDT 2009"]]></script>
      <multivalued>false</multivalued>
      <pageName>Theoretical Max</pageName>
    </instance>
    <instance>
      <name>ImixFSDistNameVal</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
      </value>
      <script><![CDATA[# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;set result $ImixFSDistName&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSModeVal</name>
      <persist>false</persist>
      <value type="strings">
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
        <instance>FIXED</instance>
      </value>
      <script><![CDATA[# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;set result $ImixFSMode&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSIPLenVal</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>40.0</instance>
        <instance>576.0</instance>
        <instance>1500.0</instance>
        <instance>40.0</instance>
        <instance>44.0</instance>
        <instance>576.0</instance>
        <instance>1500.0</instance>
      </value>
      <script><![CDATA[# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;set result $ImixFSIPLen&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSWeightVal</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>7.0</instance>
        <instance>4.0</instance>
        <instance>1.0</instance>
        <instance>5867.0</instance>
        <instance>200.0</instance>
        <instance>2366.0</instance>
        <instance>1567.0</instance>
      </value>
      <script><![CDATA[# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;set result $ImixFSWeight&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>ImixFSPercentWtVal</name>
      <persist>false</persist>
      <value type="doubles">
        <instance>58.33</instance>
        <instance>33.33</instance>
        <instance>8.33</instance>
        <instance>58.67</instance>
        <instance>2.0</instance>
        <instance>23.66</instance>
        <instance>15.67</instance>
      </value>
      <script><![CDATA[# Check for empty row&#xa;if {$FrameSizeType != "iMIX"} {&#xa;set result "N/A"&#xa;} else {&#xa;set result $ImixFSPercentWt&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>iMIX Distributions</pageName>
    </instance>
    <instance>
      <name>A2FSToDisplay</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Default</instance>
        <instance>Default</instance>
        <instance>Spirent</instance>
        <instance>Spirent</instance>
      </value>
      <script><![CDATA[if {$FrameSizeType =="iMIX"} {&#xa;set result $A2FD&#xa;} else {&#xa;set result $A2FS&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
	<instance>
      <name>A2DurationToDisplay</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result $A2Duration]]></script>
      <multivalued>false</multivalued>
      <pageName>Step Test Details,Step Test Summary</pageName>
    </instance>
    <instance>
      <name>A2GraphXLabel</name>
      <persist>false</persist>
      <value type="strings">
        <instance>FS:iMIX Load:10.0</instance>
        <instance>FS:Distribution Load:20.0</instance>
        <instance>FS: Load:10.0</instance>
        <instance>FS: Load:20.0</instance>
      </value>
      <script><![CDATA[#Derive the graph label based on the frame size type&#xa;if {$FrameSizeType == "iMIX"} {&#xa;set fresult $A2FD&#xa;} else {&#xa;set fresult $A2FS&#xa;}&#xa;&#xa;set result [list]&#xa;foreach fsize $fresult lsize $A2Load {&#xa;set temp {}&#xa;append temp "FS:"&#xa;append temp $fsize&#xa;append temp " Load:"&#xa;append temp $lsize&#xa;lappend result $temp&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Step Test Summary</pageName>
    </instance>
  </computed>
  <tables>
    <instance>
      <name>A1AggThruFS</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;     <td bgcolor="#eeeeee">Frame Size\n(bytes)</td>&#xa;    <td bgcolor="#eeeeee">Load\n(%)</td>&#xa;     <td bgcolor="#eeeeee">Tx Frames</td>&#xa;     <td bgcolor="#eeeeee">Rx Frames</td>&#xa;     <td bgcolor="#eeeeee">Throughput\n(fps)</td>&#xa;  </tr>&#xa; <tr iterate="=$A1FS$">&#xa;    <td halign="right" bgcolor="#eeeeee">=$A1FS$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$TputLoadByFrameSize$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$TputTxCntByFrameSize$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$TputRxCntByFrameSize$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$TputRateByFrameSize$</td>&#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>A2AggThruDetail</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td bgcolor="#eeeeee">=$FrameSizeTitle$</td>&#xa;    <td bgcolor="#eeeeee">=$DurationTitle$</td>&#xa;	<td bgcolor="#eeeeee">Load\n(%)</td>&#xa;    <td bgcolor="#eeeeee">Tx\nFrames</td>&#xa;    <td bgcolor="#eeeeee">Rx\nFrames</td>&#xa;    <td bgcolor="#eeeeee">Rx\nExpected\nFrames</td>&#xa;    <td bgcolor="#eeeeee">Rx Out of\nSequence Frames</td>&#xa;	<td bgcolor="#eeeeee">Tx Frame\nRate (fps)</td>&#xa; <td bgcolor="#eeeeee">Rx Frame\nRate (fps)</td>&#xa;    <td bgcolor="#eeeeee">Frame\nLoss</td>&#xa;	<td bgcolor="#eeeeee">Frame\nLoss (%)</td>&#xa;    <td bgcolor="#eeeeee">Min\nLatency\n(uSec)</td>&#xa;     <td bgcolor="#eeeeee">Avg\nLatency\n(uSec)</td>&#xa;     <td bgcolor="#eeeeee">Max\nLatency\n(uSec)</td>&#xa;     <td bgcolor="#eeeeee">Min\nJitter\n(uSec)</td>&#xa;     <td bgcolor="#eeeeee">Avg\nJitter\n(uSec)</td>&#xa;     <td bgcolor="#eeeeee">Max\nJitter\n(uSec)</td>&#xa;  </tr>&#xa; <tr iterate="=$A2FSToDisplay$">&#xa;    <td halign="right" bgcolor="#eeeeee">=$A2FSToDisplay$</td>&#xa;    <td halign="right" bgcolor="#eeeeee">=$A2DurationToDisplay$</td>&#xa;	<td halign="right" bgcolor="#eeeeee">=$A2Load$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2Tx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2Rx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2ExpectedRx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2OutOfSeq$</td>&#xa;	<td halign="right" bgcolor="#ffffff">=$A2TxRate$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$A2RxRate$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2Drop$</td>&#xa;	<td halign="right" bgcolor="#ffffff">=$A2PL$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2MinLat$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2AvgLat$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2MaxLat$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2MinJitter$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2AvgJitter$</td>&#xa;     <td halign="right" bgcolor="#ffffff">=$A2MaxJitter$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>A2FRSummary</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;     <td bgcolor="#eeeeee">=$FrameSizeTitle$</td>&#xa;    <td bgcolor="#eeeeee">=$DurationTitle$</td>&#xa;	<td bgcolor="#eeeeee">Load\n(%)</td>&#xa;     <td bgcolor="#eeeeee">Tx Frame\nRate(fps)</td>&#xa;  <td bgcolor="#eeeeee">Rx Frame\nRate(fps)</td>&#xa;     <td bgcolor="#eeeeee">Tx Frames</td>&#xa;     <td bgcolor="#eeeeee">Rx Frames</td>&#xa;     <td bgcolor="#eeeeee">Rx Expected\nFrames</td>&#xa;     <td bgcolor="#eeeeee">Frame Loss</td>&#xa;  </tr>&#xa; <tr iterate="=$A2FSToDisplay$">&#xa;    <td halign="right" bgcolor="#eeeeee">=$A2FSToDisplay$</td>&#xa;    <td halign="right" bgcolor="#eeeeee">=$A2DurationToDisplay$</td>&#xa;		<td halign="right" bgcolor="#ffffff">=$A2Load$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2TxRate$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$A2RxRate$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2Tx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2Rx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2ExpectedRx$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$A2Drop$</td>&#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>FrameSizeImixDistribution</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;     <td bgcolor="#eeeeee">iMIX\nDistribution</td>&#xa;    <td bgcolor="#eeeeee">Frame\nLength Mode</td>&#xa;     <td bgcolor="#eeeeee">IP Total\nLength</td>&#xa;     <td bgcolor="#eeeeee">Default\nEthernet</td>&#xa;     <td bgcolor="#eeeeee">POS\nLength</td>&#xa;     <td bgcolor="#eeeeee">Weight</td>&#xa;     <td bgcolor="#eeeeee">Percentage\n(%)</td>&#xa;  </tr>&#xa; <tr iterate="=$ImixFSDistNameVal$">&#xa;    <td halign="right" bgcolor="#eeeeee">=$ImixFSDistNameVal$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixFSModeVal$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixFSIPLenVal$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixDefaultEthernet$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixPosLen$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixFSWeightVal$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$ImixFSPercentWtVal$</td>&#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
  </tables>
  <graphs>
    <instance type="Bar">
      <name>G1FRbyFS</name>
      <ThreeD>false</ThreeD>
      <iterate>false</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>A2TxRate</name>
        <title>Tx Frame Rate</title>
        <color>#4040ff</color>
        <valueAxis>Tx Frame Rate (fps)</valueAxis>
      </statistic>
      <statistic>
        <name>A2RxRate</name>
        <title>Rx Frame Rate</title>
        <color>#40ff40</color>
        <valueAxis>Rx Frame Rate (fps)</valueAxis>
      </statistic>
      <title></title>
      <xStatistic>A2GraphXLabel</xStatistic>
      <xTitle>Frame Size and Load%</xTitle>
      <yTitle>Frame Rate (fps)</yTitle>
    </instance>
  </graphs>
  <layout>
    <page name="Title" display="true">
      <width>800</width>
      <height>800</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>TestStartStr</name>
        <x>200</x>
        <y>510</y>
        <width>59</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;Date:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>SpirentLotoTextStr</name>
        <x>200</x>
        <y>349</y>
        <width>287</width>
        <height>31</height>
        <size>25</size>
        <value xml:space="preserve">Spirent&amp;nbsp;TestCenter&amp;nbsp;Report</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestTypeStr</name>
        <x>200</x>
        <y>450</y>
        <width>106</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">Custom&amp;nbsp;Test&amp;nbsp;Type:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestTypeVar</name>
        <x>320</x>
        <y>450</y>
        <width>26</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">=$CompTestType$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>CounterModeStr</name>
        <x>200</x>
        <y>479</y>
        <width>103</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Counter&amp;nbsp;Mode:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>CounterModeStr</name>
        <x>320</x>
        <y>479</y>
        <width>4</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">=$CounterModeType$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestStartVar</name>
        <x>320</x>
        <y>509</y>
        <width>145</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">=$TestStartDate$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>upperLeftLogo</name>
        <x>0</x>
        <y>0</y>
        <width>200</width>
        <height>100</height>
        <src>upperLeftLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>170</x>
        <y>0</y>
        <width>630</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>rightSideLogo</name>
        <x>690</x>
        <y>100</y>
        <width>110</width>
        <height>700</height>
        <src>rightSideLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>0</x>
        <y>720</y>
        <width>800</width>
        <height>80</height>
        <src>footerLogo.png</src>
      </instance>
    </page>
    <page name="Step Test Summary" display="true">
      <width>720</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Graph">
        <name>FRbyFS</name>
        <x>30</x>
        <y>135</y>
        <width>686</width>
        <height>345</height>
        <value>G1FRbyFS</value>
      </instance>
      <instance type="Text">
        <name>FRSummTitleStr</name>
        <x>235</x>
        <y>100</y>
        <width>188</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Frame&amp;nbsp;Rates&amp;nbsp;by&amp;nbsp;Frame&amp;nbsp;Size&amp;nbsp;and&amp;nbsp;Load</value>
        <color>#000000</color>
      </instance>
      <instance type="Table">
        <name>FRSummary</name>
        <x>30</x>
        <y>491</y>
        <width>512</width>
        <height>98</height>
        <value>A2FRSummary</value>
        <size>10</size>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Step Test Details" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>FRDetail</name>
        <x>3</x>
        <y>136</y>
        <width>565</width>
        <height>200</height>
        <value>A2AggThruDetail</value>
        <size>10</size>
      </instance>
      <instance type="Text">
        <name>FRDetailTitleStr</name>
        <x>150</x>
        <y>100</y>
        <width>392</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Frame&amp;nbsp;Loss&amp;nbsp;and&amp;nbsp;Latencies&amp;nbsp;by&amp;nbsp;Frame&amp;nbsp;Size&amp;nbsp;and&amp;nbsp;Load</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="iMIX Distributions" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>ImixDistTitle</name>
        <x>259</x>
        <y>106</y>
        <width>234</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Frame&amp;nbsp;sizes&amp;nbsp;for&amp;nbsp;iMIX&amp;nbsp;Distributions</value>
        <color>#000000</color>
      </instance>
      <instance type="Table">
        <name>ImixDistFSTbl</name>
        <x>178</x>
        <y>156</y>
        <width>390</width>
        <height>47</height>
        <value>FrameSizeImixDistribution</value>
        <size>10</size>
      </instance>
      <instance type="Text">
        <name>ImixNoteTxt</name>
        <x>202</x>
        <y>132</y>
        <width>0</width>
        <height>13</height>
        <size>10</size>
        <value xml:space="preserve">=$ImixNote$</value>
        <color>#FF0000</color>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Theoretical Max" display="true">
      <width>800</width>
      <height>700</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>TitleStr</name>
        <x>231</x>
        <y>108</y>
        <width>244</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Theoretical&amp;nbsp;Maximum&amp;nbsp;Frame&amp;nbsp;Rates</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>VerStr</name>
        <x>35</x>
        <y>459</y>
        <width>97</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">Template&amp;nbsp;Version:&amp;nbsp;R2A</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>startIdStr</name>
        <x>35</x>
        <y>489</y>
        <width>122</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RunTime&amp;nbsp;Start&amp;nbsp;Data&amp;nbsp;Set&amp;nbsp;ID:=$@StartDataSetId$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>endIdStr</name>
        <x>35</x>
        <y>509</y>
        <width>166</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RunTime&amp;nbsp;End&amp;nbsp;Data&amp;nbsp;Set&amp;nbsp;ID:&amp;nbsp;=$@EndDataSetId$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>800</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>rightLogo</name>
        <x>670</x>
        <y>100</y>
        <width>130</width>
        <height>400</height>
        <src>contactLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>0</x>
        <y>520</y>
        <width>800</width>
        <height>100</height>
        <src>footerLogo.png</src>
      </instance>
      <instance type="Text">
        <name>Timestamp</name>
        <x>37</x>
        <y>528</y>
        <width>288</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RR&amp;nbsp;Template&amp;nbsp;Saved&amp;nbsp;Timestamp:&amp;nbsp;=$RRTemplateSavedTimestamp$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Theomax</name>
        <x>17</x>
        <y>140</y>
        <width>656</width>
        <height>256</height>
        <src>theoMaxPosAtm.jpg</src>
      </instance>
    </page>
  </layout>
  <csv/>
</template>
