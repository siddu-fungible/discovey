<?xml version="1.0" encoding="UTF-8"?>

<template name="" type="stc">
  <reported>
    <instance>
      <name>TableList</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select TableName from TableIndex;</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>iStartDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select CreatedTime from DataSet where id = (select min(Id) from DataSet); -- only on data set ID, grab the first one</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>StartID</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select =$@StartDataSetId$ from DataSet; -- DataSet only has 1 entry</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>EndID</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select =$@EndDataSetId$ from DataSet; -- DataSet only has 1 entry</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>FileNameID</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ParamValue from EotResultNodeParam where name = '@dsFileName'; -- DataSet only has 1 entry</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DataSetID</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select DataSetId from EotResultNodeParam where Id = 1;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>StartDataSetId</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ParamValue from EotResultNodeParam where Name='@StartDataSetId';</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>EndDataSetId</name>
      <persist>false</persist>
      <value type="String"></value>
      <path>select ParamValue from EotResultNodeParam where Name='@EndDataSetId';</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
  </reported>
  <computed>
    <instance>
      <name>TestResultColour</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Set the text colour based on pass/fail&#xa;# In table: <td bgcolor="=$computedVarName$">&#xa;# In graphs: =$computedVarName$ instead of #xxxxxx&#xa;if {($TestStatus == "COMPLETED")||($TestStatus == "PASSED")} {&#xa;set result "#00ff00"&#xa;} else {&#xa;set result "#ff0000"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ColourList</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[&#xa;# create a list of colours that can be used in various graphs&#xa;&#xa;set result [list]&#xa;&#xa;#red&#xa;lappend result "#ff0000"&#xa;#green&#xa;lappend result "#00ff00"&#xa;#yellow&#xa;lappend result "#ffff00"&#xa;#light purple&#xa;#lappend result "#ff00ff"&#xa;#medium purple&#xa;lappend result "#cc66ff"&#xa;#dark purple&#xa;lappend result "#aa00ff"&#xa;#pink&#xa;lappend result "#ff3399"&#xa;#turquoise&#xa;lappend result "#00bbbb"&#xa;#light gray&#xa;lappend result "#bbbb80"&#xa;#dark gray&#xa;lappend result "#bbbbbb"&#xa;#brown&#xa;lappend result "#cc9900"&#xa;#red&#xa;lappend result "#ff0000"&#xa;#green&#xa;lappend result "#00ff00"&#xa;#yellow&#xa;lappend result "#ffff00"&#xa;#light purple&#xa;lappend result "#cc66ff"&#xa;#dark purple&#xa;lappend result "#aa00ff"&#xa;#pink&#xa;lappend result "#ff3399"&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>DetailStatsEnabled</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Set the Detailed Stats Flag as enabled/disabled&#xa;&#xa;# default to disabled&#xa;set result  {}&#xa;&#xa;# get test type (see "GetTestType" script) - default to N/A if  @StartDataSetId == 1 since template was chosen from pcik list&#xa;if {$PickInputId == 1} {&#xa;  set tstType "None"&#xa;} else {&#xa;  set tstType $TestType&#xa;}&#xa;&#xa;if {$tstType == "Step Test"} {&#xa;  set testFlg $DetailedStepFlg&#xa;} elseif {$tstType == "Throughput Test"} {&#xa;  set testFlg $DetailedThruFlg&#xa;} elseif {$tstType == "Fixed Duration Test"} {&#xa;  set testFlg $DetailedFixedFlg&#xa;} elseif {$tstType == "Continuous Test"} {&#xa;  set testFlg $DetailedContFlg&#xa;} elseif {$tstType == "None"} {&#xa;  set testFlg "N/A"&#xa;} else {&#xa;    set testFlg $tstType&#xa;}&#xa;&#xa;# now translate into enabled/disabled&#xa;if {$testFlg == 1} {&#xa;  set result "Enabled"&#xa;} elseif {$testFlg == 0} {&#xa;  set result "Disabled"&#xa;} else {&#xa;  set result "N/A"&#xa;}&#xa; &#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ReportDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# generate the current date&#xa;set systemTime [clock seconds]&#xa;set result [clock format $systemTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>IterStartDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# generate the iteration start date - must convert from GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;set result {}&#xa;set  dateSplit [split $iStartDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>EpochDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# generate the current date from Tx Stream timestamp&#xa;&#xa;#Note: Tx Stream timestamp is 16 characters long&#xa;#            [clock seconds] returns a 10 character number&#xa;&#xa;set systemTime [clock seconds]&#xa;#set systemTime $EpochSec&#xa;#set systemTime $EpochSecChop&#xa;set result $systemTime&#xa;&#xa;#set result [clock format $systemTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>GetTestType</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Determine test type&#xa;&#xa;# if test was entered via "pick list" then data set ID will be 1 and test type will likely be found at data set ID =3&#xa;#  otherwise use the input data set ID&#xa;&#xa;if {$PickInputId == 1} {&#xa;  set result $TestTypeID3&#xa;} else {&#xa;  set result $TestType&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestEndDate</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# generate the report end date - must convert from GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;set result {}&#xa;set  dateSplit [split $tstEndDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>GetStartDataSetId</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# returnst the start data set ID&#xa;# - note that detailed stats does not have the @StartDataSetId and @EndDataSetId unless it is launced by the template "pick list"&#xa;&#xa;set result {}&#xa;&#xa;if  {[info exists StartID] == 1} {&#xa;  set result $StartID&#xa;} else {&#xa;  set result "N/A"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>GetEndDataSetId</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# returnst the end data set ID&#xa;# - note that detailed stats does not have the @StartDataSetId and @EndDataSetId unless it is launced by the template "pick list"&#xa;&#xa;set result {}&#xa;&#xa;if  {[info exists EndID] == 1} {&#xa;  set result $EndID&#xa;} else {&#xa;  set result "N/A"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>GetFileName</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# returnst the DB file name&#xa;# - note that detailed stats does not have the @StartDataSetId when launced by the template "pick list"&#xa;&#xa;set result {}&#xa;&#xa;if  {[info exists FileNameID] == 1} {&#xa;  set result $FileNameID&#xa;} else {&#xa;  set result "N/A"&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestampMS</name>
      <persist>true</persist>
      <value type="String"></value>
      <script><![CDATA[set result "1416991651797"]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestamp</name>
      <persist>true</persist>
      <value type="String"></value>
      <script><![CDATA[set result "Tue Nov 25 22:47:31.797 HST 2014"]]></script>
      <multivalued>false</multivalued>
      <pageName>Version</pageName>
    </instance>
    <instance>
      <name>FirstPacketReceived</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Hack to get FirstPacketReceivedTimes from db because of RR&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set result 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstPacketReceive  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set time [expr $FirstPacketReceive - $FirstEventTimestamp]&#xa;set result $time&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Summary Results</pageName>
    </instance>
    <instance>
      <name>LastPacketTransmitted</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Hack to get LastPacketTransmittedTimes from db because of RR&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set firstTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set result 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketTransmit  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set time [expr $LastPacketTransmit - $FirstEventTimestamp]&#xa;set result $time&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Summary Results</pageName>
    </instance>
    <instance>
      <name>LastPacketReceived</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Hack to get LastPacketReceivedTimes from db because of RR&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;set firstTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set result 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketReceive  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set time [expr $LastPacketReceive - $FirstEventTimestamp]&#xa;set result $time&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Summary Results</pageName>
    </instance>
    <instance>
      <name>Times</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result {}&#xa;set timeList {}&#xa;set timestampList {}&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;# Hack to get Reported Stats from db because of problem with results reporter&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set FirstPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set thirdTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $thirdTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketTransmittedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketTransmittedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set fourthTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $fourthTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set FirstPacketReceivedTime [expr $FirstPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketTransmittedTime [expr $LastPacketTransmittedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketReceivedTime [expr $LastPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;&#xa;# Get timestamp&#xa;set timestampQuery "SELECT Distinct(Timestamp) FROM Methodology_SamplingData"&#xa;set queryRes [ $db query $timestampQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;for {set i 0} {$i < $rowCnt} {incr i} {&#xa;set extractData [ [ java::field $queryRes rows] get $i ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;lappend timeStampList  [ [ $rowData get 0 ] toString ]&#xa;}&#xa;&#xa;# Calculate times&#xa;foreach time $timeStampList {&#xa; lappend timeList [expr $time - $FirstEventTimestamp]&#xa;}&#xa;&#xa;# Insert extra times used for drawing vertical event lines&#xa;set idx [lsearch $timeList $FirstPacketReceivedTime]&#xa;set timeList [linsert $timeList $idx $FirstPacketReceivedTime $FirstPacketReceivedTime]&#xa;&#xa;set idx [lsearch $timeList $LastPacketTransmittedTime]&#xa;set timeList [linsert $timeList $idx $LastPacketTransmittedTime $LastPacketTransmittedTime]&#xa;&#xa;if {$LastPacketTransmittedTime != $LastPacketReceivedTime} {&#xa;set idx [lsearch $timeList $LastPacketReceivedTime]&#xa;set timeList [linsert $timeList $idx $LastPacketReceivedTime $LastPacketReceivedTime]&#xa;}&#xa;&#xa;set result $timeList&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
    <instance>
      <name>RxRouteCounts</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result {}&#xa;set rxCounts {}&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;# Hack to get Reported Stats from db because of problem with results reporter&#xa;set rxQuery "SELECT SUM(RxAdvertisedRouteCount) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount IS NOT NULL GROUP BY Timestamp"&#xa;set queryRes [ $db query $rxQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;&#xa;if {$rowCnt == 0} {&#xa;set rxQuery "SELECT 0 FROM Methodology_SamplingData GROUP BY Timestamp"&#xa;set queryRes [ $db query $rxQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;}&#xa;&#xa;for {set i 0} {$i < $rowCnt} {incr i} {&#xa;set extractData [ [ java::field $queryRes rows] get $i ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;lappend rxCounts  [ [ $rowData get 0 ] toString ]&#xa;}&#xa;&#xa;# Hack to get Reported Stats from db because of problem with results reporter&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set FirstPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set thirdTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $thirdTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketTransmittedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketTransmittedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set fourthTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $fourthTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set FirstPacketReceivedTime [expr $FirstPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketTransmittedTime [expr $LastPacketTransmittedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketReceivedTime [expr $LastPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;&#xa;set timestampQuery "SELECT Distinct(Timestamp) FROM Methodology_SamplingData"&#xa;set queryRes [ $db query $timestampQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;for {set i 0} {$i < $rowCnt} {incr i} {&#xa;set extractData [ [ java::field $queryRes rows] get $i ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;lappend timeStampList  [ [ $rowData get 0 ] toString ]&#xa;}&#xa;&#xa;# Calculate times&#xa;foreach time $timeStampList {&#xa; lappend timeList [expr $time - $FirstEventTimestamp]&#xa;}&#xa;&#xa;# Used for drawing vertical event lines&#xa;set idx [lsearch $timeList $LastPacketReceivedTime]&#xa;set value [lindex $rxCounts $idx]&#xa;set rxCounts [linsert $rxCounts $idx $value $value]&#xa;&#xa;if { $LastPacketTransmittedTime != $LastPacketReceivedTime} {&#xa;set idx [lsearch $timeList $LastPacketTransmittedTime]&#xa;set value [lindex $rxCounts $idx]&#xa;set rxCounts [linsert $rxCounts $idx $value $value]&#xa;}&#xa;&#xa;set idx [lsearch $timeList $FirstPacketReceivedTime]&#xa;set value [lindex $rxCounts $idx]&#xa;set rxCounts [linsert $rxCounts $idx $value $value]&#xa;&#xa;set result $rxCounts]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
    <instance>
      <name>TxRouteCounts</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[set result {}&#xa;set txCounts {}&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;# Hack to get Reported Stats from db because of problem with results reporter&#xa;set txQuery "SELECT SUM(TxAdvertisedRouteCount) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount IS NOT NULL GROUP BY Timestamp"&#xa;set queryRes [ $db query $txQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;&#xa;if {$rowCnt == 0} {&#xa;set txQuery "SELECT 0 FROM Methodology_SamplingData GROUP BY Timestamp"&#xa;set queryRes [ $db query $txQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;}&#xa;&#xa;for {set i 0} {$i < $rowCnt} {incr i} {&#xa;set extractData [ [ java::field $queryRes rows] get $i ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;lappend txCounts  [ [ $rowData get 0 ] toString ]&#xa;}&#xa;&#xa;# Hack to get Reported Stats from db because of problem with results reporter&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set FirstPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set thirdTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $thirdTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketTransmittedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketTransmittedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set fourthTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $fourthTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketReceivedTimestamp $FirstEventTimestamp&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]}&#xa;&#xa;set FirstPacketReceivedTime [expr $FirstPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketTransmittedTime [expr $LastPacketTransmittedTimestamp - $FirstEventTimestamp]&#xa;set LastPacketReceivedTime [expr $LastPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;&#xa;set timestampQuery "SELECT Distinct(Timestamp) FROM Methodology_SamplingData"&#xa;set queryRes [ $db query $timestampQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;&#xa;for {set i 0} {$i < $rowCnt} {incr i} {&#xa;set extractData [ [ java::field $queryRes rows] get $i ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;lappend timeStampList  [ [ $rowData get 0 ] toString ]&#xa;}&#xa;&#xa;# Calculate times&#xa;foreach time $timeStampList {&#xa; lappend timeList [expr $time - $FirstEventTimestamp]&#xa;}&#xa;&#xa;# Used for drawing vertical event lines&#xa;set idx [lsearch $timeList $LastPacketReceivedTime]&#xa;set value [lindex $txCounts $idx]&#xa;set txCounts [linsert $txCounts $idx $value $value]&#xa;&#xa;if { $LastPacketTransmittedTime != $LastPacketReceivedTime} {&#xa;set idx [lsearch $timeList $LastPacketTransmittedTime]&#xa;set value [lindex $txCounts $idx]&#xa;set txCounts [linsert $txCounts $idx $value $value]&#xa;}&#xa;&#xa;set idx [lsearch $timeList $FirstPacketReceivedTime]&#xa;set value [lindex $txCounts $idx]&#xa;set txCounts [linsert $txCounts $idx $value $value]&#xa;&#xa;set result $txCounts]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
    <instance>
      <name>FirstPacketReceivedLine</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Used to draw FirstPacketReceived event line&#xa;&#xa;set result {}&#xa;set line {}&#xa;set max 0&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;foreach count $TxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;foreach count $RxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;# Want the event line to be higher than the max count (10%)&#xa;set max [expr $max + [expr $max * 0.1]]&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set FirstPacketReceivedTime 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstPacketReceive  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set FirstPacketReceivedTime [expr $FirstPacketReceive - $FirstEventTimestamp]&#xa;}&#xa;&#xa;set idx [lsearch $Times $FirstPacketReceivedTime]&#xa;set idx [expr $idx + 1]&#xa;&#xa;set len [llength $Times]&#xa;&#xa;for {set i 0} {$i < $len} {incr i} {&#xa; if {$idx == $i} {&#xa;  lappend line $max&#xa; } else {&#xa;  lappend line 0&#xa;  }&#xa;}&#xa;set result $line]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
    <instance>
      <name>LastPacketTransmittedLine</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Used to draw LastPacketTransmitted event line&#xa;&#xa;set result {}&#xa;set line {}&#xa;set max 0&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;foreach count $TxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;foreach count $RxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;# Want the event line to be higher than the max count (10%)&#xa;set max [expr $max + [expr $max * 0.1]]&#xa;&#xa;set firstTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE TxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;&#xa;if {$rowCnt == 0} {&#xa;set LastPacketTransmittedTime 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketTransmit  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set secondTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $secondTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set LastPacketTransmittedTime [expr $LastPacketTransmit - $FirstEventTimestamp]&#xa;}&#xa;&#xa;set idx [lsearch $Times $LastPacketTransmittedTime]&#xa;set idx [expr $idx + 1]&#xa;&#xa;set len [llength $Times]&#xa;&#xa;for {set i 0} {$i < $len} {incr i} {&#xa; if {$idx == $i} {&#xa;  lappend line $max&#xa; } else {&#xa;  lappend line 0&#xa;  }&#xa;}&#xa;set result $line]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
    <instance>
      <name>LastPacketReceivedLine</name>
      <persist>false</persist>
      <value type="String"></value>
      <script><![CDATA[# Used to draw LastPacketTransmitted event line&#xa;&#xa;set result {}&#xa;set line {}&#xa;set max 0&#xa;&#xa;package require java&#xa;set ::dbname $dataSource&#xa;set db [java::call com.spirent.tc.core.db.SqlReaderFactory create $::dbname]&#xa;&#xa;foreach count $TxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;foreach count $RxRouteCounts {&#xa; if {$count > $max} {&#xa;  set max $count&#xa;}&#xa;}&#xa;&#xa;# Want the event line to be higher than the max count (10%)&#xa;set max [expr $max + [expr $max * 0.1]]&#xa;&#xa;set firstTsQuery "SELECT MIN(Timestamp) FROM Methodology_SamplingEvent"&#xa;set queryRes [ $db query $firstTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set FirstEventTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set fourthTsQuery "SELECT MAX(Timestamp) FROM Methodology_SamplingData WHERE RxAdvertisedRouteCount > 0"&#xa;set queryRes [ $db query $fourthTsQuery ]&#xa;set rowCnt [ java::field $queryRes nrows ]&#xa;if {$rowCnt == 0} {&#xa;set LastPacketReceivedTime 0&#xa;} else {&#xa;set extractData [ [ java::field $queryRes rows] get 0 ]&#xa;set rowData [ java::cast {java.lang.Object[]} $extractData ]&#xa;set LastPacketReceivedTimestamp  [ [ $rowData get 0 ] toString ]&#xa;&#xa;set LastPacketReceivedTime [expr $LastPacketReceivedTimestamp - $FirstEventTimestamp]&#xa;}&#xa;set idx [lsearch $Times $LastPacketReceivedTime]&#xa;set idx [expr $idx + 1]&#xa;&#xa;set len [llength $Times]&#xa;&#xa;for {set i 0} {$i < $len} {incr i} {&#xa; if {$idx == $i} {&#xa;  lappend line $max&#xa; } else {&#xa;  lappend line 0&#xa;  }&#xa;}&#xa;set result $line]]></script>
      <multivalued>false</multivalued>
      <pageName>Aggregate Graph</pageName>
    </instance>
  </computed>
  <tables>
    <instance>
      <name>EventsTable</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td  bgcolor="#eeeeee">Event</td>&#xa;    <td  bgcolor="#eeeeee">Time (sec)</td>&#xa;  </tr>&#xa; <tr>&#xa;    <td >Time till first packet received</td>&#xa;    <td >=$FirstPacketReceived$</td>&#xa;  </tr>&#xa; <tr>&#xa;    <td >Time till last packet transmitted</td>&#xa;    <td >=$LastPacketTransmitted$</td>&#xa;  </tr>&#xa; <tr>&#xa;    <td > Time till last packet recieved</td>&#xa;    <td >=$LastPacketReceived$</td>&#xa;  </tr>&#xa;</table>&#xa;]]></script>
    </instance>
  </tables>
  <graphs>
    <instance type="Line">
      <name>AggregateGraph</name>
      <ThreeD>false</ThreeD>
      <iterate>false</iterate>
      <backgroundColor>#eeeeee</backgroundColor>
      <plotBackgroundColor>#ffffff</plotBackgroundColor>
      <statistic>
        <name>RxRouteCounts</name>
        <title>RxRouteCounts</title>
        <color></color>
        <valueAxis>Route Count</valueAxis>
      </statistic>
      <statistic>
        <name>TxRouteCounts</name>
        <title>TxRouteCounts</title>
        <color></color>
        <valueAxis>Route Count</valueAxis>
      </statistic>
      <statistic>
        <name>FirstPacketReceivedLine</name>
        <title>FirstPacketReceivedLine</title>
        <color></color>
        <valueAxis>Route Count</valueAxis>
      </statistic>
      <statistic>
        <name>LastPacketTransmittedLine</name>
        <title>LastPacketTransmittedLine</title>
        <color></color>
        <valueAxis>Route Count</valueAxis>
      </statistic>
      <statistic>
        <name>LastPacketReceivedLine</name>
        <title>LastPacketReceivedLine</title>
        <color></color>
        <valueAxis>Route Count</valueAxis>
      </statistic>
      <title>Aggregate Graph</title>
      <xStatistic>Times</xStatistic>
      <xTitle>Time (sec)</xTitle>
      <yTitle></yTitle>
    </instance>
  </graphs>
  <layout>
    <page name="Title" display="true">
      <width>800</width>
      <height>800</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>FileNameStr</name>
        <x>155</x>
        <y>480</y>
        <width>60</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">File&amp;nbsp;Name:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestStartStr</name>
        <x>155</x>
        <y>450</y>
        <width>47</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Created:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>SpirentLotoTextStr</name>
        <x>155</x>
        <y>347</y>
        <width>285</width>
        <height>33</height>
        <size>25</size>
        <value xml:space="preserve">SpirentTestCenter&amp;nbsp;Report</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestStartVar</name>
        <x>270</x>
        <y>450</y>
        <width>145</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">=$IterStartDate$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>upperLeftLogo</name>
        <x>0</x>
        <y>0</y>
        <width>200</width>
        <height>100</height>
        <value>/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABdALsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKACiiigApKhkmjhC72C7mCjPcmqmr6nHpWnSXT8kDCJ3dj0FNRbdkTKSim30NKiq1l532SL7QwabYC5AxzVjtSY07q4tFFFAwooooAKKKKACiiigAooooAKKKKACiiigAooooASlrNv9c0vTATfahbW+O0koB/KufuPiRoMZItftl+w7WtuzA/jwKqNOcvhQro7Gg9K89m+IGtTgjTfBupSZ6NONv6AH+dVD4h+Il2Pk8O/ZvoFz+bE/yrVYafWy+aDmN3X9ZsbzTprUtPDNHNHuHlMGX5hzVLUJZpLyz/ALaKxiOXYi4yGVPmaXA/vcAenNZGl6jrh1c3mswXO6JhDtiKsJCTgKdoCnn1zitrxNq0mqWj2eiLaTXSzi3kW5yAQfQjqM5H1roUHBqKXzvsedNqTleWui9TrbC/h1C38+ASeVn5WdSu73Ge1WzIg6uo+prygeF/HRUKLfREUAAbstj880n/AAifjznjQsE5x5K/4Vk8PTvpNHfFu2p6uJEPAdSfY08HIyK8kPhHx4SONC49IVH/ALLTv+EY8eJgiHQm56BNpH5Yo+rw/nQ7vses0V5UmjfECE5Wz04+6XkifyaphH8RIOlgT7x6gG/9DzSeHXSa+8Lnp9Feaf218Q7VSTobTkfwuEbP4oVqeDx54mgAGpeCr0erW5J/Qj+tT9Wn0afzQ7notJXGW/xJ0g4F9aalYN3FxatgfiM1uWHiXRNUwLLVbWZv7okAb8jzWUqc47oLo2KKKKkYUUUUAFFFFABVK502K7z55ldT/AJCq/kKu0UJtbAZcGg6VbNuh061Vz/F5QJ/OtBI0QYRFUewxXH+OfHUXhGCGKKAXF/cAmOMnAAHc/4Vyx8dePrOEXt54aU2ZG44hcEL+ZI/Gt40Kk483fuxXSPXKK4nxx4wvfDfh2w1GyghZ7l1DLKCQAVz2rkf+Fo+KtPhgvdS8PxixlAKyCN0DA88NyKKeFnUjzR/MTkkeg6/b3F/dWNhbExguZJZAPuKBj8+eKmvfDdncWttHCogktSpgkUcrg9D6g1SfxbDeeB7nxFpiqxjhZgko+6w6q2KreB/FN94k8M3WpXcUSTRSOqrGCAcKDVctVQutEnb5mXsoNty1udkM4GaX8a8XsPid4x1Vpv7O0SC6EON/lRO23r159jXS+DfiUPEGpHStTsxZ6hztCk7WI6jB5B9uaU8JUgm308zVSTPQ6K85+IHjvVfC2s2dlp9tbzC4h34kUk53EYGCPSqEPi34izTxRt4aWMOwUu0DgKD3PNJYabip3Vn5j5keq0V5/8AETxrqPhA6etnFby/aFcuZVJ6Y6YI9a3fCHiq28V6Ml3FhLhMLPDnlG/wPaodGagqltGF1ex0dFcR8RfF994SsrGaxigkaeRlYSgkAAZ7VB4g8S+Kra20ubRNHF6t1bCWYiNmCMQOODxQqEmlLowud4yqwwwBHoRVK50XS7v/AI+NOtpT6tEpNeSyfE/xjFqi6Y+i263rEAQGF95JGRxmus8K6/4y1TWRDrGirZWQjZmkMTKS3YDJrWWGqU1zNr7xcyZ1ttpNpZEG1WSEZzsWQ7fyzitGiiuZtvcoKKKKACiiigAooooA8m+LXhzUbq4tNc0+J5RbJtlVBlkwchsdxVzwl8WLLUjFZayotLs4UTf8s3Pv/d/Guu1PxdoekarFp2oXyW9xIm8b+FA9z2ryr4qf8IvOLa60ie2fUpJP3otiCpTB5bHGc49zzXoUF7WKp1IvyZD01R0vxpx/wjFj0x9qH/oJqnqvivQo/hVDppu4bi8ksUiECHcyvgcn0x1rP8cC6X4U+HRebvPDLu39funH6YrqfCPgHw4+iaZqMunLNcywJIxlYsNxAOcdKpezp0YufRvYNb6GD4a0+4sfgvrMlwrILlZJY1IwduAM/jitH4S/8iDqH/XaT/0AV1fjdQngbV1UAKLZsADpXKfCb/kQb/8A67Sf+gCp9o6lGU31kgtZnI/DTxVpPhiXVW1SZ08/Z5YRCxON2f5itTwpZ3Hi34lzeJ4LV7fTY5C4dhjcQu0D3J6mqXwv8P6b4gh1221C2SX5UCSEfNHndyp7djVnwTql14H8Y3HhjVJD9kml2ox6Bj91h7MMV0Vbc0/Z/Fb8PIS6XD4xSiDxdo8xBIjgViB1IEhrpNP+LunahqVrYppl4jTyrEGYrgEnFc58X2VPGWjs5ARYFLE9APMNegr4r8GqykanpoYdCpFYSUXQp3i3oxrdnEfG7H2jRcjPEmR68rWNcQ33ww8U2upWaySaTeICVJ+8pALIfcdR/wDrrW+NTrJLokiMCrLIQR0P3a9F1HQ7TxH4WTTbxcpJChVgOUbHDD3FVGsqdGClrF3TC12zz34u6jbat4a0K9s5BJBNK7Iw9Nor0/QP+Rd03/r1j/8AQRXzdr1vquhNL4dvyTFbzmWPI4JIxuX2Ix/+uvpHQP8AkXdN/wCvWP8A9BFRiqahRgk7q7CLuzyjVv8Akvdp/wBdo/8A0Cvaa8V1chfjvbEnAEsZJPQDZXp2meJbPVb2S1iSZHUkAyLgMRzx745qMVFtQa7IcTdoooriKCiiigAooooAKKKKAOd13wXoXiOQS6jZhpwMeajFXx9RWbpnwy8MaXcrcJaPPIhyv2iQuAfp0rs6K0Vaoo8qk7CsjH1/w3pviS0jttSid4o33qEcrg4x2q9YWUOnWMNnbqVhhQIgJyQBVuis3KTXLfQZz2qan4f1CSbw7e6jbme4HlNbiUBznt9an0bw3pugabLYWETpbysWYM5YkkYNcxpl1daPpV3ow0y7/trzJ2inFqXinkYsySl8YxyucnjGKzj/AG7PCsdhNr3lNHbC6knWQSRzmZd+zcOgXduAymMe9dCpu3KnZf1qTc7TQPCek+GWuG02F4zPjfukLZxnH8zUWu+DNF8R3MVzqEDtPEu1XjkKHGfaudgtNctr6J/tGryxpqVxAFkd2X7P5bFWPr82MMc84AIrOXT/ABGukF/tmvGb+xhcFS8m43QbhfXOP4e/fNNRlzc3Nr3D5HX6x4H0TXZLeTUYpZHt4hEjeaQdo55rLl+F3hKCJ5XtZlRAWY+c3AFQDUdZGoizdNRMjazGxfynEa2xjXI3Yxgtu4+uQKjtLfXY7uKdptVYzS36yJIzlEQbvKwO3OMH8AcYFOLqRVuaw9DoNR8L6F4rsdPnuY3lgjiBt2VyvyMAR+gFb37q1tgCypFGoG5mwAB71wuhyXw1CxXWpNaWUW1oLVEEvlu3lr5nm7RgsHzu39BWNfnV9TstegaHVxDJZSMsUxlcmVJenKhR8pHCcEdyQTUezlLRy0X6iudnrmgaB4qv2tr+Iy3VkqlihKlVfOBnvnaeK6C2t47S2it4QRHEgRQTnAAwK4K8l1fz7l7dtY/sw/Yt7FZPOEOJfMKcZ3Z2bsfNj3xVQQeILzev2jWkskgvWtW3SJJIo2eUHP3t2d2M4Yge5BHTclZy0QXOum8HaRceIV12SGQ3ysGDeYduQMdKuWGgWGnXT3NvGRIwIGWJCg+lcpDNq3/CS6UZzqU3mQQCWELLEsLbMu5wPLcZ4IY7geBXoFRNySScr6DQtFFFZjCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD/9k=</value>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>170</x>
        <y>0</y>
        <width>630</width>
        <height>100</height>
        <value></value>
      </instance>
      <instance type="Image">
        <name>rightSideLogo</name>
        <x>690</x>
        <y>100</y>
        <width>110</width>
        <height>700</height>
        <value>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UOMKTFLRQAlSQwSXE6QxLudzgCmAZOB1NdfomlfY4fNlXNw4/wC+R6VE58qHGN2XNNsI7C1WFeW6s/djV4CkA5p6iuNu+p0JWFUVKopqipVFSMVRUiikUVKoqWMVRUqimqKlUVIBtop+KKVxni1FLRXrHGJiilrX0XSvtconmX9wh6H+M+n0pNpK7BK+ha0HSvu3s6+8Sn+f+FdKopqrgYAGPapFFccpOTuzoirIUCpFFIoqRRUFDlFSKKaoqVRUsBVFSqKRRUiipYxVWpVFIoqVRUtjE20VJiipGeI0Ypa0NL0x7+bLZWBD857n2Fes3ZXZxpXDTNKlvpFdgVgB+Z/X2FdhFEkUYjRNqKMADtSRRJEixooVVGAB2qZRXLObkzaMbCgU9RQop6isyhVFSgUiipFFJjFUVIq0KKkVahsYqipVFIoqRVqWMcoqRRSKtSqKljExRUmKKVwPGNO0+S/n2rlY1++3oP8AGuxt4I7eFYolCxqMAU21tYrWBYolwq9T3J9TVhRXdOfMYxjYUCnqtAFPArIoUCpFWkUVIopMYqipFFCrUirUtjFUVKq0irzUqipYwUVKopFFSqtS2MVRUoFIop1SxhRRRSA41RT1FCrUgFdRkAFSKtAWpFFJjACpFWhRUqrUtjBVqVRSKKkVakYoFSqKRRUqrUsYKtSqtIq1IKlsYUUUUgCiiigDlAKkVaFWpAtdJmAFSKKAKkValsYKtSqKFWpFWpbGCrUqrzSKKlValjBVqVVoVacBipbAUDFLRRSGFFFFABRRRQBzirUgWlC1IFrdsgRVqRRShakValsYKKkVaAtSqtS2AKtSqtIq08DFS2MUDFLRRSGFFFFABRRRQAUUUUAYoWpQtAWpAtatkgq08ClC1Iq1LYwVakVaVVp+KlsAAxS0UUhhRRRQAUUUUAFFFFABRRRQBnhakC0oWpAtW2IQLUirSqtOqWwADFLRRSGFFFFABRRRQAUUUUAFFFFABRRRQBAq1KFoC06ncQUUUUhhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/2Q==</value>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>0</x>
        <y>720</y>
        <width>800</width>
        <height>80</height>
        <value>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</value>
      </instance>
      <instance type="MultiText">
        <name>FileNameVar</name>
        <x>270</x>
        <y>480</y>
        <width>310</width>
        <height>96</height>
        <size>12</size>
        <value xml:space="preserve">=$GetFileName$</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="Summary Results" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <value></value>
      </instance>
      <instance type="Table">
        <name>EventTbl</name>
        <x>226</x>
        <y>188</y>
        <width>263</width>
        <height>76</height>
        <value>EventsTable</value>
        <size>12</size>
        <alternateRowColors>false</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>Title</name>
        <x>254</x>
        <y>112</y>
        <width>222</width>
        <height>33</height>
        <size>25</size>
        <value xml:space="preserve">Summary&amp;nbsp;Results</value>
        <color>#000000</color>
      </instance>
    </page>
    <page name="Aggregate Graph" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <value></value>
      </instance>
      <instance type="Graph">
        <name>AggGraph</name>
        <x>7</x>
        <y>118</y>
        <width>701</width>
        <height>413</height>
        <value>AggregateGraph</value>
      </instance>
    </page>
    <page name="Version" display="true">
      <width>720</width>
      <height>540</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>VerStr</name>
        <x>35</x>
        <y>449</y>
        <width>90</width>
        <height>12</height>
        <size>9</size>
        <value xml:space="preserve">Template&amp;nbsp;Version:&amp;nbsp;R1</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <value></value>
      </instance>
      <instance type="Image">
        <name>rightLogo</name>
        <x>590</x>
        <y>130</y>
        <width>130</width>
        <height>300</height>
        <value></value>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>0</x>
        <y>470</y>
        <width>720</width>
        <height>70</height>
        <value>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</value>
      </instance>
      <instance type="Text">
        <name>Timestamp</name>
        <x>35</x>
        <y>432</y>
        <width>266</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">Template&amp;nbsp;Timestamp:&amp;nbsp;=$RRTemplateSavedTimestamp$</value>
        <color>#000000</color>
      </instance>
    </page>
  </layout>
  <csv/>
</template>
