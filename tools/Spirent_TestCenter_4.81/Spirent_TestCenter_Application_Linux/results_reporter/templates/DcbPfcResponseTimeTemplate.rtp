<?xml version="1.0" encoding="UTF-8"?>

<template name="" type="stc">
  <reported>
    <instance>
      <name>StartDataSetId</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>SELECT ParamValue FROM EotResultNodeParam WHERE Name='@StartDataSetId';</path>
      <multivalued>false</multivalued>
      <pageName>Version</pageName>
    </instance>
    <instance>
      <name>EndDataSetId</name>
      <persist>false</persist>
      <value type="strings"/>
      <path>SELECT ParamValue FROM EotResultNodeParam WHERE Name='@EndDataSetId';</path>
      <multivalued>false</multivalued>
      <pageName>Version</pageName>
    </instance>
    <instance>
      <name>tstStartDate</name>
      <persist>false</persist>
      <value type="strings">
        <instance>2010-12-08 22:42:39</instance>
      </value>
      <path>SELECT CreatedTime FROM DataSet WHERE Id = =$@StartDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>tstEndDate</name>
      <persist>false</persist>
      <value type="strings"/>
      <path>SELECT CreatedTime FROM DataSet WHERE Id = =$@EndDataSetId$;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Version</name>
      <persist>false</persist>
      <value type="strings">
        <instance>3.551.0473.0000</instance>
      </value>
      <path>SELECT Version FROM StcSystem WHERE Id = 1;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>CounterMode</name>
      <persist>false</persist>
      <value type="strings">
        <instance>latency_jitter</instance>
      </value>
      <path>SELECT DISTINCT lower(ResultViewMode) FROM ResultOptions;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>ResultViewMode</name>
      <persist>false</persist>
      <value type="strings">
        <instance>LATENCY_JITTER</instance>
      </value>
      <path>SELECT DISTINCT upper(ResultViewMode) FROM ResultOptions;</path>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TrialSum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^4096^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^128.0^100.0^100.0^0.0^1^ ^ ^True^3^0^1^13^0^3^37</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^8192^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^128.0^100.0^100.0^0.0^1^ ^ ^True^3^0^1^13^0^3^37</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^16384^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^128.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^32768^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^128.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^4096^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^512.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^8192^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^512.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^16384^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^512.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^32768^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^512.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^4096^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^2048.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^8192^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^2048.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^16384^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^2048.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
        <instance>1^ ^ ^ ^ ^0.0^ ^65535^32768^ ^ ^ ^ ^ ^ ^ ^</instance>
        <instance>^FCOE^2048.0^100.0^100.0^0.0^1^ ^ ^True^3^0^0^0^0^0^0</instance>
      </value>
      <path>SELECT TrialNum||'^'|| TrafficGroupName ||'^'|| FrameSize ||'^'|| IntendedLoad ||'^'|| Coalesce(OfferedLoad,'N/A') ||'^'|| Coalesce(DroppedFramePct, '') ||'^'|| BurstSize ||'^'|| CASE WHEN PfcTxQuantum = -1 THEN 'Random' ELSE PfcTxQuantum END ||'^'|| PfcTxXonDelay ||'^'|| IsConformant ||'^'|| Coalesce(VlanPriority,'N/A') ||'^'|| Coalesce(MinResponseTime,'N/A') ||'^'|| Coalesce(AvgResponseTime,'N/A') ||'^'|| Coalesce(MaxResponseTime,'N/A') ||'^'|| Coalesce(MinXonResponseTime,'N/A') ||'^'|| Coalesce(AvgXonResponseTime,'N/A') ||'^'|| Coalesce(MaxXonResponseTime,'N/A') FROM (SELECT TrialNum, DataSetId, ' ' AS TrafficGroupName, ' ' AS FrameSize, ' ' AS IntendedLoad, ' ' AS OfferedLoad, DroppedFramePct ,' ' AS BurstSize ,PfcTxQuantum ,CASE WHEN PfcTxXonEnabled = 1 THEN PfcTxXonDelay ELSE 'N/A' END AS PfcTxXonDelay , ' ' AS IsConformant, ' ' AS VlanPriority, ' ' AS MinResponseTime, ' ' AS AvgResponseTime , ' ' AS MaxResponseTime, ' ' AS MinXonResponseTime, ' ' AS AvgXonResponseTime , ' ' AS MaxXonResponseTime FROM DcbPfcResponseTimePerIterationResult UNION ALL SELECT ' ' AS TrialNum, t.DataSetId, TrafficGroupName, CASE WHEN framesizetype = 'Random' THEN 'Random' ELSE t.OfferedAvgFrameSize END AS FrameSize , t.IntendedLoad IntendedLoad, t.OfferedLoad OfferedLoad, t.DroppedFramePct DroppedFramePct,BurstSize ,' ' AS PfcTxQuantum ,' ' AS PfcTxXonDelay, CASE WHEN IsConformant==1 THEN 'True' ELSE 'False' END IsConformant, VlanPriority, CASE VlanPriority WHEN 0 THEN MinPri0ResponseTime WHEN 1 THEN MinPri1ResponseTime WHEN 2 THEN MinPri2ResponseTime WHEN 3 THEN MinPri3ResponseTime WHEN 4 THEN MinPri4ResponseTime WHEN 5 THEN MinPri5ResponseTime WHEN 6 THEN MinPri6ResponseTime WHEN 7 THEN MinPri7ResponseTime ELSE 'N/A' END AS MinResponseTime, CASE VlanPriority WHEN 0 THEN AvgPri0ResponseTime WHEN 1 THEN AvgPri1ResponseTime WHEN 2 THEN AvgPri2ResponseTime WHEN 3 THEN AvgPri3ResponseTime WHEN 4 THEN AvgPri4ResponseTime WHEN 5 THEN AvgPri5ResponseTime WHEN 6 THEN AvgPri6ResponseTime WHEN 7 THEN AvgPri7ResponseTime ELSE 'N/A' END AS AvgResponseTime, CASE VlanPriority WHEN 0 THEN MaxPri0ResponseTime WHEN 1 THEN MaxPri1ResponseTime WHEN 2 THEN MaxPri2ResponseTime WHEN 3 THEN MaxPri3ResponseTime WHEN 4 THEN MaxPri4ResponseTime WHEN 5 THEN MaxPri5ResponseTime WHEN 6 THEN MaxPri6ResponseTime WHEN 7 THEN MaxPri7ResponseTime ELSE 'N/A' END AS MaxResponseTime , CASE VlanPriority WHEN 0 THEN MinPri0XonResponseTime WHEN 1 THEN MinPri1XonResponseTime WHEN 2 THEN MinPri2XonResponseTime WHEN 3 THEN MinPri3XonResponseTime WHEN 4 THEN MinPri4XonResponseTime WHEN 5 THEN MinPri5XonResponseTime WHEN 6 THEN MinPri6XonResponseTime WHEN 7 THEN MinPri7XonResponseTime ELSE 'N/A' END AS MinXonResponseTime, CASE VlanPriority WHEN 0 THEN AvgPri0XonResponseTime WHEN 1 THEN AvgPri1XonResponseTime WHEN 2 THEN AvgPri2XonResponseTime WHEN 3 THEN AvgPri3XonResponseTime WHEN 4 THEN AvgPri4XonResponseTime WHEN 5 THEN AvgPri5XonResponseTime WHEN 6 THEN AvgPri6XonResponseTime WHEN 7 THEN AvgPri7XonResponseTime ELSE 'N/A' END AS AvgXonResponseTime, CASE VlanPriority WHEN 0 THEN MaxPri0XonResponseTime WHEN 1 THEN MaxPri1XonResponseTime WHEN 2 THEN MaxPri2XonResponseTime WHEN 3 THEN MaxPri3XonResponseTime WHEN 4 THEN MaxPri4XonResponseTime WHEN 5 THEN MaxPri5XonResponseTime WHEN 6 THEN MaxPri6XonResponseTime WHEN 7 THEN MaxPri7XonResponseTime ELSE 'N/A' END AS MaxXonResponseTime FROM DcbTrafficGroupPerIterationResult t JOIN DcbPfcResponseTimePerIterationResult r WHERE t.Datasetid = r.DataSetId ORDER BY t.DataSetId, TrafficGroupName)</path>
      <multivalued>true</multivalued>
      <pageName>Trial Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>XonDelayUnit</name>
      <persist>false</persist>
      <value type="strings">
        <instance>quanta</instance>
      </value>
      <path>select lower(XonDelayUnit) from DcbIteratePfcResponseTimeCommand</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Advanced Test Summary,Trial Summary,Test Summary,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>TestSum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>2^ ^ ^ ^ ^65535^4096^ ^ ^ ^ ^ ^ ^</instance>
        <instance>2^FCOE^128.0^1^100.0^ ^ ^3^0^1.0^13^0^3.0^37</instance>
        <instance>3^ ^ ^ ^ ^65535^8192^ ^ ^ ^ ^ ^ ^</instance>
        <instance>3^FCOE^128.0^1^100.0^ ^ ^3^0^1.0^13^0^3.0^37</instance>
        <instance>4^ ^ ^ ^ ^65535^16384^ ^ ^ ^ ^ ^ ^</instance>
        <instance>4^FCOE^128.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>5^ ^ ^ ^ ^65535^32768^ ^ ^ ^ ^ ^ ^</instance>
        <instance>5^FCOE^128.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>6^ ^ ^ ^ ^65535^4096^ ^ ^ ^ ^ ^ ^</instance>
        <instance>6^FCOE^512.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>7^ ^ ^ ^ ^65535^8192^ ^ ^ ^ ^ ^ ^</instance>
        <instance>7^FCOE^512.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>8^ ^ ^ ^ ^65535^16384^ ^ ^ ^ ^ ^ ^</instance>
        <instance>8^FCOE^512.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>9^ ^ ^ ^ ^65535^32768^ ^ ^ ^ ^ ^ ^</instance>
        <instance>9^FCOE^512.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>10^ ^ ^ ^ ^65535^4096^ ^ ^ ^ ^ ^ ^</instance>
        <instance>10^FCOE^2048.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>11^ ^ ^ ^ ^65535^8192^ ^ ^ ^ ^ ^ ^</instance>
        <instance>11^FCOE^2048.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>12^ ^ ^ ^ ^65535^16384^ ^ ^ ^ ^ ^ ^</instance>
        <instance>12^FCOE^2048.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
        <instance>13^ ^ ^ ^ ^65535^32768^ ^ ^ ^ ^ ^ ^</instance>
        <instance>13^FCOE^2048.0^1^100.0^ ^ ^3^0^0.0^0^0^0.0^0</instance>
      </value>
      <path>SELECT DataSetId ||'^'|| TrafficGroupName ||'^'|| FrameSize ||'^'|| BurstSize||'^'|| IntendedLoad ||'^'|| CASE WHEN PfcTxQuantum = -1 THEN 'Random' ELSE PfcTxQuantum END ||'^'|| PfcTxXonDelay ||'^'|| Coalesce(VlanPriority,'N/A') ||'^'|| Coalesce(MinResponseTime,'N/A') ||'^'|| Coalesce(AvgResponseTime,'N/A') ||'^'|| Coalesce(MaxResponseTime,'N/A') ||'^'|| Coalesce(MinXonResponseTime,'N/A') ||'^'|| Coalesce(AvgXonResponseTime,'N/A') ||'^'|| Coalesce(MaxXonResponseTime,'N/A') FROM (SELECT Min(DataSetId) DataSetId, ' ' AS TrafficGroupName, ' ' AS FrameSize, ' ' AS IntendedLoad, ' ' AS BurstSize ,PfcTxQuantum ,CASE WHEN PfcTxXonEnabled = 1 THEN PfcTxXonDelay ELSE 'N/A' END AS PfcTxXonDelay , ' ' AS VlanPriority, ' ' AS MinResponseTime, ' ' AS AvgResponseTime , ' ' AS MaxResponseTime, ' ' AS MinXonResponseTime, ' ' AS AvgXonResponseTime , ' ' AS MaxXonResponseTime FROM DcbPfcResponseTimePerIterationResult GROUP BY LoopKey UNION ALL SELECT Min(t.DataSetId) DataSetId, TrafficGroupName, CASE WHEN framesizetype = 'Random' THEN 'Random' ELSE t.OfferedAvgFrameSize END AS FrameSize , t.IntendedLoad IntendedLoad, BurstSize ,' ' AS PfcTxQuantum ,' ' AS PfcTxXonDelay , VlanPriority, CASE VlanPriority WHEN 0 THEN Min(MinPri0ResponseTime) WHEN 1 THEN Min(MinPri1ResponseTime) WHEN 2 THEN Min(MinPri2ResponseTime) WHEN 3 THEN Min(MinPri3ResponseTime) WHEN 4 THEN Min(MinPri4ResponseTime) WHEN 5 THEN Min(MinPri5ResponseTime) WHEN 6 THEN Min(MinPri6ResponseTime ) WHEN 7 THEN Min(MinPri7ResponseTime ) ELSE 'N/A' END AS MinResponseTime, CASE VlanPriority WHEN 0 THEN Avg(AvgPri0ResponseTime ) WHEN 1 THEN Avg(AvgPri1ResponseTime ) WHEN 2 THEN Avg(AvgPri2ResponseTime ) WHEN 3 THEN Avg(AvgPri3ResponseTime ) WHEN 4 THEN Avg(AvgPri4ResponseTime ) WHEN 5 THEN Avg(AvgPri5ResponseTime ) WHEN 6 THEN Avg(AvgPri6ResponseTime ) WHEN 7 THEN Avg(AvgPri7ResponseTime ) ELSE 'N/A' END AS AvgResponseTime, CASE VlanPriority WHEN 0 THEN Max(MaxPri0ResponseTime ) WHEN 1 THEN Max(MaxPri1ResponseTime) WHEN 2 THEN Max(MaxPri2ResponseTime) WHEN 3 THEN Max(MaxPri3ResponseTime) WHEN 4 THEN Max(MaxPri4ResponseTime) WHEN 5 THEN Max(MaxPri5ResponseTime) WHEN 6 THEN Max(MaxPri6ResponseTime) WHEN 7 THEN Max(MaxPri7ResponseTime) ELSE 'N/A' END AS MaxResponseTime , CASE VlanPriority WHEN 0 THEN Min(MinPri0XonResponseTime) WHEN 1 THEN Min(MinPri1XonResponseTime) WHEN 2 THEN Min(MinPri2XonResponseTime) WHEN 3 THEN Min(MinPri3XonResponseTime) WHEN 4 THEN Min(MinPri4XonResponseTime) WHEN 5 THEN Min(MinPri5XonResponseTime) WHEN 6 THEN Min(MinPri6XonResponseTime) WHEN 7 THEN Min(MinPri7XonResponseTime) ELSE 'N/A' END AS MinXonResponseTime, CASE VlanPriority WHEN 0 THEN Avg(AvgPri0XonResponseTime) WHEN 1 THEN Avg(AvgPri1XonResponseTime) WHEN 2 THEN Avg(AvgPri2XonResponseTime) WHEN 3 THEN Avg(AvgPri3XonResponseTime) WHEN 4 THEN Avg(AvgPri4XonResponseTime) WHEN 5 THEN Avg(AvgPri5XonResponseTime) WHEN 6 THEN Avg(AvgPri6XonResponseTime) WHEN 7 THEN Avg(AvgPri7XonResponseTime) ELSE 'N/A' END AS AvgXonResponseTime, CASE VlanPriority WHEN 0 THEN Max(MaxPri0XonResponseTime) WHEN 1 THEN Max(MaxPri1XonResponseTime) WHEN 2 THEN Max(MaxPri2XonResponseTime) WHEN 3 THEN Max(MaxPri3XonResponseTime) WHEN 4 THEN Max(MaxPri4XonResponseTime) WHEN 5 THEN Max(MaxPri5XonResponseTime) WHEN 6 THEN Max(MaxPri6XonResponseTime) WHEN 7 THEN Max(MaxPri7XonResponseTime) ELSE 'N/A' END AS MaxXonResponseTime FROM DcbTrafficGroupPerIterationResult t JOIN DcbPfcResponseTimePerIterationResult r WHERE t.Datasetid = r.DataSetId GROUP BY t.LoopKey,TrafficGroupName ORDER BY DataSetId, TrafficGroupName )</path>
      <multivalued>true</multivalued>
      <pageName>Advanced Test Summary,Trial Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount</name>
      <persist>false</persist>
      <value type="strings">
        <instance>[TxPri0FrameCount, TxPri1FrameCount, TxPri2FrameCount, TxPri3FrameCount, TxPri4FrameCount, TxPri5FrameCount, TxPri6FrameCount, TxPri7FrameCount]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 1, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 1, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
        <instance>[0, 0, 0, 0, 0, 0, 0, 0]</instance>
      </value>
      <path>SELECT TxPri0FrameCount, TxPri1FrameCount, TxPri2FrameCount, TxPri3FrameCount, TxPri4FrameCount, TxPri5FrameCount, TxPri6FrameCount, TxPri7FrameCount FROM DcbPfcResponseTimePerIterationPerPortResult ORDER BY DataSetId,Port</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance>[Pri0ResponseTime, Pri1ResponseTime, Pri2ResponseTime, Pri3ResponseTime, Pri4ResponseTime, Pri5ResponseTime, Pri6ResponseTime, Pri7ResponseTime]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 13, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 13, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
      </value>
      <path>SELECT CASE TxPri0FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri0ResponseTime,'N/A') END Pri0ResponseTime , CASE TxPri1FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri1ResponseTime,'N/A') END Pri1ResponseTime, CASE TxPri2FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri2ResponseTime,'N/A') END Pri2ResponseTime, CASE TxPri3FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri3ResponseTime,'N/A') END Pri3ResponseTime, CASE TxPri4FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri4ResponseTime,'N/A') END Pri4ResponseTime, CASE TxPri5FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri5ResponseTime,'N/A') END Pri5ResponseTime, CASE TxPri6FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri6ResponseTime,'N/A') END Pri6ResponseTime, CASE TxPri7FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri7ResponseTime,'N/A') END Pri7ResponseTime FROM DcbPfcResponseTimePerIterationPerPortResult ORDER BY DataSetId,Port</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance>[Pri0RequestPauseTime, Pri1RequestPauseTime, Pri2RequestPauseTime, Pri3RequestPauseTime, Pri4RequestPauseTime, Pri5RequestPauseTime, Pri6RequestPauseTime, Pri7RequestPauseTime]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 2945, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 21391, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
      </value>
      <path>SELECT CASE TxPri0FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri0RequestPauseTime,'N/A') END Pri0RequestPauseTime , CASE TxPri1FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri1RequestPauseTime,'N/A') END Pri1RequestPauseTime, CASE TxPri2FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri2RequestPauseTime,'N/A') END Pri2RequestPauseTime, CASE TxPri3FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri3RequestPauseTime,'N/A') END Pri3RequestPauseTime, CASE TxPri4FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri4RequestPauseTime,'N/A') END Pri4RequestPauseTime, CASE TxPri5FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri5RequestPauseTime,'N/A') END Pri5RequestPauseTime, CASE TxPri6FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri6RequestPauseTime,'N/A') END Pri6RequestPauseTime, CASE TxPri7FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri7RequestPauseTime,'N/A') END Pri7RequestPauseTime FROM DcbPfcResponseTimePerIterationPerPortResult ORDER BY DataSetId,Port</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance>[Pri0ActualPauseTime, Pri1ActualPauseTime, Pri2ActualPauseTime, Pri3ActualPauseTime, Pri4ActualPauseTime, Pri5ActualPauseTime, Pri6ActualPauseTime, Pri7ActualPauseTime]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 2969, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 21416, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
      </value>
      <path>SELECT CASE TxPri0FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri0ActualPauseTime,'N/A') END Pri0ActualPauseTime , CASE TxPri1FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri1ActualPauseTime,'N/A') END Pri1ActualPauseTime, CASE TxPri2FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri2ActualPauseTime,'N/A') END Pri2ActualPauseTime, CASE TxPri3FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri3ActualPauseTime,'N/A') END Pri3ActualPauseTime, CASE TxPri4FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri4ActualPauseTime,'N/A') END Pri4ActualPauseTime, CASE TxPri5FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri5ActualPauseTime,'N/A') END Pri5ActualPauseTime, CASE TxPri6FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri6ActualPauseTime,'N/A') END Pri6ActualPauseTime, CASE TxPri7FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri7ActualPauseTime,'N/A') END Pri7ActualPauseTime FROM DcbPfcResponseTimePerIterationPerPortResult ORDER BY DataSetId,Port</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance>[Pri0XonResponseTime, Pri1XonResponseTime, Pri2XonResponseTime, Pri3XonResponseTime, Pri4XonResponseTime, Pri5XonResponseTime, Pri6XonResponseTime, Pri7XonResponseTime]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 37, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, 37, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
        <instance>[N/A, N/A, N/A, N/A, N/A, N/A, N/A, N/A]</instance>
      </value>
      <path>SELECT CASE TxPri0FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri0XonResponseTime,'N/A') END Pri0XonResponseTime , CASE TxPri1FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri1XonResponseTime,'N/A') END Pri1XonResponseTime, CASE TxPri2FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri2XonResponseTime,'N/A') END Pri2XonResponseTime, CASE TxPri3FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri3XonResponseTime,'N/A') END Pri3XonResponseTime, CASE TxPri4FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri4XonResponseTime,'N/A') END Pri4XonResponseTime, CASE TxPri5FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri5XonResponseTime,'N/A') END Pri5XonResponseTime, CASE TxPri6FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri6XonResponseTime,'N/A') END Pri6XonResponseTime, CASE TxPri7FrameCount WHEN 0 THEN 'N/A' ELSE Coalesce(Pri7XonResponseTime,'N/A') END Pri7XonResponseTime FROM DcbPfcResponseTimePerIterationPerPortResult ORDER BY DataSetId,Port</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>NumTrafficGroups</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>SELECT COUNT(*) FROM (SELECT DISTINCT TrafficGroupName FROM DcbTrafficGroupPerIterationResult)</path>
      <multivalued>true</multivalued>
      <pageName>Trial Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>NumTrials</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
      </value>
      <path>SELECT MAX(TrialNum) FROM DcbPfcResponseTimePerIterationResult</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>NumIterations</name>
      <persist>false</persist>
      <value type="strings">
        <instance>12</instance>
      </value>
      <path>SELECT COUNT(*) FROM DcbPfcResponseTimePerIterationResult</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_DataSetIds</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
        <instance>2</instance>
        <instance>3</instance>
        <instance>4</instance>
        <instance>5</instance>
        <instance>6</instance>
        <instance>7</instance>
        <instance>8</instance>
        <instance>9</instance>
        <instance>10</instance>
        <instance>11</instance>
        <instance>12</instance>
      </value>
      <path>SELECT DataSetId - 1 FROM DcbPfcResponseTimePerIterationResult</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>Priority_PortName</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/1</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
      </value>
      <path>SELECT Port FROM DcbPfcResponseTimePerIterationPerPortResult</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_Ports</name>
      <persist>false</persist>
      <value type="strings">
        <instance>Port //1/1</instance>
        <instance>Port //1/2</instance>
        <instance>Port //1/3</instance>
        <instance>Port //1/4</instance>
        <instance>Port //1/5</instance>
        <instance>Port //1/6</instance>
        <instance>Port //1/7</instance>
        <instance>Port //1/8</instance>
        <instance>Port //2/1</instance>
        <instance>Port //2/2</instance>
        <instance>Port //2/3</instance>
        <instance>Port //2/4</instance>
      </value>
      <path>SELECT DISTINCT Port FROM DcbPfcResponseTimePerIterationPerPortResult</path>
      <multivalued>true</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>PfcTxQuantum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
      </value>
      <path>SELECT PfcTxQuantum FROM DcbPfcResponseTimePerIterationResult</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>PfcTxXonDelay</name>
      <persist>false</persist>
      <value type="strings">
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>32768</instance>
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>32768</instance>
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>32768</instance>
      </value>
      <path>SELECT CASE WHEN PfcTxXonEnabled = 1 THEN PfcTxXonDelay ELSE 'N/A' END AS PfcTxXonDelay FROM DcbPfcResponseTimePerIterationResult</path>
      <multivalued>true</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_TrialNum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
      </value>
      <path>SELECT TrialNum FROM DcbPfcResponseTimePerIterationResult D, DcbPfcResponseTimePerIterationPerPortResult P WHERE D.DataSetId = P.DataSetId ORDER BY P.DataSetId,Port</path>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
  </reported>
  <computed>
    <instance>
      <name>ReportDate</name>
      <persist>false</persist>
      <value type="String">2010-12-10 11:28:46 PST</value>
      <script><![CDATA[# generate the current date&#xa;set systemTime [clock seconds]&#xa;set result [clock format $systemTime -format "%Y-%m-%d %H:%M:%S  %Z"]]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestStartDate</name>
      <persist>false</persist>
      <value type="String">2010-12-08 14:42:39 PST</value>
      <script><![CDATA[# generate the report start time - must convert FROM GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;#clear the return "result"  list in case it was used before&#xa;set  result {}&#xa;&#xa;set  dateSplit [split $tstStartDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>TestEndDate</name>
      <persist>false</persist>
      <value type="String">-</value>
      <script><![CDATA[# generate the report end time - must convert FROM GMT to local time&#xa;#  - test time is stored as 2007-01-15 19:50:39 gmt&#xa;#  - must convert to "mm/dd/yyyy hh:mm:ss GMT" format&#xa;#  - then must convert to local time&#xa;&#xa;#clear the return "result"  list in case it was used before&#xa;set  result {}&#xa;&#xa;set  dateSplit [split $tstEndDate -]&#xa;&#xa;set yy [lindex $dateSplit 0]&#xa;set mm [lindex $dateSplit 1]&#xa;set rest [lindex $dateSplit 2]&#xa;&#xa;set timeSplit [split $rest]&#xa;set dd [lindex $timeSplit 0]&#xa;set time [lindex $timeSplit 1]&#xa;&#xa;#set result "$mm/$dd/$yy $time"&#xa;set formattedDate "$mm/$dd/$yy $time GMT"&#xa;&#xa;#set result $formattedDate&#xa;&#xa;set testTime [clock scan $formattedDate]&#xa;set result [clock format $testTime -format "%Y-%m-%d %H:%M:%S  %Z"]&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>CounterModeType</name>
      <persist>false</persist>
      <value type="String">Latency_jitter</value>
      <script><![CDATA[# Determine counter mode&#xa;&#xa;set str [string range $CounterMode 0 0]&#xa;set str [string toupper $str]&#xa;set str2 [string range $CounterMode 1 end]&#xa;set result $str$str2]]></script>
      <multivalued>false</multivalued>
      <pageName>Title</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestampMS</name>
      <persist>true</persist>
      <value type="String">1292009314187</value>
      <script><![CDATA[set result "1292015984578"]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRTemplateSavedTimestamp</name>
      <persist>true</persist>
      <value type="String">Fri Dec 10 11:28:34.187 PST 2010</value>
      <script><![CDATA[set result "Fri Dec 10 13:19:44.578 PST 2010"]]></script>
      <multivalued>false</multivalued>
      <pageName>Version</pageName>
    </instance>
    <instance>
      <name>TrialSum.FS</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary results frame size values&#xa;set result [list]&#xa;&#xa;catch { array unset TrialSumData }&#xa;set cols [list TrialNum TrafficGroupName Fs Intended Offered DroppedFramePct  BS PfcTxQuantum PfcTxXonDelay IsConformant VlanPriority MinResponseTime AvgResponseTime MaxResponseTime MinXonResponseTime AvgXonResponseTime MaxXonResponseTime  ]&#xa;&#xa;foreach col $cols {&#xa;   set TrialSumData($col) [list]&#xa;}&#xa;&#xa;foreach row $TrialSum {&#xa;   set rowList [split $row "^"]&#xa;   foreach col $cols value $rowList {&#xa;      lappend TrialSumData($col) $value&#xa;   }&#xa;}&#xa;&#xa;set result $TrialSumData(Fs)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.TrafficGroup</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
      </value>
      <script><![CDATA[# Calculate trial summary traffic group&#xa;set result $TrialSumData(TrafficGroupName)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.PfcTxQuantum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
      </value>
      <script><![CDATA[# Calculate trial summary Pfc Tx Quantum&#xa;set result $TrialSumData(PfcTxQuantum)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.PfcTxXonDelay</name>
      <persist>false</persist>
      <value type="strings">
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
      </value>
      <script><![CDATA[# Calculate trial summary Pfc Tx Xon Delay&#xa;set result $TrialSumData(PfcTxXonDelay)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.Intended</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary Intended&#xa;set result $TrialSumData(Intended)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.Offered</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary Offered&#xa;set result $TrialSumData(Offered)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.TrialNum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
      </value>
      <script><![CDATA[# Calculate trial summary Qput&#xa;set result $TrialSumData(TrialNum)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.DroppedFramePct</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
        <instance>0.0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary DroppedFramePct&#xa;set result $TrialSumData(DroppedFramePct)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>NotsupportedStr</name>
      <persist>false</persist>
      <value type="String">Note: This result view mode does not support Interarrival Time measurements</value>
      <script><![CDATA[if {$ResultViewMode == "JITTER" || $ResultViewMode == "LATENCY_JITTER"} {&#xa;set result "Note: This result view mode does not support Interarrival Time measurements"&#xa;} elseif  {$ResultViewMode == "BASIC" || $ResultViewMode == "HISTOGRAM"} {&#xa;set result "Note: This result view mode does not support Jitter and Interarrival Time measurements"&#xa;} elseif  {$ResultViewMode == "INTERARRIVALTIME" } {&#xa;set result "Note: This result view mode does not support Jitter measurements"&#xa;} elseif  {$ResultViewMode == "FORWARDING" } {&#xa;set result "Note: This result view mode does not support Latency and Jitter measurements"&#xa;} else {&#xa;set result " "&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.BS</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
      </value>
      <script><![CDATA[# Calculate trial summary traffic group&#xa;set result $TrialSumData(BS)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>RRReportGenerationTime</name>
      <persist>true</persist>
      <value type="String">Thu Aug 06 11:46:25.425 PDT 2009</value>
      <script><![CDATA[set RRReportGenerationTime "Thu Aug 06 11:46:25.425 PDT 2009" &#xa;set result $RRReportGenerationTime &#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRUserNotes</name>
      <persist>true</persist>
      <value type="String">No User Notes Exist</value>
      <script><![CDATA[set strFrontPageText "" &#xa;set strFrontPageFormattedText "No User Notes Exist" &#xa;set strFormattedKey "" &#xa;set strFormattedValue "" &#xa;set isFirst 1 &#xa;if {[info exists RRUserNotesTable]} {&#xa;set strFrontPageFormattedText "" &#xa;foreach {KeyAndValue} $RRUserNotesTable { &#xa;      if {!$isFirst} { &#xa;      set KeyAndValue [string trim $KeyAndValue {[],}] &#xa;      regsub  {,} $KeyAndValue ":" KeyAndValueFinal &#xa;      set strFrontPageFormattedText "$strFrontPageFormattedText$KeyAndValueFinal\n&#xa;" &#xa;    } &#xa;    set isFirst 0 &#xa;} &#xa;set RRUserNotes $strFrontPageFormattedText &#xa;}&#xa;set result $strFrontPageFormattedText &#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>RRFrontPageText</name>
      <persist>true</persist>
      <value type="String">-</value>
      <script><![CDATA[set result "Test Duration: $RRTestDurationTime msec\nReport Generation Time: $RRReportGenerationTime\nTest State: $RRTestState\n$RRUserNotes"]]></script>
      <multivalued>false</multivalued>
      <pageName>ALL</pageName>
    </instance>
    <instance>
      <name>TestSum.FS</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>128.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>512.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
        <instance></instance>
        <instance>2048.0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary results frame size values&#xa;set result [list]&#xa;&#xa;catch { array unset TestSumData }&#xa;set cols [list Datasetid TrafficGroupName Fs Bs Intended PfcTxQuantum PfcTxXonDelay VlanPriority MinResponseTime AvgResponseTime MaxResponseTime MinXonResponseTime AvgXonResponseTime MaxXonResponseTime ]&#xa;&#xa;foreach col $cols {&#xa;   set TestSumData($col) [list]&#xa;}&#xa;&#xa;foreach row $TestSum {&#xa;   set rowList [split $row "^"]&#xa;   foreach col $cols value $rowList {&#xa;      lappend TestSumData($col) $value&#xa;   }&#xa;}&#xa;&#xa;set result $TestSumData(Fs)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.TG</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
        <instance></instance>
        <instance>FCOE</instance>
      </value>
      <script><![CDATA[# Calculate test summary traffic group&#xa;set result $TestSumData(TrafficGroupName)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.IL</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
        <instance></instance>
        <instance>100.0</instance>
      </value>
      <script><![CDATA[# Calculate test summary traffic group&#xa;set result $TestSumData(Intended)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.BS</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
      </value>
      <script><![CDATA[# Calculate test summary traffic group&#xa;set result $TestSumData(Bs)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.PfcTxQuantum</name>
      <persist>false</persist>
      <value type="strings">
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
        <instance>65535</instance>
        <instance></instance>
      </value>
      <script><![CDATA[# Calculate test summary Pfc Tx Quantum&#xa;set result $TestSumData(PfcTxQuantum)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.PfcTxXonDelay</name>
      <persist>false</persist>
      <value type="strings">
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
        <instance>4096</instance>
        <instance></instance>
        <instance>8192</instance>
        <instance></instance>
        <instance>16384</instance>
        <instance></instance>
        <instance>32768</instance>
        <instance></instance>
      </value>
      <script><![CDATA[# Calculate test summary Pfc Tx Xon Delay&#xa;set result $TestSumData(PfcTxXonDelay)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.TrafficConfig</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
        <instance></instance>
        <instance>2</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>4</instance>
        <instance></instance>
        <instance>5</instance>
        <instance></instance>
        <instance>6</instance>
        <instance></instance>
        <instance>7</instance>
        <instance></instance>
        <instance>8</instance>
        <instance></instance>
        <instance>9</instance>
        <instance></instance>
        <instance>10</instance>
        <instance></instance>
        <instance>11</instance>
        <instance></instance>
        <instance>12</instance>
        <instance></instance>
      </value>
      <script><![CDATA[set result [list]&#xa;set temp $TestSumData(TrafficGroupName)&#xa;set count 0&#xa;foreach tg $temp {&#xa;if { $tg==" " } {&#xa;incr count&#xa;lappend result $count&#xa;} else {&#xa;lappend result " "&#xa;}&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Advanced Test Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>Priority_TrafficConfig</name>
      <persist>false</persist>
      <value type="strings">
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>1</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>2</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>3</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>4</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>5</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>6</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>7</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>8</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>9</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>10</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>11</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
        <instance>12</instance>
      </value>
      <script><![CDATA[&#xa;set result [list]&#xa;&#xa;set numConfigs [format %g [expr ceil($NumIterations / $NumTrials)]]&#xa;&#xa;foreach item $Priority_DataSetIds {&#xa;   foreach port $Priority_Ports {&#xa;      set item [format %g $item]&#xa;      lappend result [expr ($item % $numConfigs)  + 1]&#xa;   }&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>TrialSum.IsConformant</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
        <instance></instance>
        <instance>True</instance>
      </value>
      <script><![CDATA[set result $TrialSumData(IsConformant)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.MinResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate test summary min response time &#xa;set result $TestSumData(MinResponseTime)]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.MaxResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>13</instance>
        <instance></instance>
        <instance>13</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate test summary max response time &#xa;set result $TestSumData(MaxResponseTime)]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.AvgResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>1.0</instance>
        <instance></instance>
        <instance>1.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
      </value>
      <script><![CDATA[# Calculate test summary avg response time &#xa;set result $TestSumData(AvgResponseTime)]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.0</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 0&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 0</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.1</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 1&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.2</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 2&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 2</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.3</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>1</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>1</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 3&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.4</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 4&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 4</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.5</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 5&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 5</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.6</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 6&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 6</pageName>
    </instance>
    <instance>
      <name>Priority_TxPriFrameCount.7</name>
      <persist>false</persist>
      <value type="strings">
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;set column 7&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_TxPriFrameCount 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   foreach row [lrange $Priority_TxPriFrameCount 1 end] {&#xa;      # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;      lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 7</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.0</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 0&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 0</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.1</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 1&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.2</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 2&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 2</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.3</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>13</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>13</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 3&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.4</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 4&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 4</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.5</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 5&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 5</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.6</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 6&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 6</pageName>
    </instance>
    <instance>
      <name>Priority_ResponseTime.7</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 7&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ResponseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 7</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.0</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 0&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 0</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.1</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 1&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.2</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 2&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 2</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.3</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>2945</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>21391</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 3&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.4</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 4&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 4</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.5</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 5&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 5</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.6</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 6&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 6</pageName>
    </instance>
    <instance>
      <name>Priority_RequestedPauseTime.7</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 7&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_RequestedPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_RequestedPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_RequestedPauseTime $column] ",\]"] "\["]&#xa;}]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 7</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.0</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 0&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 0</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.1</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 1&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.2</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 2&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 2</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.3</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>2969</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>21416</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 3&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.4</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 4&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 4</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.5</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 5&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 5</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.6</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 6&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 6</pageName>
    </instance>
    <instance>
      <name>Priority_ActualPauseTime.7</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 7&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_ActualPauseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_ActualPauseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_ActualPauseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 7</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.0</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 0&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 0</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.1</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 1&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.2</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 2&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 2</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.3</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>37</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>37</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 3&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.4</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 4&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 4</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.5</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 5&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 5</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.6</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 6&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 6</pageName>
    </instance>
    <instance>
      <name>Priority_XonResponseTime.7</name>
      <persist>false</persist>
      <value type="strings">
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
        <instance>N/A</instance>
      </value>
      <script><![CDATA[proc haveResults {column index} {&#xa;&#xa;   set testRow [lindex $::Priority_TxPriFrameCount 1]&#xa;&#xa;   if {[string match "*,*" $testRow]} {&#xa;      foreach row [lrange $::Priority_TxPriFrameCount 1 end] {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction &#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      }&#xa;   } else {&#xa;         lappend result [string trimleft [string trimright [lindex $::Priority_TxPriFrameCount $column] ",\]"] "\["]&#xa;   }&#xa;&#xa;   return [lindex $result $index]&#xa;}&#xa;&#xa;set result [list]&#xa;&#xa;set column 7&#xa;&#xa;# RR is inconsistent in how it returns sql data, so we have to check what sort of data we have.  Lame.&#xa;&#xa;set testRow [lindex $Priority_XonResponseTime 1]&#xa;&#xa;if {[string match "*,*" $testRow]} {&#xa;   set index 0&#xa;   foreach row [lrange $Priority_XonResponseTime 1 end] {&#xa;      if {[haveResults $column $index]} {&#xa;         # The trimleft/right is to remove control characters from the java/tcl list interaction&#xa;         lappend result [string trimleft [string trimright [lindex $row $column] ",\]"] "\["]&#xa;      } else {&#xa;         lappend result "N/A"&#xa;      }&#xa;      incr index&#xa;   }&#xa;} else {&#xa;      lappend result [string trimleft [string trimright [lindex $Priority_XonResponseTime $column] ",\]"] "\["]&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 7</pageName>
    </instance>
    <instance>
      <name>TrialSum.VlanPriority</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
      </value>
      <script><![CDATA[# Calculate trial summary vlan priority&#xa;set result $TrialSumData(VlanPriority)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary,Test Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.AvgResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>1</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary avg response time &#xa;set result $TrialSumData(AvgResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.AvgXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>3</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary avg xon response time &#xa;set result $TrialSumData(AvgXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.MinXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate test summary min xon response time &#xa;set result $TestSumData(MinXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.MaxXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>37</instance>
        <instance></instance>
        <instance>37</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate test summary max response time &#xa;set result $TestSumData(MaxXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>TestSum.AvgXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>3.0</instance>
        <instance></instance>
        <instance>3.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
        <instance></instance>
        <instance>0.0</instance>
      </value>
      <script><![CDATA[# Calculate test summary avg xon response time &#xa;set result $TestSumData(AvgXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Test Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.MinResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary min response time &#xa;set result $TrialSumData(MinResponseTime)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.MaxResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>13</instance>
        <instance></instance>
        <instance>13</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary max response time &#xa;set result $TrialSumData(MaxResponseTime)]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.MinXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary min Xon response time &#xa;set result $TrialSumData(MinXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>TrialSum.MaxXonResponseTime</name>
      <persist>false</persist>
      <value type="strings">
        <instance></instance>
        <instance>37</instance>
        <instance></instance>
        <instance>37</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
        <instance></instance>
        <instance>0</instance>
      </value>
      <script><![CDATA[# Calculate trial summary max xon esponse time &#xa;set result $TrialSumData(MaxXonResponseTime)&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Trial Summary</pageName>
    </instance>
    <instance>
      <name>Priority.PfcTxQuanta</name>
      <persist>false</persist>
      <value type="strings">
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
        <instance>65535</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;foreach quanta $PfcTxQuantum {&#xa;    foreach port $Priority_Ports {&#xa;        lappend result $quanta&#xa;    }&#xa;}&#xa;&#xa;&#xa;&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
    <instance>
      <name>Priority.PfcXonDelay</name>
      <persist>false</persist>
      <value type="strings">
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>4096</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>8192</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>16384</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
        <instance>32768</instance>
      </value>
      <script><![CDATA[set result [list]&#xa;&#xa;foreach quanta $PfcTxXonDelay {&#xa;    foreach port $Priority_Ports {&#xa;        lappend result $quanta&#xa;    }&#xa;}&#xa;]]></script>
      <multivalued>false</multivalued>
      <pageName>Per Port Results - Priority 3,Per Port Results - Priority 4,Per Port Results - Priority 5,Per Port Results - Priority 6,Per Port Results - Priority 7,Per Port Results - Priority 0,Per Port Results - Priority 2,Per Port Results - Priority 1</pageName>
    </instance>
  </computed>
  <tables>
    <instance>
      <name>TrialSummaryTbl</name>
      <script><![CDATA[<table>&#xa;   <tr>&#xa;<td bgcolor="#eeeeee">Trial\n#</td>&#xa;  <td bgcolor="#eeeeee">Traffic\nGroup</td>&#xa;    <td bgcolor="#eeeeee">Frame\nSize</td>&#xa;    <td bgcolor="#eeeeee">Burst\nSize</td>&#xa;    <td bgcolor="#eeeeee">Intended\nLoad (%)</td>&#xa;    <td  bgcolor="#eeeeee">VLAN\nPriority</td>&#xa;    <td bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td bgcolor="#eeeeee">Offered\nLoad (%) </td>&#xa;    <td bgcolor="#eeeeee">Min\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Avg\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Max\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Min XON\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Avg XON\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Max XON\nResponse\nTime\n(quanta)</td>&#xa;    <td bgcolor="#eeeeee">Conformant</td>&#xa;    <td bgcolor="#eeeeee">Frame\nLoss\n(%)</td>&#xa;   </tr>&#xa; <tr iterate="=$TrialSum.TrafficGroup$">&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.TrialNum$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.TrafficGroup$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.FS$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.BS$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.Intended$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.VlanPriority$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.PfcTxQuantum$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.PfcTxXonDelay$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.Offered$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.MinResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.AvgResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.MaxResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.MinXonResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.AvgXonResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.MaxXonResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.IsConformant$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TrialSum.DroppedFramePct$</td>&#xa; </tr>&#xa;</table>]]></script>
    </instance>
    <instance>
      <name>TestSummaryTbl</name>
      <script><![CDATA[<table>&#xa; <tr>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Traffic\nConfig #</td>&#xa;   <td colspan="5" rowspan="1" bgcolor="#eeeeee" halign="center">Traffic Configuration</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Min\nResponse\nTime\n(quanta)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Avg\nResponse\nTime\n(quanta)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Max\nResponse\nTime\n(quanta)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Min XON\nResponse\nTime\n(quanta)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Avg XON\nResponse\nTime\n(quanta)</td>&#xa;   <td colspan="1" rowspan="2" bgcolor="#eeeeee">Max XON\nResponse\nTime\n(quanta)</td>&#xa; </tr>&#xa; <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic Group</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Frame Size</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Burst Size</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Intended\nLoad (%)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">VLAN\nPriority</td>&#xa; </tr>&#xa; <tr iterate="=$TestSum.FS$">&#xa;  <td colspan="1" rowspan="1" bgcolor="#eeeeee">=$TestSum.TrafficConfig$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.TG$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.FS$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.BS$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.IL$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TrialSum.VlanPriority$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.PfcTxQuantum$</td>&#xa;  <td halign="right" bgcolor="#eeeeee">=$TestSum.PfcTxXonDelay$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.MinResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.AvgResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.MaxResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.MinXonResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.AvgXonResponseTime$</td>&#xa;  <td halign="right" bgcolor="#ffffff">=$TestSum.MaxXonResponseTime$</td>&#xa; </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult3Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.3$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.3$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.3$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.3$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.3$</td>&#xa;   </tr>&#xa;</table>]]></script>
    </instance>
    <instance>
      <name>PriorityResult0Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.0$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.0$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.0$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.0$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.0$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult1Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.1$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.1$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.1$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.1$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.1$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult2Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.2$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.2$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.2$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.2$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.2$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult4Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.4$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.4$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.4$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.4$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.4$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult5Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.5$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.5$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.5$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.5$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.5$</td>&#xa;   </tr>&#xa;</table>]]></script>
    </instance>
    <instance>
      <name>PriorityResult6Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.6$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.6$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.6$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.6$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.6$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
    <instance>
      <name>PriorityResult7Tbl</name>
      <script><![CDATA[<table>&#xa;  <tr>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Trial\n#</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Traffic\nConfiguration</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Port</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nQuanta</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Delay\n(=$XonDelayUnit$)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Tx\nFrame Count</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Requested Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">Actual Pause\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">PFC Response\nTime (quanta)</td>&#xa;    <td colspan="1" rowspan="1" bgcolor="#eeeeee">XON Response\nTime (quanta)</td>&#xa;  </tr>&#xa;    <tr iterate="=$Priority_PortName$">&#xa;   <td bgcolor="#eeeeee">=$Priority_TrialNum$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_TrafficConfig$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority_PortName$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcTxQuanta$</td>&#xa;    <td bgcolor="#eeeeee">=$Priority.PfcXonDelay$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_TxPriFrameCount.7$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_RequestedPauseTime.7$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ActualPauseTime.7$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_ResponseTime.7$</td>&#xa;    <td halign="right" bgcolor="#ffffff">=$Priority_XonResponseTime.7$</td>&#xa;   </tr>&#xa;</table>&#xa;]]></script>
    </instance>
  </tables>
  <graphs/>
  <layout>
    <page name="Title" display="true">
      <width>800</width>
      <height>800</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>startDateStr</name>
        <x>200</x>
        <y>511</y>
        <width>59</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;Date:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>SpirentLotoTextStr</name>
        <x>200</x>
        <y>341</y>
        <width>287</width>
        <height>31</height>
        <size>25</size>
        <value xml:space="preserve">Spirent&amp;nbsp;TestCenter&amp;nbsp;Report</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestTypeStr</name>
        <x>200</x>
        <y>450</y>
        <width>61</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">Test&amp;nbsp;Type:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>TestTypeVar</name>
        <x>300</x>
        <y>450</y>
        <width>287</width>
        <height>15</height>
        <size>12</size>
        <value xml:space="preserve">DCB&amp;nbsp;PFC&amp;nbsp;Pause&amp;nbsp;Response&amp;nbsp;Time&amp;nbsp;Statistics</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>CounterModeStr</name>
        <x>200</x>
        <y>480</y>
        <width>80</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">Counter&amp;nbsp;Mode:</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>CounterModeStr</name>
        <x>300</x>
        <y>480</y>
        <width>31</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">=$CounterModeType$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>startDateVar</name>
        <x>300</x>
        <y>510</y>
        <width>142</width>
        <height>16</height>
        <size>12</size>
        <value xml:space="preserve">=$TestStartDate$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>nameLogo</name>
        <x>0</x>
        <y>0</y>
        <width>200</width>
        <height>100</height>
        <src>upperLeftLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>hdrLogo</name>
        <x>170</x>
        <y>0</y>
        <width>630</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>rightLogo</name>
        <x>690</x>
        <y>100</y>
        <width>110</width>
        <height>700</height>
        <src>rightSideLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>0</x>
        <y>720</y>
        <width>800</width>
        <height>80</height>
        <src>footerLogo.png</src>
      </instance>
    </page>
    <page name="Test Summary" display="true">
      <width>980</width>
      <height>720</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>2</gridColumns>
      <instance type="Text">
        <name>TestSummaryTitle</name>
        <x>432</x>
        <y>104</y>
        <width>110</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Test&amp;nbsp;Summary</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>hdr</name>
        <x>278</x>
        <y>-1</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>TestSummaryTbl</name>
        <x>47</x>
        <y>165</y>
        <width>915</width>
        <height>98</height>
        <value>TestSummaryTbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Trial Summary" display="true">
      <width>1150</width>
      <height>720</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Grid</iterateType>
      <gridRows>2</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>TestSummaryTitle</name>
        <x>585</x>
        <y>100</y>
        <width>110</width>
        <height>21</height>
        <size>16</size>
        <value xml:space="preserve">Trial&amp;nbsp;Summary</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>hdr</name>
        <x>430</x>
        <y>0</y>
        <width>720</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>TrialSummaryTbl</name>
        <x>39</x>
        <y>169</y>
        <width>1082</width>
        <height>158</height>
        <value>TrialSummaryTbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 0" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>69</x>
        <y>160</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult0Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
      <instance type="Text">
        <name>Title</name>
        <x>246</x>
        <y>108</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;0</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>94</x>
        <y>-2</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
    </page>
    <page name="Per Port Results - Priority 1" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>284</x>
        <y>110</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;1</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>93</x>
        <y>0</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>86</x>
        <y>155</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult1Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 2" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>230</x>
        <y>110</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;2</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>95</x>
        <y>0</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult2Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 3" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>233</x>
        <y>117</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;3</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>94</x>
        <y>-1</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult3Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 4" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>225</x>
        <y>121</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;4</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>94</x>
        <y>0</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>64</height>
        <value>PriorityResult4Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 5" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>211</x>
        <y>117</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;5</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>94</x>
        <y>-2</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>64</height>
        <value>PriorityResult5Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 6" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Title</name>
        <x>232</x>
        <y>119</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;6</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>94</x>
        <y>0</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult6Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Per Port Results - Priority 7" display="true">
      <width>800</width>
      <height>600</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>Table</name>
        <x>241</x>
        <y>119</y>
        <width>232</width>
        <height>20</height>
        <size>16</size>
        <value xml:space="preserve">Per&amp;nbsp;Port&amp;nbsp;Results&amp;nbsp;for&amp;nbsp;Priority&amp;nbsp;7</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>Header</name>
        <x>95</x>
        <y>0</y>
        <width>706</width>
        <height>112</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Table">
        <name>PriorityResultTable</name>
        <x>46</x>
        <y>160</y>
        <width>605</width>
        <height>455</height>
        <value>PriorityResult7Tbl</value>
        <size>10</size>
        <alternateRowColors>true</alternateRowColors>
      </instance>
    </page>
    <page name="Version" display="true">
      <width>800</width>
      <height>700</height>
      <masterPage></masterPage>
      <iterate>false</iterate>
      <iterateType>Duplicate</iterateType>
      <gridRows>1</gridRows>
      <gridColumns>1</gridColumns>
      <instance type="Text">
        <name>VersionStr</name>
        <x>35</x>
        <y>580</y>
        <width>97</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">Template&amp;nbsp;Version:&amp;nbsp;R2C</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>InputStartIdStr</name>
        <x>35</x>
        <y>600</y>
        <width>125</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RunTime&amp;nbsp;Start&amp;nbsp;Data&amp;nbsp;Set&amp;nbsp;ID:&amp;nbsp;=$@StartDataSetId$</value>
        <color>#000000</color>
      </instance>
      <instance type="Text">
        <name>inputEndIdStr</name>
        <x>35</x>
        <y>620</y>
        <width>166</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RunTime&amp;nbsp;End&amp;nbsp;Data&amp;nbsp;Set&amp;nbsp;ID:&amp;nbsp;=$@EndDataSetId$</value>
        <color>#000000</color>
      </instance>
      <instance type="Image">
        <name>headerLogo</name>
        <x>0</x>
        <y>0</y>
        <width>800</width>
        <height>100</height>
        <src>headerLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>rightLogo</name>
        <x>670</x>
        <y>100</y>
        <width>130</width>
        <height>400</height>
        <src>contactLogo.jpg</src>
      </instance>
      <instance type="Image">
        <name>footerLogo</name>
        <x>1</x>
        <y>649</y>
        <width>800</width>
        <height>50</height>
        <src>footerLogo.png</src>
      </instance>
      <instance type="Text">
        <name>Timestamp</name>
        <x>35</x>
        <y>640</y>
        <width>296</width>
        <height>11</height>
        <size>9</size>
        <value xml:space="preserve">RR&amp;nbsp;Timestamp&amp;nbsp;Saved&amp;nbsp;Timestamp:&amp;nbsp;=$RRTemplateSavedTimestamp$</value>
        <color>#000000</color>
      </instance>
    </page>
  </layout>
  <csv/>
</template>
