{
  "methodology_key": "PPPOL2TPV2SCALE",
  "display_name": "PPPoL2TPv2 Scale",
  "short_display_name": "PPPOL2TPV2SCALE",
  "description": "This methodology benchmarks the scale of PPP over  L2TPv2 by varying the number of tunnels or sessions.",
  "version": "1.0.0",
  "dependencies": {},
  "status": {
    "valid": true,
    "validation_explanation": "None."
  },
  "labels": [],
  "topology_map": {
    "type": "WEST_EAST",
    "sides": [
      {
        "side": "WEST",
        "port_group": "ClientPortGroup"
      },
      {
        "side": "EAST",
        "port_group": "ServerPortGroup"
      }
    ]
  },
  "port_groups": [
    {
      "property": "ClientPortGroup",
      "display_name": "Client Port Group",
      "description": "Ports used for PPPoL2TPv2 Clients",
      "min_occurs": "1",
      "max_occurs": "unbounded",
      "ports": [
        {
          "location": "//(Offline)/1/1"
        }
      ]
    },
    {
      "property": "ServerPortGroup",
      "display_name": "Hosts Port Group",
      "description": "Ports used for PPPoL2TPv2 hosts",
      "min_occurs": "1",
      "max_occurs": "unbounded",
      "ports": [
        {
          "location": "//(Offline)/1/1"
        }
      ]
    }
  ],
  "machine_groups": [],
  "resource_groups": [
    {
      "property": "MetricsService",
      "display_name": "Metrics Services",
      "description": "List of Metrics to use for the methodology.",
      "type": "METRICS",
      "resource_list": []
    }
  ],
  "property_groups": [
    {
      "group_type": "GLOBAL",
      "display_name": "Global Parameters",
      "description": "Global configuration parameters.",
      "test_properties": [
        {
          "description": "PPP IP version used in the test",
          "display_name": "PPP IP Version",
          "property": "PppIpVersion",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "IPv4",
          "acceptable_values": [
            "IPv4",
            "IPv6",
            "Dual-Stack"
          ]
        },
        {
          "description": "Tunnel count of PPP over L2TPv2 device",
          "display_name": "Tunnel Count",
          "property": "GuiTunnelCount",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "1",
          "maximum": "65534"
        },
        {
          "description": "Session count per tunnel of PPP over L2TPv2 device",
          "display_name": "Session Count Per Tunnel",
          "property": "GuiSessionCountPerTunnel",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "1",
          "maximum": "65534"
        }
      ]
    },
    {
      "group_type": "INIT",
      "display_name": "Initialization",
      "description": "PPPoL2TPv2 Init Group Command",
      "test_properties": [
        {
          "description": "Test mode for binary search. (If Session mode is selected, tunnel count is not increased in search.  If Tunnel mode is selected, session count is not increased in search)",
          "display_name": "Test Mode",
          "property": "TestMode",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "Session",
          "acceptable_values": [
            "Tunnel",
            "Session"
          ]
        },
        {
          "description": "Session connect rate of PPP over L2TPv2 device",
          "display_name": "Session Connect Rate",
          "property": "ConnectRate",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "100",
          "minimum": "1",
          "maximum": "1000",
          "units": "sessions/s"
        },
        {
          "description": "Rate (in sessions/s) at which PPP over L2TPv2 sessions attempt to disconnect",
          "display_name": "Disconnect Rate",
          "property": "DisconnectRate",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "100",
          "minimum": "2",
          "maximum": "1000",
          "units": "sessions/s"
        },
        {
          "description": "Maximum number of sessions in progress, which includes the sessions in the process of coming up or disconnecting at one time",
          "display_name": "Maximum Outstanding Sessions",
          "property": "SessionOutstanding",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1000",
          "minimum": "2",
          "maximum": "65534"
        }
      ]
    },
    {
      "group_type": "TOPOLOGY",
      "display_name": "PPPoL2TP Clients",
      "description": "PPPoL2TP Client Group Command",
      "topology_side": "WEST",
      "test_properties": [
        {
          "description": "Starting MAC address of client devices",
          "display_name": "MAC Address",
          "property": "ClientMacAddr",
          "property_value_type": "MAC",
          "is_collection": false,
          "property_value": "00:10:95:00:00:01"
        },
        {
          "description": "Step for MAC address between multiple client ports",
          "display_name": "MAC Address Port Step(one device per port)",
          "property": "ClientMacAddrPortStep",
          "property_value_type": "MAC",
          "is_collection": false,
          "property_value": "00:00:00:00:00:01"
        },
        {
          "description": "IPv4 Prefix Length of L2TPv2 client device",
          "display_name": "IPv4 Prefix Length",
          "property": "ClientOuterIpv4PrefixLength",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "24",
          "minimum": "0",
          "maximum": "32",
          "units": "bits"
        },
        {
          "description": "Starting IPv4 address of client devices",
          "display_name": "IPv4 Address",
          "property": "ClientOuterIpv4Addr",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "12.0.0.10"
        },
        {
          "description": "Step for IPv4 address between multiple client ports",
          "display_name": "IPv4 Address Port Step",
          "property": "ClientOuterIpv4AddrPortStep",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "1.0.0.0"
        },
        {
          "description": "Starting IPv4 gateway address of client devices",
          "display_name": "IPv4 Gateway Address",
          "property": "ClientOuterIpv4GwAddr",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "12.0.0.1"
        },
        {
          "description": "Step for IPv4 gateway address between multiple client ports",
          "display_name": "IPv4 Gateway Address Port Step",
          "property": "ClientOuterIpv4GwAddrPortStep",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "0.0.1.0"
        },
        {
          "description": "IPv6 prefix length of L2TPv2 client device",
          "display_name": "IPv6 Prefix Length",
          "property": "ClientOuterIpv6PrefixLength",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "64",
          "minimum": "0",
          "maximum": "128",
          "units": "bits"
        },
        {
          "description": "Starting IPv6 address of client devices",
          "display_name": "IPv6 Address",
          "property": "ClientOuterIpv6Addr",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "2000::1"
        },
        {
          "description": "Step for IPv6 address between multiple client ports",
          "display_name": "IPv6 Address Port Step",
          "property": "ClientOuterIpv6AddrPortStep",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "::1"
        },
        {
          "description": "Starting IPv6 gateway address of client devices",
          "display_name": "IPv6 Gateway Address",
          "property": "ClientOuterIpv6GwAddr",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "2000::1"
        },
        {
          "description": "Step for IPv6 gateway address between multiple client ports",
          "display_name": "IPv6 Gateway Address Port Step",
          "property": "ClientOuterIpv6GwAddrPortStep",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "::1"
        },
        {
          "description": "Starting outer VLAN ID for client devices",
          "display_name": "Outer VLAN ID",
          "property": "ClientOuterVlanId",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "200",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Step for outer VLAN ID between multiple client ports",
          "display_name": "Outer VLAN ID Port Step",
          "property": "ClientOuterVlanIdPortStep",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "1",
          "maximum": "4095"
        },
        {
          "description": "Starting VLAN ID for client devices",
          "display_name": "VLAN ID",
          "property": "ClientInnerVlanId",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "200",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Step for VLAN ID between multiple client ports",
          "display_name": "VLAN ID Port Step",
          "property": "ClientInnerVlanIdPortStep",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Determines type of VLAN headers to configure on client devices",
          "display_name": "VLAN Mode",
          "property": "ClientVlanMode",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "None",
          "acceptable_values": [
            "None",
            "VLAN",
            "QinQ"
          ]
        },
        {
          "description": "IP version of L2TPv2 device",
          "display_name": "L2TPv2 IP Version",
          "property": "IpVersion",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "IPv4",
          "acceptable_values": [
            "IPv4",
            "IPv6"
          ]
        },
        {
          "description": "Maximum number of automatic retry attempts",
          "display_name": "Auto Retry Count",
          "property": "ClientAutoRetryCount",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "65535",
          "minimum": "1",
          "maximum": "65535"
        },
        {
          "description": "Interval in seconds between sending out consecutive echo requests",
          "display_name": "Echo Request Gen Freq",
          "property": "ClientEchoRequestGenFreq",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "10",
          "minimum": "10",
          "maximum": "65535",
          "units": "seconds"
        },
        {
          "description": "Enable or disable automatic retry to connect failed PPP over L2TPv2 sessions",
          "display_name": "Enable Auto Retry",
          "property": "ClientEnableAutoRetry",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property_value": "False"
        },
        {
          "description": "Enable transmission of echo requests",
          "display_name": "Enable Echo Requests",
          "property": "ClientEnableEchoRequest",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property_value": "False"
        },
        {
          "description": "Number of consecutive, unanswered echo requests to send before failing the subscriber session",
          "display_name": "Max Echo Request Attempts",
          "property": "ClientMaxEchoRequestAttempts",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "0",
          "maximum": "65535"
        },
        {
          "description": "Maximum number of configure requests that can be sent, without acknowledgment, before a session fails",
          "display_name": "LCP Config Request Max Attempts",
          "property": "ClientLcpConfigRequestMaxAttempts",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "10",
          "minimum": "1",
          "maximum": "65535"
        },
        {
          "description": "Timeout value in seconds for acknowledgment of a configure request",
          "display_name": "LCP Config Request Timeout",
          "property": "ClientLcpConfigRequestTimeout",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "3",
          "minimum": "1",
          "maximum": "65535",
          "units": "seconds"
        },
        {
          "description": "Maximum number of NCP Configure-Requests that can be sent, without acknowledgment, before a session fails",
          "display_name": "NCP Config Request Max Attempts",
          "property": "ClientNcpConfigRequestMaxAttempts",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "10",
          "minimum": "1",
          "maximum": "65535"
        },
        {
          "description": "Timeout value in seconds for acknowledgment of an NCP Configure-Request",
          "display_name": "NCP Config Request Timeout",
          "property": "ClientNcpConfigRequestTimeout",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "3",
          "minimum": "1",
          "maximum": "65535",
          "units": "seconds"
        },
        {
          "description": "Password for Authenticated PPP Sessions",
          "display_name": "Password",
          "property": "ClientPassword",
          "property_value_type": "STRING",
          "is_collection": false,
          "property_value": "spirent"
        },
        {
          "description": "Username for Authenticated PPP Sessions",
          "display_name": "Username",
          "property": "ClientUsername",
          "property_value_type": "STRING",
          "is_collection": false,
          "property_value": "spirent"
        },
        {
          "description": "Enable or disable hello message to L2TP DUT",
          "display_name": "Enable L2TP Hello",
          "property": "EnableHello",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property_value": "False"
        },
        {
          "description": "Interval in seconds between sending two L2TP hello messages",
          "display_name": "L2TP Hello Interval",
          "property": "HelloInterval",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "60",
          "minimum": "1",
          "maximum": "1024",
          "units": "seconds"
        },
        {
          "description": "Password for authenticated incoming tunnel",
          "display_name": "Incoming Tunnel Password",
          "property": "RxTunnelPassword",
          "property_value_type": "STRING",
          "is_collection": false,
          "property_value": "spirent"
        },
        {
          "description": "Password for authenticated outgoing tunnel",
          "display_name": "Outgoing Tunnel Password",
          "property": "TxTunnelPassword",
          "property_value_type": "STRING",
          "is_collection": false,
          "property_value": "spirent"
        },
        {
          "description": "Enable or disable L2TPv2 DUT authentication on PPP over L2TPv2 device",
          "display_name": "Enable L2TPv2 DUT Authentication",
          "property": "GuiEnableDutAuthentication",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property_value": "False"
        },
        {
          "description": "PPP authentication type of PPP over L2TPv2 device",
          "display_name": "PPP Authentication",
          "property": "PppAuthentication",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "NONE",
          "acceptable_values": [
            "NONE",
            "NEGOTIATE",
            "CHAP_MD5",
            "PAP"
          ]
        },
        {
          "description": "IPv4 address of LNS (DUT) device",
          "display_name": "IPv4 LNS Address",
          "property": "Ipv4LnsAddr",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "12.0.0.1"
        },
        {
          "description": "IPv6 address of LNS (DUT) device",
          "display_name": "IPv6 LNS Address",
          "property": "Ipv6LnsAddr",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "2000::1"
        }
      ]
    },
    {
      "group_type": "TOPOLOGY",
      "display_name": "PPPoL2TP Traffic Endpoints",
      "description": "PPPoL2TP Traffic Endpoints Group Command",
      "topology_side": "EAST",
      "test_properties": [
        {
          "description": "Starting MAC address of host devices",
          "display_name": "MAC Address",
          "property": "ServerMacAddr",
          "property_value_type": "MAC",
          "is_collection": false,
          "property_value": "00:10:95:01:00:01"
        },
        {
          "description": "Step for MAC address between multiple host ports",
          "display_name": "MAC Address Port Step",
          "property": "ServerMacAddrPortStep",
          "property_value_type": "MAC",
          "is_collection": false,
          "property_value": "00:00:01:00:00:00"
        },
        {
          "description": "IPv4 prefix length of host",
          "display_name": "IPv4 Prefix Length",
          "property": "ServerOuterIpv4PrefixLength",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "24",
          "minimum": "0",
          "maximum": "32",
          "units": "bits"
        },
        {
          "description": "Starting IPv4 address of host devices",
          "display_name": "IPv4 Address",
          "property": "ServerOuterIpv4Addr",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "22.0.0.10"
        },
        {
          "description": "Step for IPv4 address between multiple host ports",
          "display_name": "IPv4 Address Port Step",
          "property": "ServerOuterIpv4AddrPortStep",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "1.0.0.0"
        },
        {
          "description": "Starting IPv4 gateway address of host devices",
          "display_name": "IPv4 Gateway Address",
          "property": "ServerOuterIpv4GwAddr",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "22.0.0.1"
        },
        {
          "description": "Step for IPv4 gateway address between multiple host ports",
          "display_name": "IPv4 Gateway Address Port Step",
          "property": "ServerOuterIpv4GwAddrPortStep",
          "property_value_type": "IPV4",
          "is_collection": false,
          "property_value": "1.0.0.0"
        },
        {
          "description": "IPv6 prefix length of host",
          "display_name": "IPv6 Prefix Length",
          "property": "ServerOuterIpv6PrefixLength",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "64",
          "minimum": "0",
          "maximum": "128",
          "units": "bits"
        },
        {
          "description": "Starting IPv6 address of host devices",
          "display_name": "IPv6 Address",
          "property": "ServerOuterIpv6Addr",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "2000::2"
        },
        {
          "description": "Step for IPv6 address between multiple host ports",
          "display_name": "IPv6 Address Port Step",
          "property": "ServerOuterIpv6AddrPortStep",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "::1:0"
        },
        {
          "description": "Starting IPv6 gateway address of host devices",
          "display_name": "IPv6 Gateway Address",
          "property": "ServerOuterIpv6GwAddr",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "2000::1"
        },
        {
          "description": "Step for IPv6 gateway address between multiple host ports",
          "display_name": "IPv6 Gateway Address Port Step",
          "property": "ServerOuterIpv6GwAddrPortStep",
          "property_value_type": "IPV6",
          "is_collection": false,
          "property_value": "::1:0"
        },
        {
          "description": "Starting outer VLAN ID for host devices",
          "display_name": "Outer VLAN ID",
          "property": "ServerOuterVlanId",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "100",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Step for outer VLAN ID between multiple host ports",
          "display_name": "Outer VLAN ID Port Step",
          "property": "ServerOuterVlanIdPortStep",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Starting VLAN ID for host devices",
          "display_name": "VLAN ID",
          "property": "ServerInnerVlanId",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "200",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Step for VLAN ID between multiple host ports",
          "display_name": "VLAN ID Port Step",
          "property": "ServerInnerVlanIdPortStep",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "0",
          "maximum": "4095"
        },
        {
          "description": "Determines type of VLAN headers to configure on host devices",
          "display_name": "VLAN Mode",
          "property": "ServerVlanMode",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "None",
          "acceptable_values": [
            "None",
            "VLAN",
            "QinQ"
          ]
        }
      ]
    },
    {
      "group_type": "TRAFFIC",
      "display_name": "Traffic",
      "description": "Setup Traffic",
      "test_properties": [
        {
          "description": "Load unit applied to the stream block",
          "display_name": "Traffic Load Units",
          "property": "TrafficLoadUnits",
          "property_value_type": "ENUM",
          "is_collection": false,
          "property_value": "Frames/sec (fps)",
          "acceptable_values": [
            "Percent (%)",
            "Frames/sec (fps)",
            "bps",
            "Kbps",
            "Mbps"
          ]
        },
        {
          "description": "Amount of traffic to transmit in the given load units",
          "display_name": "Traffic Load",
          "property": "TrafficForwardLoad",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "100",
          "minimum": "0",
          "maximum": "4294967295"
        }
      ]
    },
    {
      "group_type": "TEST",
      "display_name": "Test Parameters",
      "description": "Test iterates over given range verifying all sessions come  up at the configured value",
      "test_properties": [
        {
          "description": "Enable the stability backoff phase of benchmarking to determine if the value found through binary search is stable",
          "display_name": "Enable Stability Backoff",
          "property": "EnableStabilityBackoff",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property_value": "False"
        },
        {
          "description": "The resolution of the binary search and the amount to backoff by when doing stability backoff",
          "display_name": "Binary Search Step Value",
          "property": "SearchStepValue",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "10.00",
          "minimum": "0.00",
          "maximum": "2147483647.00"
        },
        {
          "description": "Number of times to repeat a value being tested for stability during the stability backoff phase of benchmarking",
          "display_name": "Stability Backoff Repeat Count",
          "property": "StabilityBackoffRepeatCount",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "1",
          "minimum": "0",
          "maximum": "4294967295"
        },
        {
          "description": "Percentage of trials of a particular value that must be successful for the rate to be considered stable during the stability backoff phase of benchmarking",
          "display_name": "Stability Success",
          "property": "StabilitySuccessPercent",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "100.00",
          "minimum": "0.00",
          "maximum": "100.00",
          "units": "%"
        },
        {
          "description": "The minimum value to use when doing binary search",
          "display_name": "Minimum Search Count",
          "property": "SearchMinValue",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "90.00",
          "minimum": "0.00",
          "maximum": "2147483647.00"
        },
        {
          "description": "The maximum value to use when doing binary search",
          "display_name": "Maximum Search Count",
          "property": "SearchMaxValue",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "100.00",
          "minimum": "0.00",
          "maximum": "2147483647.00"
        },
        {
          "description": "Maximum amount of time in seconds to wait for PPP over L2TPv2 sessions to connect",
          "display_name": "Session Connect Max Wait Time",
          "property": "SessionConnectMaxWaitTime",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "30.00",
          "minimum": "0.00",
          "maximum": "4294967295.00",
          "units": "seconds"
        },
        {
          "description": "Maximum amount of time in seconds to wait for PPP over L2TPv2 sessions to disconnect",
          "display_name": "Session Disconnect Max Wait Time",
          "property": "SessionDisconectMaxWaitTime",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "30.00",
          "minimum": "0.00",
          "maximum": "4294967295.00",
          "units": "seconds"
        },
        {
          "description": "Amount of time in seconds to run traffic between clients  and hosts",
          "display_name": "Traffic Duration",
          "property": "TrafficDuration",
          "property_value_type": "INTEGER",
          "is_collection": false,
          "property_value": "3",
          "minimum": "0",
          "maximum": "4294967295",
          "units": "seconds"
        }
      ]
    }
  ]
}
