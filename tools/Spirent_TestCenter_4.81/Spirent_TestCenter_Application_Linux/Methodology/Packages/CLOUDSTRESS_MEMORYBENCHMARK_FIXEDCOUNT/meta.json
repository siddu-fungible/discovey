{
  "methodology_key": "CLOUDSTRESS_MEMORYBENCHMARK_FIXEDCOUNT",
  "display_name": "Memory I/O - Fixed Instance Count",
  "short_display_name": "Memory Fixed Count",
  "description": "Identify a baseline memory I/O performance metric of the system under test using a fixed number of deployed CloudStress Agents.",
  "version": "1-0-0",
  "status": {
    "valid": true,
    "validation_explanation": "None."
  },
  "labels": [],
  "base_methodology": {
    "methodology_key": "CLOUDSTRESS_BENCHMARK_FIXEDCOUNT",
    "override_properties": {
      "EnableCpuLoad": "False",
      "EnableMemoryLoad": "True",
      "EnableNetworkLoad": "False",
      "EnableStorageLoad": "False",
      "EnableCpuTestCriteria": "False",
      "EnableMemoryTestCriteria": "True",
      "EnableNetworkTestCriteria": "False",
      "EnableStorageTestCriteria": "False"
    }
  },
  "port_groups": [],
  "machine_map": {
    "sides": [
      {
        "side": "WEST",
        "machine_group": "MachineGroupWestMachineGroup"
      }
    ]
  },
  "machine_groups": [
    {
      "property": "MachineGroupWestMachineGroup",
      "display_name": "Machine Group MachineGroupWestMachineGroup",
      "machines": [
        {
          "machine_ips": [
            "10.1.1.1",
            "10.1.1.2"
          ]
        }
      ]
    }
  ],
  "property_groups": [
    {
      "display_name": "Global Configuration",
      "description": "Global Configuration",
      "group_type": "TEST",
      "test_properties": [
        {
          "display_name": "Iteration Duration",
          "description": "The minimum time to generate load on the selected agents.",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "30.00",
          "units": "sec",
          "property": "IterationDuration"
        },
        {
          "display_name": "Initial Search Space Value",
          "description": "Initial percent of the load search space to apply in the binary search algorithm.",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "50.00",
          "units": "%",
          "property": "InitialSearchValue"
        },
        {
          "display_name": "Search Resolution",
          "description": "If the difference in search space percent between the highest passing iteration and lowest failing iteration is less than the resolution, the search algorithm will stop.",
          "property_value_type": "FLOAT",
          "minimum": "0.001",
          "maximum": "100.0",
          "is_collection": false,
          "property_value": "1.00",
          "units": "%",
          "property": "SearchResolution"
        },
        {
          "display_name": "Wait After Agent Stop",
          "description": "The amount of time to wait after stopping agents before collecting results and validating the iteration.",
          "maximum": "2147483647.0",
          "property_value_type": "FLOAT",
          "minimum": "0.005",
          "is_collection": false,
          "property_value": "10.00",
          "units": "sec",
          "property": "WaitAfterStop"
        }
      ]
    },
    {
      "display_name": "Auto-Deployment Configuration",
      "description": "Auto-Deployment Configuration",
      "group_type": "TEST",
      "group_key": "AutoDeployConfig",
      "test_properties": [
        {
          "display_name": "Provider Response Maximum Wait Time",
          "description": "Maximum amount of time to wait for a response from the provider when a command is issued.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "60",
          "units": "sec",
          "property": "ProviderRespMaxWaitTime"
        },
        {
          "display_name": "Provider Response Poll Time",
          "description": "Amount of time to wait between polls to check for the provider's response to a command.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "1000",
          "units": "msec",
          "property": "ProviderRespPollTime"
        },
        {
          "display_name": "Agent Deployment Maximum Wait Time",
          "description": "Maximum amount of time to wait for auto-deployed agents to come up.  This maximum applies to agents of a specific Template or a specific batch of agents on a specific Template if BatchSize is non-zero.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "300",
          "units": "sec",
          "property": "DeployMaxWaitTime"
        },
        {
          "display_name": "Agent Deployment Poll Time",
          "description": "Amount of time to wait between polls to check for the number of agents have successfully been deployed for a specific Template or a specific batch of agents on a specific Template if BatchSize is non-zero.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "1000",
          "units": "msec",
          "property": "DeployPollTime"
        },
        {
          "display_name": "Tear Down Maximum Wait Time",
          "description": "Specifies the maximum time in seconds to wait to for all the deployed agents of the Template to be torn down.  When the BatchSize is non-zero, this parameter corresponds to the maximum wait time per batch of agents per Template.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "300",
          "units": "sec",
          "property": "TearDownMaxWaitTime"
        },
        {
          "display_name": "Tear Down Poll Time",
          "description": "Specifies the time in milliseconds to wait between polls while polling for number of agents that are still up.  Note that each poll for number of agents that are up involves issuing a command to the provider to get the current number of agents that are still up.",
          "property_value_type": "INTEGER",
          "minimum": "1",
          "is_collection": false,
          "property_value": "1000",
          "units": "msec",
          "property": "TearDownPollTime"
        },
        {
          "display_name": "Agent Deployment Batch Size",
          "description": "Maximum number of agents to attempt at any one time.  Note that the Templates are deployed serially; the BatchSize further breaks up the agents in a Template to reduce the load on the server.  Set the BatchSize to zero to deploy all agents on a Template as fast as possible.",
          "property_value_type": "INTEGER",
          "minimum": "0",
          "is_collection": false,
          "property_value": "0",
          "units": "agents",
          "property": "DeployBatchSize"
        },
        {
          "display_name": "Agent Tear Down Batch Size",
          "description": "Maximum number of agents to attempt at any one time.  Note that the Templates are deployed serially; the BatchSize further breaks up the agents in a Template to reduce the load on the server.  Set the BatchSize to zero to tear down all agents on a Template as fast as possible.",
          "property_value_type": "INTEGER",
          "minimum": "0",
          "is_collection": false,
          "property_value": "0",
          "units": "agents",
          "property": "TearDownBatchSize"
        },
        {
          "display_name": "Enable Delete Instances On End Of Test",
          "description": "Enable deletion of all auto-deployed instances at the end of the test.",
          "property_value_type": "BOOLEAN",
          "is_collection": false,
          "property": "EnableEotDeleteInstances",
          "property_value": "True"
        }
      ]
    },
    {
      "display_name": "Memory Load Parameters",
      "description": "Memory load parameters for the methodology.",
      "group_type": "VM",
      "test_properties": [
        {
          "display_name": "Memory Load Parameters",
          "description": "The memory load parameters for the test.",
          "column_definitions": [
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Minimum Memory Read Rate",
              "description": "The lower bound of the memory read rate search space in operations per second.",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "units": "ops/sec",
              "property": "MinMemoryReadRate"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Maximum Memory Read Rate",
              "description": "The upper bound of the memory read rate search space in operations per second.",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "units": "ops/sec",
              "property": "MaxMemoryReadRate"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Minimum Memory Write Rate",
              "description": "The lower bound of the memory write rate search space in operations per second.",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "units": "ops/sec",
              "property": "MinMemoryWriteRate"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Maximum Memory Write Rate",
              "description": "The upper bound of the memory write rate search space in operations per second.",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "units": "ops/sec",
              "property": "MaxMemoryWriteRate"
            },
            {
              "description": "The number of bytes to read for memory operations. Must be a power of 2.",
              "display_name": "Memory Read Size",
              "property": "MemoryReadSize",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "minimum": "1",
              "units": "bytes"
            },
            {
              "description": "The number of bytes to write for memory operations. Must be a power of 2.",
              "display_name": "Memory Write Size",
              "property": "MemoryWriteSize",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "minimum": "1",
              "units": "bytes"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Buffer Size",
              "description": "The memory buffer size, in bytes, for read/write operations. The size must be a multiple of the block size.",
              "property_value_type": "INTEGER",
              "is_collection": false,
              "units": "bytes",
              "property": "MemoryBufferSize"
            },
            {
              "description": "The access pattern to use for the memory I/O.",
              "display_name": "Memory Access Pattern",
              "property": "MemoryAccessPattern",
              "property_value_type": "ENUM",
              "is_collection": false,
              "acceptable_values": [
                "Random",
                "Sequential",
                "Reverse"
              ]
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Template ID",
              "description": "The resource ID of the template model these parameters are for. An empty string indicates to apply to all template models.",
              "property_value_type": "STRING",
              "is_collection": false,
              "property": "MemoryTemplateId"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Node ID",
              "description": "The resource ID of the node within the specified template model these parameters is for. An empty string indicates to apply to all nodes within the template model. If TemplateId is empty string, this is treated as an empty string.",
              "property_value_type": "STRING",
              "is_collection": false,
              "property": "MemoryNodeId"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Node Name",
              "description": "The name of the node within the specified template model that this load profile applies to.  When Node ID is an empty string, this field is ignored.",
              "property_value_type": "STRING",
              "is_collection": false,
              "property": "MemoryNodeName"
            },
            {
              "acceptable_values": [
                ""
              ],
              "display_name": "Profile Name",
              "description": "The name of this load profile.",
              "property_value_type": "STRING",
              "is_collection": false,
              "property": "MemoryLoadProfileName"
            }
          ],
          "table": [
            [
              "1000",
              "10000",
              "1000",
              "10000",
              "4096",
              "4096",
              "33554432",
              "Random",
              "",
              "",
              "",
              "Default"
            ]
          ],
          "property": "MinMaxMemoryLoadParams"
        }
      ]
    },
    {
      "display_name": "Success Thresholds",
      "description": "Success Thresholds",
      "group_type": "RESULTS",
      "test_properties": [
        {
          "display_name": "Acceptable Memory Read Variance",
          "description": "The acceptable variance between the intended memory read rate and actual memory read rate.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "1.00",
          "units": "%",
          "property": "AcceptableMemoryReadVariance"
        },
        {
          "display_name": "Acceptable Memory Read Latency",
          "description": "The maximum acceptable latency, in nanoseconds, of memory read operations.",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "2000.00",
          "units": "ns",
          "property": "AcceptableMemoryReadLatency"
        },
        {
          "display_name": "Acceptable Memory Write Variance",
          "description": "The acceptable variance between the intended memory write rate and actual memory write rate.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "1.00",
          "units": "%",
          "property": "AcceptableMemoryWriteVariance"
        },
        {
          "display_name": "Acceptable Memory Write Latency",
          "description": "The maximum acceptable latency, in nanoseconds, of memory write operations.",
          "property_value_type": "FLOAT",
          "is_collection": false,
          "property_value": "2000.00",
          "units": "ns",
          "property": "AcceptableMemoryWriteLatency"
        },
        {
          "display_name": "Memory Read Variance Success Threshold",
          "description": "The number of result samples as a percentage of the total result samples from data from up to the five worst performing agents that show the actual load is within the acceptable variance.  Agents are ranked according to how many result samples do not meet acceptable variance.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "95.00",
          "units": "%",
          "property": "MemoryReadVarianceSuccessThreshold"
        },
        {
          "display_name": "Memory Read Latency Success Threshold",
          "description": "The number of result samples as a percentage of the total result samples from data from up to the five worst performing agents that show the measured latency is acceptable.  Agents are ranked according to how many result samples do not meet acceptable latency.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "95.00",
          "units": "%",
          "property": "MemoryReadLatencySuccessThreshold"
        },
        {
          "display_name": "Memory Write Variance Success Threshold",
          "description": "The number of result samples as a percentage of the total result samples from data from up to the five worst performing agents that show the actual load is within the acceptable variance.  Agents are ranked according to how many result samples do not meet acceptable variance.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "95.00",
          "units": "%",
          "property": "MemoryWriteVarianceSuccessThreshold"
        },
        {
          "display_name": "Memory Write Latency Success Threshold",
          "description": "The number of result samples as a percentage of the total result samples from data from up to the five worst performing agents that show the measured latency is acceptable.  Agents are ranked according to how many result samples do not meet acceptable latency.",
          "maximum": "100",
          "property_value_type": "FLOAT",
          "minimum": "0",
          "is_collection": false,
          "property_value": "95.00",
          "units": "%",
          "property": "MemoryWriteLatencySuccessThreshold"
        }
      ]
    }
  ]
}
