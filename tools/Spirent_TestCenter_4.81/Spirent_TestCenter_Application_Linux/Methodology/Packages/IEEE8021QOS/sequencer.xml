<?xml version="1.0" encoding="windows-1252"?>

<!-- This is a machine-generated file. -->
<!-- Please do not edit it. -->
<!-- Generated by Framework ver. 9.90.6893.0000 -->

<StcSystem id="1" serializationBase="true" 
 InSimulationMode="FALSE"
 UseSmbMessaging="FALSE"
 ApplicationName="TestCenter"
 Active="TRUE"
 LocalActive="TRUE"
 Name="StcSystem 1">
  <Project id="2" 
   TableViewData=""
   TestMode="L2L3"
   SelectedTechnologyProfiles="bgp isis ospfv2 pcep dhcp"
   ConfigurationFileName="C:\ManualTests\Methodology\ieee8021\Approval\sequencer.xml"
   Active="TRUE"
   LocalActive="TRUE"
   Name="Project 1">
    <Relation type="DefaultSelection" target="128454"/>
    <Tags id="1713" 
     Active="TRUE"
     LocalActive="TRUE"
     Name="Tags 1">
      <Relation type="UserTag" target="128382"/>
      <Relation type="UserTag" target="128383"/>
      <Relation type="UserTag" target="128384"/>
      <Relation type="UserTag" target="128385"/>
      <Relation type="UserTag" target="128386"/>
      <Relation type="UserTag" target="128387"/>
      <Relation type="UserTag" target="128388"/>
      <Relation type="UserTag" target="128389"/>
      <Relation type="UserTag" target="128390"/>
      <Relation type="UserTag" target="128391"/>
      <Relation type="UserTag" target="128392"/>
      <Relation type="UserTag" target="128393"/>
      <Relation type="UserTag" target="128394"/>
      <Relation type="UserTag" target="128395"/>
      <Relation type="UserTag" target="128396"/>
      <Relation type="UserTag" target="128397"/>
      <Relation type="UserTag" target="128398"/>
      <Relation type="UserTag" target="128399"/>
      <Relation type="UserTag" target="128400"/>
      <Relation type="UserTag" target="128401"/>
      <Relation type="UserTag" target="128402"/>
      <Relation type="UserTag" target="128403"/>
      <Relation type="UserTag" target="128404"/>
      <Relation type="UserTag" target="128405"/>
      <Relation type="UserTag" target="128406"/>
      <Relation type="UserTag" target="128407"/>
      <Relation type="UserTag" target="128408"/>
      <Relation type="UserTag" target="128409"/>
      <Relation type="UserTag" target="128410"/>
      <Relation type="UserTag" target="128411"/>
      <Relation type="UserTag" target="128412"/>
      <Relation type="UserTag" target="128413"/>
      <Relation type="UserTag" target="128414"/>
      <Relation type="UserTag" target="128415"/>
      <Relation type="UserTag" target="128416"/>
      <Relation type="UserTag" target="128417"/>
      <Relation type="UserTag" target="128418"/>
      <Relation type="UserTag" target="128419"/>
      <Relation type="UserTag" target="128420"/>
      <Relation type="UserTag" target="128421"/>
      <Relation type="UserTag" target="128422"/>
      <Relation type="UserTag" target="128423"/>
      <Relation type="UserTag" target="128424"/>
      <Relation type="UserTag" target="128425"/>
      <Relation type="UserTag" target="128426"/>
      <Relation type="UserTag" target="128427"/>
      <Relation type="UserTag" target="128428"/>
      <Relation type="UserTag" target="128429"/>
      <Relation type="UserTag" target="128430"/>
      <Relation type="UserTag" target="128431"/>
      <Relation type="UserTag" target="128432"/>
      <Relation type="UserTag" target="128433"/>
      <Relation type="UserTag" target="128434"/>
      <Relation type="UserTag" target="128435"/>
      <Relation type="UserTag" target="128436"/>
      <Relation type="UserTag" target="128437"/>
      <Relation type="UserTag" target="128438"/>
      <Relation type="UserTag" target="128439"/>
      <Relation type="UserTag" target="128440"/>
      <Relation type="UserTag" target="128441"/>
      <Relation type="UserTag" target="128442"/>
      <Relation type="UserTag" target="128443"/>
      <Relation type="UserTag" target="128444"/>
      <Relation type="UserTag" target="128445"/>
      <Relation type="UserTag" target="128446"/>
      <Relation type="UserTag" target="128447"/>
      <Relation type="UserTag" target="128448"/>
      <Relation type="UserTag" target="128449"/>
      <Relation type="UserTag" target="128450"/>
      <Relation type="UserTag" target="128451"/>
      <Relation type="UserTag" target="128452"/>
      <Relation type="UserTag" target="128453"/>
      <Relation type="UserTag" target="137114"/>
      <Relation type="UserTag" target="137115"/>
      <Relation type="UserTag" target="137116"/>
      <Relation type="UserTag" target="137293"/>
      <Relation type="UserTag" target="137294"/>
      <Relation type="UserTag" target="137295"/>
      <Relation type="DefaultTag" target="128376"/>
      <Relation type="DefaultTag" target="128377"/>
      <Relation type="DefaultTag" target="128378"/>
      <Relation type="DefaultTag" target="128379"/>
      <Relation type="DefaultTag" target="128380"/>
      <Relation type="DefaultTag" target="128381"/>
      <Tag id="128376" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Host">
      </Tag>
      <Tag id="128377" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Router">
      </Tag>
      <Tag id="128378" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Client">
      </Tag>
      <Tag id="128379" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Server">
      </Tag>
      <Tag id="128380" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Core">
      </Tag>
      <Tag id="128381" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Edge">
      </Tag>
      <Tag id="128382" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="TxLoadPortGroup">
      </Tag>
      <Tag id="128383" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="TxTestPortGroup">
      </Tag>
      <Tag id="128384" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="RxPortGroup">
      </Tag>
      <Tag id="128385" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3446">
      </Tag>
      <Tag id="128386" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3447">
      </Tag>
      <Tag id="128387" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3448">
      </Tag>
      <Tag id="128388" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3452">
      </Tag>
      <Tag id="128389" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3453">
      </Tag>
      <Tag id="128390" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3454">
      </Tag>
      <Tag id="128391" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.721626">
      </Tag>
      <Tag id="128392" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.721629">
      </Tag>
      <Tag id="128393" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.721630">
      </Tag>
      <Tag id="128394" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.721639">
      </Tag>
      <Tag id="128395" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.721642">
      </Tag>
      <Tag id="128396" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.721643">
      </Tag>
      <Tag id="128397" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3483">
      </Tag>
      <Tag id="128398" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3486">
      </Tag>
      <Tag id="128399" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3487">
      </Tag>
      <Tag id="128400" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3501">
      </Tag>
      <Tag id="128401" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3504">
      </Tag>
      <Tag id="128402" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3505">
      </Tag>
      <Tag id="128403" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="AllocateCommand">
      </Tag>
      <Tag id="128404" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.8333">
      </Tag>
      <Tag id="128405" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.8336">
      </Tag>
      <Tag id="128406" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.8337">
      </Tag>
      <Tag id="128407" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.8348">
      </Tag>
      <Tag id="128408" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.8351">
      </Tag>
      <Tag id="128409" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.8352">
      </Tag>
      <Tag id="128410" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.202090">
      </Tag>
      <Tag id="128411" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.202093">
      </Tag>
      <Tag id="128412" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.202094">
      </Tag>
      <Tag id="128413" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.202120">
      </Tag>
      <Tag id="128414" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.202123">
      </Tag>
      <Tag id="128415" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.202124">
      </Tag>
      <Tag id="128416" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.22426">
      </Tag>
      <Tag id="128417" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.22429">
      </Tag>
      <Tag id="128418" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.22430">
      </Tag>
      <Tag id="128419" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.22465">
      </Tag>
      <Tag id="128420" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.22468">
      </Tag>
      <Tag id="128421" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.22469">
      </Tag>
      <Tag id="128422" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3460">
      </Tag>
      <Tag id="128423" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3463">
      </Tag>
      <Tag id="128424" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3464">
      </Tag>
      <Tag id="128425" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3480">
      </Tag>
      <Tag id="128426" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3483">
      </Tag>
      <Tag id="128427" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3484">
      </Tag>
      <Tag id="128428" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3869">
      </Tag>
      <Tag id="128429" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3872">
      </Tag>
      <Tag id="128430" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3873">
      </Tag>
      <Tag id="128431" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3889">
      </Tag>
      <Tag id="128432" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3892">
      </Tag>
      <Tag id="128433" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3893">
      </Tag>
      <Tag id="128434" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3633">
      </Tag>
      <Tag id="128435" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3636">
      </Tag>
      <Tag id="128436" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3637">
      </Tag>
      <Tag id="128437" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.3653">
      </Tag>
      <Tag id="128438" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.3656">
      </Tag>
      <Tag id="128439" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.3657">
      </Tag>
      <Tag id="128440" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ttFrameSizeIterator">
      </Tag>
      <Tag id="128441" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ttIterationDuration">
      </Tag>
      <Tag id="128442" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.157589">
      </Tag>
      <Tag id="128443" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.157592">
      </Tag>
      <Tag id="128444" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.157593">
      </Tag>
      <Tag id="128445" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.157609">
      </Tag>
      <Tag id="128446" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.157612">
      </Tag>
      <Tag id="128447" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.157613">
      </Tag>
      <Tag id="128448" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.75656">
      </Tag>
      <Tag id="128449" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.75659">
      </Tag>
      <Tag id="128450" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.75660">
      </Tag>
      <Tag id="128451" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.75676">
      </Tag>
      <Tag id="128452" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.75679">
      </Tag>
      <Tag id="128453" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.75680">
      </Tag>
      <Tag id="137114" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.129347">
      </Tag>
      <Tag id="137115" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.129350">
      </Tag>
      <Tag id="137116" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.129351">
      </Tag>
      <Tag id="137293" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.objectiteratorcommand.129367">
      </Tag>
      <Tag id="137294" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.iteratorconfigmixparamscommand.129370">
      </Tag>
      <Tag id="137295" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="spirent.methodology.createtemplateconfigcommand.129371">
      </Tag>
    </Tags>
    <FrameLengthDistribution id="128454" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Default">
      <FrameLengthDistributionSlot id="128455" 
       FrameLengthMode="FIXED"
       FixedFrameLength="40"
       MinFrameLength="40"
       MaxFrameLength="41"
       Weight="7"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 5">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128456" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="4"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 6">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128457" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="1"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 7">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128458" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Spirent">
      <FrameLengthDistributionSlot id="128459" 
       FrameLengthMode="FIXED"
       FixedFrameLength="40"
       MinFrameLength="40"
       MaxFrameLength="41"
       Weight="5867"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 13">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128460" 
       FrameLengthMode="FIXED"
       FixedFrameLength="44"
       MinFrameLength="43"
       MaxFrameLength="45"
       Weight="200"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 14">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128461" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="2366"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 15">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128462" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="1567"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 16">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128463" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="4-Point">
      <FrameLengthDistributionSlot id="128464" 
       FrameLengthMode="FIXED"
       FixedFrameLength="40"
       MinFrameLength="40"
       MaxFrameLength="41"
       Weight="55"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 8">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128465" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="15"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 9">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128466" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="10"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 10">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128467" 
       FrameLengthMode="RANDOM"
       FixedFrameLength="730"
       MinFrameLength="40"
       MaxFrameLength="1500"
       Weight="20"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 11">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128468" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="TCPv4">
      <FrameLengthDistributionSlot id="128469" 
       FrameLengthMode="FIXED"
       FixedFrameLength="72"
       MinFrameLength="71"
       MaxFrameLength="73"
       Weight="5867"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 17">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128470" 
       FrameLengthMode="FIXED"
       FixedFrameLength="74"
       MinFrameLength="73"
       MaxFrameLength="75"
       Weight="200"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 18">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128471" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="2366"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 19">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128472" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="1567"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 20">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128473" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="IPSEC">
      <FrameLengthDistributionSlot id="128474" 
       FrameLengthMode="FIXED"
       FixedFrameLength="72"
       MinFrameLength="71"
       MaxFrameLength="73"
       Weight="5867"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 21">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128475" 
       FrameLengthMode="FIXED"
       FixedFrameLength="74"
       MinFrameLength="73"
       MaxFrameLength="75"
       Weight="200"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 22">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128476" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="2366"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 23">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128477" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1400"
       MinFrameLength="1399"
       MaxFrameLength="1401"
       Weight="1567"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 24">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128478" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="JMIX Downstream">
      <FrameLengthDistributionSlot id="128479" 
       FrameLengthMode="FIXED"
       FixedFrameLength="60"
       MinFrameLength="59"
       MaxFrameLength="61"
       Weight="3"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 53">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128480" 
       FrameLengthMode="FIXED"
       FixedFrameLength="120"
       MinFrameLength="119"
       MaxFrameLength="121"
       Weight="4"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 54">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128481" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="1"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 55">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128482" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="5"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 56">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <FrameLengthDistribution id="128483" 
     Seed="10900842"
     Active="TRUE"
     LocalActive="TRUE"
     Name="JMIX Upstream">
      <FrameLengthDistributionSlot id="128484" 
       FrameLengthMode="FIXED"
       FixedFrameLength="60"
       MinFrameLength="59"
       MaxFrameLength="61"
       Weight="7"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 49">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128485" 
       FrameLengthMode="FIXED"
       FixedFrameLength="120"
       MinFrameLength="119"
       MaxFrameLength="121"
       Weight="8"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 50">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128486" 
       FrameLengthMode="FIXED"
       FixedFrameLength="576"
       MinFrameLength="575"
       MaxFrameLength="577"
       Weight="1"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 51">
      </FrameLengthDistributionSlot>
      <FrameLengthDistributionSlot id="128487" 
       FrameLengthMode="FIXED"
       FixedFrameLength="1500"
       MinFrameLength="1499"
       MaxFrameLength="1500"
       Weight="3"
       Active="TRUE"
       LocalActive="TRUE"
       Name="FrameLengthDistributionSlot 52">
      </FrameLengthDistributionSlot>
    </FrameLengthDistribution>
    <DeviceAddrOptions id="128488" 
     NextIpv4="192.85.1.3"
     Ipv4Increment="0.0.0.1"
     DefaultIpv4Prefix="24"
     NextIpv6="2001::2"
     Ipv6Increment="::1"
     DefaultIpv6Prefix="64"
     NextMac="00:10:94:00:00:01"
     MacIncrement="00:00:00:00:00:01"
     NextRouterId="192.0.0.1"
     RouterIdIncrement="0.0.0.1"
     NextIpv6RouterId="2000::1"
     Ipv6RouterIdIncrement="::1"
     NextWwn="20:00:10:85:00:00:00:01"
     WwnIncrement="00:00:00:00:00:00:00:01"
     UseForDeviceGenConfigExpand="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="DeviceAddrOptions 1">
    </DeviceAddrOptions>
    <Ieee80211PhyOptions id="128489" 
     SelectedRegion="USA"
     AutoConnect="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Ieee80211PhyOptions 1">
    </Ieee80211PhyOptions>
    <PhyOptions id="128490" 
     EnableCompensationMode="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="PhyOptions 1">
    </PhyOptions>
    <TestResultSetting id="128491" 
     Active="TRUE"
     LocalActive="TRUE"
     Name="TestResultSetting 1">
    </TestResultSetting>
    <PortOptions id="128492" 
     ReleaseMode="FULL_RESET"
     AggregatorResult="AGGREGATED"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Port Options 1">
    </PortOptions>
    <RealismOptions id="128493" 
     RealismMode="NORMAL"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Realism Options 1">
    </RealismOptions>
    <TrafficOptions id="128494" 
     TrafficStartMode="ASYNCHRONOUS"
     TrafficStartInterval="0"
     TrafficStreamIDStartIndex="1"
     DeleteInactiveStreamsFromMemory="FALSE"
     EnableGlobalAnalyzerPreload="FALSE"
     TSharkPath="None"
     ExcludeEthernetFcs="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="TrafficOptions 1">
    </TrafficOptions>
    <GroupHistogram id="128495" 
     ActiveGroupHistogramMode="DISABLED_MODE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Group Histogram 1">
    </GroupHistogram>
    <ResultOptions id="128496" 
     ResultViewMode="LATENCY_JITTER"
     ColumnFilterMode="BASIC"
     ShowWarningMessage="TRUE"
     StopTrafficBeforeClearingResults="FALSE"
     StopAnalyzerBeforeClearingResults="FALSE"
     SyncClearResults="FALSE"
     TimedRefreshResultViewMode="PERIODIC"
     TimedRefreshInterval="1"
     CollectStrayFrame="FALSE"
     PreambleByteLength="8"
     IfgByteLength="12"
     JitterMode="RFC4689ABSOLUTEVALUE"
     DeleteAllAnalyzerStreams="FALSE"
     SaveAtEotProperties=""
     TxPortExpectMCastTrafficSentFromSelf="FALSE"
     SaveOnlyCountersFromResultViewMode="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultOptions 1">
    </ResultOptions>
    <LabelBindingGlobalConfig id="128497" 
     SubscriptionInterval="5"
     LabelResolutionMode="PER_SESSION_LABEL_RESOLUTION"
     SelectDeactivedTunnelForData="TRUE"
     EnableTransmitUnresolvedStream="TRUE"
     EnableStaticPwAttachmentGroupId="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="LabelBindingGlobalConfig 1">
    </LabelBindingGlobalConfig>
    <MplsTpGlobalConfig id="128498" 
     FMChannelType="88"
     PWChannelType="34"
     Active="TRUE"
     LocalActive="TRUE"
     Name="MplsTpGlobalConfig 1">
    </MplsTpGlobalConfig>
    <BgpGlobalConfig id="128499" 
     SequentialStartup="DISABLE"
     StaggerOpen="100"
     StaggerClose="100"
     ConnectionRetryInterval="30"
     ConnectionRetryCount="100"
     UpdateCount="2000"
     UpdateDelay="30"
     VplsDraftVersion="VERSION_00"
     ScalabilityMode="NORMAL"
     EnableTcpNoDelay="TRUE"
     EnablePackUpdates="TRUE"
     TcpMaxSegmentSize="1460"
     EnableStraightforwardUpdate="FALSE"
     IgnoreAttributeErrors="FALSE"
     MvpnAutoAdvertiseDelay="1000"
     Active="TRUE"
     LocalActive="TRUE"
     Name="BgpGlobalConfig 1">
      <BgpSrGlobalConfig id="128500" 
       SrDraftVersion="VERSION_00"
       PrefixSidAttrType="40"
       Active="TRUE"
       LocalActive="TRUE"
       Name="BgpSrGlobalConfig 1">
        <BgpSrGlobalBlock id="128501" 
         BlockBase="16000"
         BlockRange="1000"
         Active="TRUE"
         LocalActive="TRUE"
         Name="BgpSrGlobalBlock 1">
        </BgpSrGlobalBlock>
      </BgpSrGlobalConfig>
    </BgpGlobalConfig>
    <PimGlobalConfig id="128502" 
     TriggerHelloDelay="5"
     EnablingPruningDelayOption="FALSE"
     Tbit="FALSE"
     LanPruneDelay="500"
     OverrideInterval="2500"
     EnablePackGroupRecord="TRUE"
     EnableMsgRate="FALSE"
     MsgRate="100"
     MsgInterval="1"
     DisableHelloExpireTimer="FALSE"
     DisableHelloRxInNeighborState="FALSE"
     DisableIncomingMsgProcessing="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="PimGlobalConfig 1">
    </PimGlobalConfig>
    <IsisPlsbGlobalConfig id="128503" 
     PlsbNlpid="143"
     PlsbInstanceTlvType="180"
     PlsbIsidAddrTlvType="181"
     PlsbLinkMetricSubTlvType="17"
     Active="TRUE"
     LocalActive="TRUE"
     Name="IsisPlsbGlobalConfig 1">
    </IsisPlsbGlobalConfig>
    <L2LearningConfig id="128504" 
     Rate="1000"
     RepeatCount="3"
     LearningStartDelay="1"
     L2FrameSize="SAME_AS_STREAM"
     L2FrameSizeFixed="128"
     EncapOption="USE_TX_ENCAP"
     Active="TRUE"
     LocalActive="TRUE"
     Name="L2LearningConfig 1">
    </L2LearningConfig>
    <ArpNdConfig id="128505" 
     LearningRate="250"
     MaxBurst="16"
     EnableCyclicArp="TRUE"
     DuplicateGatewayDetection="TRUE"
     RetryCount="3"
     TimeOut="1000"
     EnableUniqueMacAddrInReply="FALSE"
     EnableUniqueMacPattern="2222"
     ProcessGratuitousArpRequests="TRUE"
     UpdateDestMacUponNonGratuitousArpRequestsReceived="FALSE"
     ProcessUnsolicitedArpReplies="TRUE"
     EnableAutoArp="FALSE"
     ApplyConfiguredGatewayMac="FALSE"
     IgnoreFailures="TRUE"
     UseLinkLocalAddrForNeighborDiscovery="FALSE"
     UseConfiguredLinkLocalAddrForNeighborDiscovery="FALSE"
     UseLinklayerCacheInStack="FALSE"
     UseGatewayForTarget="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="ArpNdConfig 1">
    </ArpNdConfig>
    <OtvOptions id="128506" 
     UnicastOnlyTransport="FALSE"
     OverlayEncapMode="MPLS_GRE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="OTV Project-Level Options 1">
    </OtvOptions>
    <VxlanGlobalConfig id="128507" 
     EnableVxlanScale="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="VxlanGlobalConfig 1">
    </VxlanGlobalConfig>
    <Dhcpv4Options id="128508" 
     TrafficBehavior="REQUIRE_ALL_SESSIONS_BOUND"
     EnableServerRouting="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Dhcpv4Options 1">
    </Dhcpv4Options>
    <Dhcpv6Options id="128509" 
     TrafficBehavior="REQUIRE_ALL_SESSIONS_BOUND"
     EnableServerRouting="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Dhcpv6Options 1">
    </Dhcpv6Options>
    <PppoxOptions id="128510" 
     TrafficBehavior="REQUIRE_ALL_SESSIONS_CONNECTED"
     Active="TRUE"
     LocalActive="TRUE"
     Name="PppoxOptions 1">
    </PppoxOptions>
    <MplsTpOamGlobalConfig id="128511" 
     LmrRxFCfStart="1"
     LmrRxFCfStep="1"
     LmrTxFCbStart="1"
     LmrTxFCbStep="1"
     LmmTxFCfOffset="0"
     LmrRxFCfOffset="0"
     LmrTxFCbOffset="0"
     CcOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LbmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LbrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     TstOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;proto1&quot;
pdu=&quot;MPLSTPOAMTLV:TestTLV&quot;&gt;&lt;Length&gt;0040&lt;/Length&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     ChannelType="8902"
     EchoTlvsInLmr="FALSE"
     EchoTlvsInDmr="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="MplsTpOamGlobalConfig 1">
    </MplsTpOamGlobalConfig>
    <EoamGlobalConfig id="128512" 
     DmCommonTimeSource="FALSE"
     LmrRxFCfStart="1"
     LmrRxFCfStep="1"
     LmrTxFCbStart="1"
     LmrTxFCbStep="1"
     LmmTxFCfOffset="0"
     LmrRxFCfOffset="0"
     LmrTxFCbOffset="0"
     SlrTxFCbStart="1"
     SlrTxFCbStep="1"
     SlmTxFCfOffset="0"
     SlrTxFCbOffset="0"
     CcOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LbmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LbrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LtmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;proto1&quot;
pdu=&quot;EOAMTLV:LTMEgrID&quot;&gt;&lt;Length&gt;0000&lt;/Length&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     LtrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;proto1&quot;
pdu=&quot;EOAMTLV:LTREgrID&quot;&gt;&lt;Length&gt;0000&lt;/Length&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;RplyEgr_1&quot;
pdu=&quot;EOAMTLV:RplyEgr&quot;&gt;&lt;Length&gt;0000&lt;/Length&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     DmmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     DmrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LmmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     LmrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     SlmOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     SlrOptionalTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus
/&gt;&lt;/config&gt;&lt;/frame&gt;"
     ResultTimeUnit="MILLISECONDS"
     TestModeType="NORMAL"
     Active="TRUE"
     LocalActive="TRUE"
     Name="EoamGlobalConfig 1">
    </EoamGlobalConfig>
    <VqAnalyzerOptions id="128513" 
     SamplingPeriod="10"
     DatabaseFileName="vqAnalyzerTest.db"
     AppendDateTime="TRUE"
     EnableEotDatabase="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="VqAnalyzerOptions 1">
    </VqAnalyzerOptions>
    <ExternalDeviceOption id="128514" 
     Active="TRUE"
     LocalActive="TRUE"
     Name="ExternalDeviceOption 1">
    </ExternalDeviceOption>
    <Dot1xOptions id="128640" 
     TrafficStartOption="REQUIRE_ALL_SUPPLICANT_AUTH"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Dot1xOptions 1">
    </Dot1xOptions>
    <VicGlobalConfig id="128641" 
     OpenRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;ccc1&quot;
pdu=&quot;VICTLV:CtrlChanCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;mta1&quot;
pdu=&quot;VICTLV:MsgTypeArrayTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;rlc1&quot;
pdu=&quot;VICTLV:ResourceLimitCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;ec1&quot;
pdu=&quot;VICTLV:EthernetCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;fc1&quot;
pdu=&quot;VICTLV:FcoeCapTLV&quot;&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     CreateRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;pi1&quot;
pdu=&quot;VICTLV:ProvisioningInfoTLV&quot;&gt;&lt;Type&gt;12&lt;/Type&gt;&lt;Length&gt;0&lt;/Length&gt;&lt;ProvisioningInfoTypeSpace&gt;00000C&lt;/ProvisioningInfoTypeSpace&gt;&lt;Info&gt;&lt;ProvList
name=&quot;ProvList_0&quot;&gt;&lt;Fixed&gt;&lt;NumOfTlvs&gt;0&lt;/NumOfTlvs&gt;&lt;SubTlvs&gt;&lt;FixedSubTlvList
name=&quot;FixedSubTlvList_0&quot;&gt;&lt;ProfileNameTlv&gt;&lt;Type&gt;1&lt;/Type&gt;&lt;Length&gt;0&lt;/Length&gt;&lt;/ProfileNameTlv&gt;&lt;/FixedSubTlvList&gt;&lt;FixedSubTlvList
name=&quot;FixedSubTlvList_1&quot;&gt;&lt;vNicUuidTlv&gt;&lt;Type&gt;2&lt;/Type&gt;&lt;Length&gt;0&lt;/Length&gt;&lt;/vNicUuidTlv&gt;&lt;/FixedSubTlvList&gt;&lt;/SubTlvs&gt;&lt;/Fixed&gt;&lt;/ProvList&gt;&lt;/Info&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     EnableRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     SpirentOpenRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;ccc1&quot;
pdu=&quot;VICTLV:CtrlChanCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;mta1&quot;
pdu=&quot;VICTLV:MsgTypeArrayTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;rlc1&quot;
pdu=&quot;VICTLV:ResourceLimitCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;ec1&quot;
pdu=&quot;VICTLV:EthernetCapTLV&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;fc1&quot;
pdu=&quot;VICTLV:FcoeCapTLV&quot;&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     SpirentCreateRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;pi1&quot;
pdu=&quot;VICTLV:ProvisioningInfoTLV&quot;&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     SpirentEnableRequestTlvs="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
     Active="TRUE"
     LocalActive="TRUE"
     Name="VIC 1">
    </VicGlobalConfig>
    <PcepGlobalConfig id="128642" 
     SessionOutStanding="100"
     SessionRetryCount="5"
     SessionRetryInterval="5"
     LSPPerMessage="100"
     TCPInterval="500"
     PacketAlignToMTU="FALSE"
     EnableTCPNoDelay="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="PcepGlobalConfig 1">
    </PcepGlobalConfig>
    <ResultDataSet id="128643" 
     PrimaryClass="Port"
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="1000"
     Identifier="Port Traffic\Basic Traffic Results"
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path="Port Traffic"
     ResultViewOwner="SYSTEM"
     Description="object://core/Port"
     CustomDisplayName=""
     CustomDisplayPath="Port Traffic and Counters"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Basic Traffic Results">
      <Relation type="ResultChild" target="129649"/>
      <Relation type="ResultChild" target="129650"/>
      <Relation type="ResultChild" target="129651"/>
      <Relation type="ResultChild" target="129652"/>
      <Relation type="ResultChild" target="129653"/>
      <Relation type="ResultChild" target="129654"/>
      <ResultQuery id="128644" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="2"
       PropertyIdArray="generatorportresults.totalframecount
generatorportresults.totaloctetcount generatorportresults.generatorframecount
generatorportresults.generatoroctetcount
generatorportresults.generatorsigframecount
generatorportresults.generatorundersizeframecount
generatorportresults.generatoroversizeframecount
generatorportresults.generatorjumboframecount
generatorportresults.totalframerate generatorportresults.totaloctetrate
generatorportresults.generatorframerate generatorportresults.generatoroctetrate
generatorportresults.generatorsigframerate
generatorportresults.generatorundersizeframerate
generatorportresults.generatoroversizeframerate
generatorportresults.generatorjumboframerate
generatorportresults.generatorcrcerrorframecount
generatorportresults.generatorl3checksumerrorcount
generatorportresults.generatorl4checksumerrorcount
generatorportresults.generatorcrcerrorframerate
generatorportresults.generatorl3checksumerrorrate
generatorportresults.generatorl4checksumerrorrate
generatorportresults.totalipv4framecount
generatorportresults.totalipv6framecount
generatorportresults.totalmplsframecount
generatorportresults.generatoripv4framecount
generatorportresults.generatoripv6framecount
generatorportresults.generatorvlanframecount
generatorportresults.generatormplsframecount
generatorportresults.totalipv4framerate generatorportresults.totalipv6framerate
generatorportresults.totalmplsframerate
generatorportresults.generatoripv4framerate
generatorportresults.generatoripv6framerate
generatorportresults.generatorvlanframerate
generatorportresults.generatormplsframerate generatorportresults.totalbitrate
generatorportresults.generatorbitrate generatorportresults.l1bitcount
generatorportresults.l1bitrate generatorportresults.pfcframecount
generatorportresults.pfcpri0framecount generatorportresults.pfcpri1framecount
generatorportresults.pfcpri2framecount generatorportresults.pfcpri3framecount
generatorportresults.pfcpri4framecount generatorportresults.pfcpri5framecount
generatorportresults.pfcpri6framecount generatorportresults.pfcpri7framecount
generatorportresults.l1bitratepercent"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 32">
      </ResultQuery>
      <ResultQuery id="128645" 
       ConfigClassId="analyzer"
       ResultClassId="analyzerportresults"
       ResultRootList="2"
       PropertyIdArray="analyzerportresults.totalframecount
analyzerportresults.totaloctetcount analyzerportresults.sigframecount
analyzerportresults.undersizeframecount analyzerportresults.oversizeframecount
analyzerportresults.jumboframecount analyzerportresults.minframelength
analyzerportresults.maxframelength analyzerportresults.pauseframecount
analyzerportresults.totalframerate analyzerportresults.totaloctetrate
analyzerportresults.sigframerate analyzerportresults.undersizeframerate
analyzerportresults.oversizeframerate analyzerportresults.jumboframerate
analyzerportresults.pauseframerate analyzerportresults.fcserrorframecount
analyzerportresults.ipv4checksumerrorcount
analyzerportresults.tcpchecksumerrorcount
analyzerportresults.udpchecksumerrorcount
analyzerportresults.prbsfilloctetcount analyzerportresults.prbsbiterrorcount
analyzerportresults.fcserrorframerate analyzerportresults.ipv4checksumerrorrate
analyzerportresults.tcpchecksumerrorrate
analyzerportresults.udpchecksumerrorrate analyzerportresults.prbsfilloctetrate
analyzerportresults.prbsbiterrorrate analyzerportresults.ipv4framecount
analyzerportresults.ipv6framecount analyzerportresults.ipv6overipv4framecount
analyzerportresults.tcpframecount analyzerportresults.udpframecount
analyzerportresults.mplsframecount analyzerportresults.icmpframecount
analyzerportresults.vlanframecount analyzerportresults.ipv4framerate
analyzerportresults.ipv6framerate analyzerportresults.ipv6overipv4framerate
analyzerportresults.tcpframerate analyzerportresults.udpframerate
analyzerportresults.mplsframerate analyzerportresults.icmpframerate
analyzerportresults.vlanframerate analyzerportresults.trigger1count
analyzerportresults.trigger1rate analyzerportresults.trigger2count
analyzerportresults.trigger2rate analyzerportresults.trigger3count
analyzerportresults.trigger3rate analyzerportresults.trigger4count
analyzerportresults.trigger4rate analyzerportresults.trigger5count
analyzerportresults.trigger5rate analyzerportresults.trigger6count
analyzerportresults.trigger6rate analyzerportresults.trigger7count
analyzerportresults.trigger7rate analyzerportresults.trigger8count
analyzerportresults.trigger8rate analyzerportresults.combotriggercount
analyzerportresults.combotriggerrate analyzerportresults.totalbitrate
analyzerportresults.prbsbiterrorratio analyzerportresults.vlanframerate
analyzerportresults.l1bitcount analyzerportresults.l1bitrate
analyzerportresults.pfcframecount analyzerportresults.fcoeframecount
analyzerportresults.pfcframerate analyzerportresults.fcoeframerate
analyzerportresults.pfcpri0framecount analyzerportresults.pfcpri1framecount
analyzerportresults.pfcpri2framecount analyzerportresults.pfcpri3framecount
analyzerportresults.pfcpri4framecount analyzerportresults.pfcpri5framecount
analyzerportresults.pfcpri6framecount analyzerportresults.pfcpri7framecount
analyzerportresults.pfcpri0quanta analyzerportresults.pfcpri1quanta
analyzerportresults.pfcpri2quanta analyzerportresults.pfcpri3quanta
analyzerportresults.pfcpri4quanta analyzerportresults.pfcpri5quanta
analyzerportresults.pfcpri6quanta analyzerportresults.pfcpri7quanta
analyzerportresults.prbserrorframecount analyzerportresults.prbserrorframerate
analyzerportresults.userdefinedframecount1
analyzerportresults.userdefinedframerate1
analyzerportresults.userdefinedframecount2
analyzerportresults.userdefinedframerate2
analyzerportresults.userdefinedframecount3
analyzerportresults.userdefinedframerate3
analyzerportresults.userdefinedframecount4
analyzerportresults.userdefinedframerate4
analyzerportresults.userdefinedframecount5
analyzerportresults.userdefinedframerate5
analyzerportresults.userdefinedframecount6
analyzerportresults.userdefinedframerate6 analyzerportresults.l1bitratepercent
analyzerportresults.outseqframecount analyzerportresults.preambletotalbytes
analyzerportresults.preambleminlength analyzerportresults.preamblemaxlength
analyzerportresults.droppedframecount analyzerportresults.inorderframecount
analyzerportresults.reorderedframecount analyzerportresults.duplicateframecount
analyzerportresults.lateframecount analyzerportresults.firstarrivaltime
analyzerportresults.lastarrivaltime"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 33">
      </ResultQuery>
      <RealTimeResultColumnDefinition id="128646" 
       ColumnClassName="Port"
       ColumnPropertyName="PortName"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 671">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128647" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="92"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 672">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128648" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="92"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 673">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128649" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalBitCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 674">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128650" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TotalBitCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 675">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128651" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalBitRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 676">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128652" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TotalBitRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="123"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 677">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128653" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="L1BitCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 678">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128654" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="L1BitCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 679">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128655" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="L1BitRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 680">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128656" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="L1BitRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 681">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128657" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="L1BitRatePercent"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="3"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 680">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128658" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="L1BitRatePercent"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="3"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 681">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128659" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="148"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 682">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128660" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorSigFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="167"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 683">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128661" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="SigFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="130"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 684">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128662" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="111"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 685">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128663" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TotalFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="111"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 686">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128664" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="120"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 687">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128665" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorOctetRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="123"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 688">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128666" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorBitRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="131"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 689">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128667" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorSigFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="139"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 690">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128668" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="SigFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="102"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 691">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128669" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="FcsErrorFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="197"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 692">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128670" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorCrcErrorFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="201"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 693">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128671" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorL3ChecksumErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="198"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 694">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128672" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorL4ChecksumErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="198"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 695">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128673" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv4ChecksumErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="171"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 696">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128674" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TcpChecksumErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="168"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 697">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128675" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UdpChecksumErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="170"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 698">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128676" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsFillOctetCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="148"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 699">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128677" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsBitErrorCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="137"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 700">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128678" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsBitErrorRatio"
       ColumnDescription="DescribeMe"
       ColumnWidth="117"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 701">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128679" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="FcsErrorFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="134"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 702">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128680" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorCrcErrorFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="172"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 703">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128681" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorL3ChecksumErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="230"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 704">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128682" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorL4ChecksumErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="230"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 705">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128683" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv4ChecksumErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="164"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 706">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128684" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TcpChecksumErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="162"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 707">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128685" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UdpChecksumErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="163"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 708">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128686" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsBitErrorRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="169"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 709">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128687" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger1Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 710">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128688" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger2Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 711">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128689" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger3Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 712">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128690" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger4Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 713">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128691" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger5Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 714">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128692" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger6Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 715">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128693" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger7Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 716">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128694" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger8Count"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 717">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128695" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="ComboTriggerCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="87"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 718">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128696" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger1Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 719">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128697" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger2Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 720">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128698" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger3Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 721">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128699" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger4Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 722">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128700" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger5Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 723">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128701" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger6Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 724">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128702" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger7Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 725">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128703" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Trigger8Rate"
       ColumnDescription="DescribeMe"
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 726">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128704" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="ComboTriggerRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="114"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 727">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128705" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalIpv4FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="86"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 728">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128706" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalIpv6FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="88"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 729">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128707" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalMplsFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="91"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 730">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128708" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorIpv4FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="129"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 731">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128709" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorIpv6FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="117"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 732">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128710" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorVlanFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="127"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 733">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128711" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorMplsFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="132"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 734">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128712" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv4FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="125"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 735">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128713" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv6FrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="124"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 736">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128714" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TcpFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="122"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 737">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128715" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UdpFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="120"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 738">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128716" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="MplsFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="127"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 739">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128717" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="IcmpFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="125"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 740">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128718" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="VlanFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="113"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 741">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128719" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="87"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 742">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128720" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="FcoeFrameCount"
       ColumnDescription="DescribeMe"
       ColumnWidth="96"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 743">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128721" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalIpv4FrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="99"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 744">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128722" 
       GroupName="All Groups"
       GroupId="core://allgroups/"
       ColumnClassName="Port"
       ColumnPropertyName="PortName"
       SqlString=""
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 37">
      </RealTimeResultGroupDefinition>
      <RealTimeResultColumnDefinition id="128723" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalIpv6FrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="101"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 38">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128724" 
       GroupName="Basic Counters"
       GroupId="object://customgroup/cded8621-5e71-4a39-afd4-71d9faf37273/Basic
Counters"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
GeneratorPortResults AnalyzerPortResults GeneratorPortResults
AnalyzerPortResults GeneratorPortResults AnalyzerPortResults
GeneratorPortResults AnalyzerPortResults GeneratorPortResults
AnalyzerPortResults GeneratorPortResults GeneratorPortResults
AnalyzerPortResults GeneratorPortResults AnalyzerPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount TotalFrameCount TotalBitCount
TotalBitCount TotalBitRate TotalBitRate L1BitCount L1BitCount L1BitRate
L1BitRate L1BitRatePercent L1BitRatePercent GeneratorFrameCount
GeneratorSigFrameCount SigFrameCount TotalFrameRate TotalFrameRate
GeneratorFrameRate GeneratorOctetRate GeneratorBitRate GeneratorSigFrameRate
SigFrameRate"
       SqlString=" SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Count (Frames)&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Count (Frames)&apos;,
GeneratorPortResults.GeneratorFrameCount AS &apos;Generator Count
(Frames)&apos;, GeneratorPortResults.GeneratorSigFrameCount AS &apos;Generator
Sig Count (Frames)&apos;, AnalyzerPortResults.SigFrameCount AS &apos;Rx Sig
Count (Frames)&apos;, (GeneratorPortResults.TotalOctetCount * 8) AS &apos;Total
Tx  Count (bits)&apos;, (AnalyzerPortResults.TotalOctetCount * 8) AS
&apos;Total Rx Count (bits)&apos;, GeneratorPortResults.L1BitCount AS &apos;Tx
L1 Count (bits)&apos;, AnalyzerPortResults.L1BitCount AS &apos;Rx L1 Count
(bits)&apos;, AnalyzerPortResults.MinFrameLength AS &apos;Rx Min
FrameLength&apos;, AnalyzerPortResults.MaxFrameLength AS &apos;Rx Max
FrameLength&apos;, GeneratorPortResults.TotalCellCount AS &apos;Total Tx Count
(Cells)&apos;, AnalyzerPortResults.TotalCellCount AS &apos;Total Rx Count
(Cells)&apos;, GeneratorPortResults.TxDuration AS &apos;Tx Duration (sec)&apos;
FROM Port, GeneratorPortResults, Generator, AnalyzerPortResults, Analyzer WHERE
( Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd = Port.Handle AND
GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND Generator.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND
Analyzer.DataSetId = @DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 39">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="128725" 
       GroupName="Errors"
       GroupId="object://customgroup/e26c15e5-fb73-46ad-a76b-45304a4e6303/Errors"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
AnalyzerPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount TotalFrameCount FcsErrorFrameCount
GeneratorCrcErrorFrameCount GeneratorL3ChecksumErrorCount
GeneratorL4ChecksumErrorCount Ipv4ChecksumErrorCount TcpChecksumErrorCount
UdpChecksumErrorCount PrbsFillOctetCount PrbsBitErrorCount PrbsBitErrorRatio
PrbsErrorFrameCount FcsErrorFrameRate GeneratorCrcErrorFrameRate
GeneratorL3ChecksumErrorRate GeneratorL4ChecksumErrorRate Ipv4ChecksumErrorRate
TcpChecksumErrorRate UdpChecksumErrorRate PrbsBitErrorRate PrbsErrorFrameRate
OutSeqFrameCount"
       SqlString=" SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Count (Frames)&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Count (Frames)&apos;,
AnalyzerPortResults.FcsErrorFrameCount AS &apos;Rx FCS Error Count
(Frames)&apos;, GeneratorPortResults.GeneratorCrcErrorFrameCount AS
&apos;Generator CRC Error Count (Frames)&apos;,
GeneratorPortResults.GeneratorL3ChecksumErrorCount AS &apos;Generator L3
Checksum Error Count&apos;, GeneratorPortResults.GeneratorL4ChecksumErrorCount
AS &apos;Generator L4 Checksum Error Count&apos;,
AnalyzerPortResults.Ipv4ChecksumErrorCount AS &apos;Rx IPv4 Checksum Error
Count&apos;, AnalyzerPortResults.TcpChecksumErrorCount AS &apos;Rx TCP Checksum
Error Count&apos;, AnalyzerPortResults.UdpChecksumErrorCount AS &apos;Rx UDP
Checksum Error Count&apos;, AnalyzerPortResults.PrbsFillOctetCount AS &apos;Rx
PRBS Fill Octet Count&apos;, AnalyzerPortResults.PrbsBitErrorCount AS &apos;Rx
PRBS Bit Error Count&apos;,
coalesce(round(cast(AnalyzerPortResults.PrbsBitErrorCount as
double)/cast((AnalyzerPortResults.PrbsFillOctetCount * 8) as double), 3), 0.0)
as &apos;PRBS Bit Error Ratio&apos;, AnalyzerPortResults.PrbsErrorFrameCount AS
&apos;Rx PRBS Error Frame Count&apos;, AnalyzerPortResults.OutSeqFrameCount AS
&apos;Rx Out of Sequence Frame Count&apos; FROM Port, GeneratorPortResults,
Generator, AnalyzerPortResults, Analyzer WHERE ( Generator.ParentHnd =
Port.Handle AND Analyzer.ParentHnd = Port.Handle AND
GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND Generator.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND
Analyzer.DataSetId = @DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 39">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="128726" 
       GroupName="Triggers"
       GroupId="object://customgroup/ddcfebff-9e2d-49e4-8d4a-1cde4792f3c1/Triggers"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount TotalFrameCount Trigger1Count
Trigger2Count Trigger3Count Trigger4Count Trigger5Count Trigger6Count
Trigger7Count Trigger8Count ComboTriggerCount Trigger1Rate Trigger2Rate
Trigger3Rate Trigger4Rate Trigger5Rate Trigger6Rate Trigger7Rate Trigger8Rate
ComboTriggerRate"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Count (Frames)&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Count (Frames)&apos;,
AnalyzerPortResults.Trigger1Count AS &apos;Trigger 1&apos;,
AnalyzerPortResults.Trigger2Count AS &apos;Trigger 2&apos;,
AnalyzerPortResults.Trigger3Count AS &apos;Trigger 3&apos;,
AnalyzerPortResults.Trigger4Count AS &apos;Trigger 4&apos;,
AnalyzerPortResults.Trigger5Count AS &apos;Trigger 5&apos;,
AnalyzerPortResults.Trigger6Count AS &apos;Trigger 6&apos;,
AnalyzerPortResults.Trigger7Count AS &apos;Trigger 7&apos;,
AnalyzerPortResults.Trigger8Count AS &apos;Trigger 8&apos;,
AnalyzerPortResults.ComboTriggerCount AS &apos;ComboTrigger&apos;,
AnalyzerPortResults.Trigger1Rate AS &apos;Trigger 1 Rate&apos;,
AnalyzerPortResults.Trigger2Rate AS &apos;Trigger 2 Rate&apos;,
AnalyzerPortResults.Trigger3Rate AS &apos;Trigger 3 Rate&apos;,
AnalyzerPortResults.Trigger4Rate AS &apos;Trigger 4 Rate&apos;,
AnalyzerPortResults.Trigger5Rate AS &apos;Trigger 5 Rate&apos;,
AnalyzerPortResults.Trigger6Rate AS &apos;Trigger 6 Rate&apos;,
AnalyzerPortResults.Trigger7Rate AS &apos;Trigger 7 Rate&apos;,
AnalyzerPortResults.Trigger8Rate AS &apos;Trigger 8 Rate&apos;,
AnalyzerPortResults.ComboTriggerRate AS &apos;ComboTrigger Rate&apos; FROM
Port, GeneratorPortResults, AnalyzerPortResults, Generator, Analyzer WHERE (
Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd = Port.Handle AND
GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND
AnalyzerPortResults.DataSetId = @DataSetId AND Generator.DataSetId = @DataSetId
AND Analyzer.DataSetId = @DataSetId  ) UNION SELECT ExternalDevicePort.Name AS
&apos;Port Name&apos;, GeneratorPortResults.TotalFrameCount AS &apos;Total Tx
Count (Frames)&apos;, AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx
Count (Frames)&apos;, AnalyzerPortResults.Trigger1Count AS &apos;Trigger
1&apos;, AnalyzerPortResults.Trigger2Count AS &apos;Trigger 2&apos;,
AnalyzerPortResults.Trigger3Count AS &apos;Trigger 3&apos;,
AnalyzerPortResults.Trigger4Count AS &apos;Trigger 4&apos;,
AnalyzerPortResults.Trigger5Count AS &apos;Trigger 5&apos;,
AnalyzerPortResults.Trigger6Count AS &apos;Trigger 6&apos;,
AnalyzerPortResults.Trigger7Count AS &apos;Trigger 7&apos;,
AnalyzerPortResults.Trigger8Count AS &apos;Trigger 8&apos;,
AnalyzerPortResults.ComboTriggerCount AS &apos;ComboTrigger&apos;,
AnalyzerPortResults.Trigger1Rate AS &apos;Trigger 1 Rate&apos;,
AnalyzerPortResults.Trigger2Rate AS &apos;Trigger 2 Rate&apos;,
AnalyzerPortResults.Trigger3Rate AS &apos;Trigger 3 Rate&apos;,
AnalyzerPortResults.Trigger4Rate AS &apos;Trigger 4 Rate&apos;,
AnalyzerPortResults.Trigger5Rate AS &apos;Trigger 5 Rate&apos;,
AnalyzerPortResults.Trigger6Rate AS &apos;Trigger 6 Rate&apos;,
AnalyzerPortResults.Trigger7Rate AS &apos;Trigger 7 Rate&apos;,
AnalyzerPortResults.Trigger8Rate AS &apos;Trigger 8 Rate&apos;,
AnalyzerPortResults.ComboTriggerRate AS &apos;ComboTrigger Rate&apos; FROM
ExternalDevicePort, GeneratorPortResults, AnalyzerPortResults, Port, Generator,
Analyzer WHERE ( Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd =
Port.Handle AND GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND
ExternalDevicePort.DataSetId = @DataSetId AND GeneratorPortResults.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND Port.DataSetId =
@DataSetId AND Generator.DataSetId = @DataSetId AND Analyzer.DataSetId =
@DataSetId  ) "
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 40">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="128727" 
       GroupName="Protocols"
       GroupId="object://customgroup/3e090a0e-d3c7-413f-ad01-ccb4a21de519/Protocols"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount TotalFrameCount TotalIpv4FrameCount
TotalIpv6FrameCount TotalMplsFrameCount GeneratorIpv4FrameCount
GeneratorIpv6FrameCount GeneratorVlanFrameCount GeneratorMplsFrameCount
Ipv4FrameCount Ipv6FrameCount TcpFrameCount UdpFrameCount MplsFrameCount
IcmpFrameCount VlanFrameCount FcoeFrameCount TotalIpv4FrameRate
TotalIpv6FrameRate TotalMplsFrameRate GeneratorIpv4FrameRate
GeneratorIpv6FrameRate GeneratorVlanFrameRate GeneratorMplsFrameRate
Ipv4FrameRate Ipv6FrameRate TcpFrameRate UdpFrameRate MplsFrameRate
IcmpFrameRate VlanFrameRate FcoeFrameRate"
       SqlString=" SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Frame Count&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Frame Count&apos;,
GeneratorPortResults.TotalIpv4FrameCount AS &apos;Total Tx IPv4 Frame&apos;,
GeneratorPortResults.TotalIpv6FrameCount AS &apos;Total Tx IPv6 Frame&apos;,
GeneratorPortResults.TotalMplsFrameCount AS &apos;Total Tx MPLS Frame&apos;,
GeneratorPortResults.GeneratorIpv4FrameCount AS &apos;Generator IPv4 Frame
Count&apos;, GeneratorPortResults.GeneratorIpv6FrameCount AS &apos;Generator
IPv6 Frame Count&apos;, GeneratorPortResults.GeneratorVlanFrameCount AS
&apos;Generator VLAN Frame Count&apos;,
GeneratorPortResults.GeneratorMplsFrameCount AS &apos;Generator MPLS Frame
Count&apos;, AnalyzerPortResults.Ipv4FrameCount AS &apos;Rx IPv4 Frame
Count&apos;, AnalyzerPortResults.Ipv6FrameCount AS &apos;Rx IPv6 Frame
Count&apos;, AnalyzerPortResults.TcpFrameCount AS &apos;Rx TCP Frame
Count&apos;, AnalyzerPortResults.UdpFrameCount AS &apos;Rx UDP Frame
Count&apos;, AnalyzerPortResults.MplsFrameCount AS &apos;Rx MPLS Frame
Count&apos;, AnalyzerPortResults.IcmpFrameCount AS &apos;Rx ICMP Frame
Count&apos;, AnalyzerPortResults.VlanFrameCount AS &apos;Rx VLAN Frame
Count&apos;, AnalyzerPortResults.FcoeFrameCount AS &apos;Rx FCoE Frame
Count&apos; FROM Port, GeneratorPortResults, Generator, AnalyzerPortResults,
Analyzer WHERE ( Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd =
Port.Handle AND GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND Generator.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND
Analyzer.DataSetId = @DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 41">
      </RealTimeResultGroupDefinition>
      <RealTimeResultColumnDefinition id="128728" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="TotalMplsFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="90"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 88">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128729" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorIpv4FrameRate"
       ColumnDescription=""
       ColumnWidth="115"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 89">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128730" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorIpv6FrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="117"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 90">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128731" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorVlanFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="127"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 91">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128732" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorMplsFrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="125"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 92">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128733" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv4FrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="114"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 93">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128734" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="Ipv6FrameRate"
       ColumnDescription="DescribeMe"
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 94">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128735" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="TcpFrameRate"
       ColumnDescription=""
       ColumnWidth="77"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 95">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128736" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UdpFrameRate"
       ColumnDescription=""
       ColumnWidth="84"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 96">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128737" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="MplsFrameRate"
       ColumnDescription=""
       ColumnWidth="86"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 97">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128738" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="IcmpFrameRate"
       ColumnDescription=""
       ColumnWidth="79"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 98">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128739" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="VlanFrameRate"
       ColumnDescription=""
       ColumnWidth="113"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 99">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128740" 
       GroupName="Undersize/Oversize/Jumbo"
       GroupId="object://customgroup/06ce5837-a7ee-427b-96e8-10cca3ff961a/Undersize/Oversize/Jumbo"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
GeneratorPortResults AnalyzerPortResults GeneratorPortResults
AnalyzerPortResults GeneratorPortResults AnalyzerPortResults
AnalyzerPortResults GeneratorPortResults AnalyzerPortResults
GeneratorPortResults AnalyzerPortResults GeneratorPortResults
AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="TotalFrameCount TotalFrameCount
GeneratorUndersizeFrameCount UndersizeFrameCount GeneratorOversizeFrameCount
OversizeFrameCount GeneratorJumboFrameCount JumboFrameCount PauseFrameCount
GeneratorUndersizeFrameRate UndersizeFrameRate GeneratorOversizeFrameRate
OversizeFrameRate GeneratorJumboFrameRate JumboFrameRate PauseFrameRate"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Count (Frames)&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Count (Frames)&apos;,
GeneratorPortResults.GeneratorUndersizeFrameCount AS &apos;Generator Undersize
Count (Frames)&apos;, AnalyzerPortResults.UndersizeFrameCount AS &apos;Rx
Undersize Frame Count (Frames)&apos;,
GeneratorPortResults.GeneratorOversizeFrameCount AS &apos;Generator Oversize
Count (Frames)&apos;, AnalyzerPortResults.OversizeFrameCount AS &apos;Rx
Oversize Frame Count (Frames)&apos;,
GeneratorPortResults.GeneratorJumboFrameCount AS &apos;Generator Jumbo Count
(Frames)&apos;, AnalyzerPortResults.JumboFrameCount AS &apos;Rx Jumbo Frame
Count (Frames)&apos;, AnalyzerPortResults.PauseFrameCount AS &apos;Rx Pause
Frame Count (Frames)&apos;, GeneratorPortResults.GeneratorUndersizeFrameRate AS
&apos;Generator Undersize Rate (fps)&apos;,
AnalyzerPortResults.UndersizeFrameRate AS &apos;Rx Undersize Rate (fps)&apos;,
GeneratorPortResults.GeneratorOversizeFrameRate AS &apos;Generator Oversize
Rate (fps)&apos;, AnalyzerPortResults.OversizeFrameRate AS &apos;Rx Oversize
Rate (fps)&apos;, GeneratorPortResults.GeneratorJumboFrameRate AS
&apos;Generator Jumbo Frame Rate (fps)&apos;,
AnalyzerPortResults.JumboFrameRate AS &apos;Rx Jumbo Rate (fps)&apos;,
AnalyzerPortResults.PauseFrameRate AS &apos;Rx Pause Rate (fps)&apos; FROM
Port, GeneratorPortResults, AnalyzerPortResults, Generator, Analyzer WHERE (
Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd = Port.Handle AND
GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND
AnalyzerPortResults.DataSetId = @DataSetId AND Generator.DataSetId = @DataSetId
AND Analyzer.DataSetId = @DataSetId  ) UNION SELECT ExternalDevicePort.Name AS
&apos;Port Name&apos;, GeneratorPortResults.TotalFrameCount AS &apos;Total Tx
Count (Frames)&apos;, AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx
Count (Frames)&apos;, GeneratorPortResults.GeneratorUndersizeFrameCount AS
&apos;Generator Undersize Count (Frames)&apos;,
AnalyzerPortResults.UndersizeFrameCount AS &apos;Rx Undersize Frame Count
(Frames)&apos;, GeneratorPortResults.GeneratorOversizeFrameCount AS
&apos;Generator Oversize Count (Frames)&apos;,
AnalyzerPortResults.OversizeFrameCount AS &apos;Rx Oversize Frame Count
(Frames)&apos;, GeneratorPortResults.GeneratorJumboFrameCount AS
&apos;Generator Jumbo Count (Frames)&apos;, AnalyzerPortResults.JumboFrameCount
AS &apos;Rx Jumbo Frame Count (Frames)&apos;,
AnalyzerPortResults.PauseFrameCount AS &apos;Rx Pause Frame Count
(Frames)&apos;, GeneratorPortResults.GeneratorUndersizeFrameRate AS
&apos;Generator Undersize Rate (fps)&apos;,
AnalyzerPortResults.UndersizeFrameRate AS &apos;Rx Undersize Rate (fps)&apos;,
GeneratorPortResults.GeneratorOversizeFrameRate AS &apos;Generator Oversize
Rate (fps)&apos;, AnalyzerPortResults.OversizeFrameRate AS &apos;Rx Oversize
Rate (fps)&apos;, GeneratorPortResults.GeneratorJumboFrameRate AS
&apos;Generator Jumbo Frame Rate (fps)&apos;,
AnalyzerPortResults.JumboFrameRate AS &apos;Rx Jumbo Rate (fps)&apos;,
AnalyzerPortResults.PauseFrameRate AS &apos;Rx Pause Rate (fps)&apos; FROM
ExternalDevicePort, GeneratorPortResults, AnalyzerPortResults, Port, Generator,
Analyzer WHERE ( Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd =
Port.Handle AND GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND
ExternalDevicePort.DataSetId = @DataSetId AND GeneratorPortResults.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND Port.DataSetId =
@DataSetId AND Generator.DataSetId = @DataSetId AND Analyzer.DataSetId =
@DataSetId  ) "
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 8">
      </RealTimeResultGroupDefinition>
      <RealTimeResultColumnDefinition id="128741" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcFrameRate"
       ColumnDescription=""
       ColumnWidth="93"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 100">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128742" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="FcoeFrameRate"
       ColumnDescription=""
       ColumnWidth="93"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 101">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128743" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorUndersizeFrameCount"
       ColumnDescription=""
       ColumnWidth="200"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 102">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128744" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UndersizeFrameCount"
       ColumnDescription=""
       ColumnWidth="198"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 103">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128745" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorOversizeFrameCount"
       ColumnDescription=""
       ColumnWidth="194"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 104">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128746" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="OversizeFrameCount"
       ColumnDescription=""
       ColumnWidth="192"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 613">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128747" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorJumboFrameCount"
       ColumnDescription=""
       ColumnWidth="185"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 614">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128748" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="JumboFrameCount"
       ColumnDescription=""
       ColumnWidth="182"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 615">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128749" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PauseFrameCount"
       ColumnDescription=""
       ColumnWidth="179"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 616">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128750" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorUndersizeFrameRate"
       ColumnDescription=""
       ColumnWidth="172"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 617">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128751" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UndersizeFrameRate"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 618">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128752" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorOversizeFrameRate"
       ColumnDescription=""
       ColumnWidth="166"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 619">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128753" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="OversizeFrameRate"
       ColumnDescription=""
       ColumnWidth="129"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 127">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128754" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="GeneratorJumboFrameRate"
       ColumnDescription=""
       ColumnWidth="191"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 128">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128755" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="JumboFrameRate"
       ColumnDescription=""
       ColumnWidth="119"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 129">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128756" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PauseFrameRate"
       ColumnDescription=""
       ColumnWidth="89"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 130">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128757" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcFrameCount"
       ColumnDescription=""
       ColumnWidth="96"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 131">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128758" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri0FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 132">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128759" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri1FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 133">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128760" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri2FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 134">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128761" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri3FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 135">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128762" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri4FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 136">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128763" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri5FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 137">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128764" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri6FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 138">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128765" 
       ColumnClassName="GeneratorPortResults"
       ColumnPropertyName="PfcPri7FrameCount"
       ColumnDescription=""
       ColumnWidth="108"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 139">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128766" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri0FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 140">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128767" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri1FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 141">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128768" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri2FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 142">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128769" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri3FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 143">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128770" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri4FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 144">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128771" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri5FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 145">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128772" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri6FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 146">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128773" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PfcPri7FrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128774" 
       GroupName="PFC Counters"
       GroupId="object://customgroup/ce2848b9-5f04-419d-8809-030032c630e4/PFC
Counters"
       ColumnClassName="GeneratorPortResults AnalyzerPortResults
AnalyzerPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
GeneratorPortResults GeneratorPortResults GeneratorPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="PfcFrameCount PfcFrameCount PfcFrameRate
PfcPri0FrameCount PfcPri1FrameCount PfcPri2FrameCount PfcPri3FrameCount
PfcPri4FrameCount PfcPri5FrameCount PfcPri6FrameCount PfcPri7FrameCount
PfcPri0FrameCount PfcPri1FrameCount PfcPri2FrameCount PfcPri3FrameCount
PfcPri4FrameCount PfcPri5FrameCount PfcPri6FrameCount PfcPri7FrameCount"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.PfcFrameCount AS &apos;Tx PFC Count (Frames)&apos;,
AnalyzerPortResults.PfcFrameCount AS &apos;Rx PFC Count (Frames)&apos;,
GeneratorPortResults.PfcPri0FrameCount AS &apos;Tx PFC Priority0 Count
(Frames)&apos;, GeneratorPortResults.PfcPri1FrameCount AS &apos;Tx PFC
Priority1 Count (Frames)&apos;, GeneratorPortResults.PfcPri2FrameCount AS
&apos;Tx PFC Priority2 Count (Frames)&apos;,
GeneratorPortResults.PfcPri3FrameCount AS &apos;Tx PFC Priority3 Count
(Frames)&apos;, GeneratorPortResults.PfcPri4FrameCount AS &apos;Tx PFC
Priority4 Count (Frames)&apos;, GeneratorPortResults.PfcPri5FrameCount AS
&apos;Tx PFC Priority5 Count (Frames)&apos;,
GeneratorPortResults.PfcPri6FrameCount AS &apos;Tx PFC Priority6 Count
(Frames)&apos;, GeneratorPortResults.PfcPri7FrameCount AS &apos;Tx PFC
Priority7 Count (Frames)&apos;, AnalyzerPortResults.PfcPri0FrameCount AS
&apos;Rx PFC Priority0 Count (Frames)&apos;,
AnalyzerPortResults.PfcPri1FrameCount AS &apos;Rx PFC Priority1 Count
(Frames)&apos;, AnalyzerPortResults.PfcPri2FrameCount AS &apos;Rx PFC Priority2
Count (Frames)&apos;, AnalyzerPortResults.PfcPri3FrameCount AS &apos;Rx PFC
Priority3 Count (Frames)&apos;, AnalyzerPortResults.PfcPri4FrameCount AS
&apos;Rx PFC Priority4 Count (Frames)&apos;,
AnalyzerPortResults.PfcPri5FrameCount AS &apos;Rx PFC Priority5 Count
(Frames)&apos;, AnalyzerPortResults.PfcPri6FrameCount AS &apos;Rx PFC Priority6
Count (Frames)&apos;, AnalyzerPortResults.PfcPri7FrameCount AS &apos;Rx PFC
Priority7 Count (Frames)&apos;, AnalyzerPortResults.PfcPri0Quanta AS &apos;Rx
PFC Priority0 Quanta&apos;, AnalyzerPortResults.PfcPri1Quanta AS &apos;Rx PFC
Priority1 Quanta&apos;, AnalyzerPortResults.PfcPri2Quanta AS &apos;Rx PFC
Priority2 Quanta&apos;, AnalyzerPortResults.PfcPri3Quanta AS &apos;Rx PFC
Priority3 Quanta&apos;, AnalyzerPortResults.PfcPri4Quanta AS &apos;Rx PFC
Priority4 Quanta&apos;, AnalyzerPortResults.PfcPri5Quanta AS &apos;Rx PFC
Priority5 Quanta&apos;, AnalyzerPortResults.PfcPri6Quanta AS &apos;Rx PFC
Priority6 Quanta&apos;, AnalyzerPortResults.PfcPri7Quanta AS &apos;Rx PFC
Priority7 Quanta&apos; FROM Port, GeneratorPortResults, AnalyzerPortResults,
Generator, Analyzer WHERE ( Generator.ParentHnd = Port.Handle AND
Analyzer.ParentHnd = Port.Handle AND GeneratorPortResults.ParentHnd =
Generator.Handle AND AnalyzerPortResults.ParentHnd = Analyzer.Handle AND
Port.DataSetId = @DataSetId AND GeneratorPortResults.DataSetId = @DataSetId AND
AnalyzerPortResults.DataSetId = @DataSetId AND Generator.DataSetId = @DataSetId
AND Analyzer.DataSetId = @DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 9">
      </RealTimeResultGroupDefinition>
      <RealTimeResultColumnDefinition id="128775" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsErrorFrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128776" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="OutSeqFrameCount"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128777" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="PrbsErrorFrameRate"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128778" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount1"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128779" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate1"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128780" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount2"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128781" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate2"
       ColumnDescription=""
       ColumnWidth="109"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128782" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount3"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128783" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate3"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128784" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount4"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128785" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate4"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128786" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount5"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128787" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate5"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128788" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount6"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128789" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameRate6"
       ColumnDescription=""
       ColumnWidth="135"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 147">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128790" 
       GroupName="User Defined"
       GroupId="object://customgroup/45684926-5012-4d7b-a560-70e552840cbb/User
Defined"
       ColumnClassName="AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="UserDefinedFrameCount1 UserDefinedFrameRate1
UserDefinedFrameCount2 UserDefinedFrameRate2 UserDefinedFrameCount3
UserDefinedFrameRate3 UserDefinedFrameCount4 UserDefinedFrameRate4
UserDefinedFrameCount5 UserDefinedFrameRate5 UserDefinedFrameCount6
UserDefinedFrameRate6"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
GeneratorPortResults.TotalFrameCount AS &apos;Total Tx Count (Frames)&apos;,
AnalyzerPortResults.TotalFrameCount AS &apos;Total Rx Count (Frames)&apos;,
AnalyzerPortResults.UserDefinedFrameCount1 AS &apos;User Defined Capture Frame
Count 1 (Frames)&apos;, AnalyzerPortResults.UserDefinedFrameCount2 AS
&apos;User Defined Capture Frame Count 2 (Frames)&apos;,
AnalyzerPortResults.UserDefinedFrameCount3 AS &apos;User Defined Capture Frame
Count 3 (Frames)&apos;, AnalyzerPortResults.UserDefinedFrameCount4 AS
&apos;User Defined Capture Frame Count 4 (Frames)&apos;,
AnalyzerPortResults.UserDefinedFrameCount5 AS &apos;User Defined Capture Frame
Count 5 (Frames)&apos;, AnalyzerPortResults.UserDefinedFrameCount6 AS
&apos;User Defined Capture Frame Count 6 (Frames)&apos;  FROM Port,
GeneratorPortResults, Generator, AnalyzerPortResults, Analyzer WHERE (
Generator.ParentHnd = Port.Handle AND Analyzer.ParentHnd = Port.Handle AND
GeneratorPortResults.ParentHnd = Generator.Handle AND
AnalyzerPortResults.ParentHnd = Analyzer.Handle AND Port.DataSetId = @DataSetId
AND GeneratorPortResults.DataSetId = @DataSetId AND Generator.DataSetId =
@DataSetId AND AnalyzerPortResults.DataSetId = @DataSetId AND
Analyzer.DataSetId = @DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 14">
      </RealTimeResultGroupDefinition>
      <RealTimeResultColumnDefinition id="128791" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="InOrderFrameCount"
       ColumnDescription=""
       ColumnWidth="0"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 140">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128792" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="ReorderedFrameCount"
       ColumnDescription=""
       ColumnWidth="0"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 141">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128793" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="DroppedFrameCount"
       ColumnDescription=""
       ColumnWidth="0"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 139">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128794" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="DuplicateFrameCount"
       ColumnDescription=""
       ColumnWidth="0"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 142">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="128795" 
       ColumnClassName="AnalyzerPortResults"
       ColumnPropertyName="LateFrameCount"
       ColumnDescription=""
       ColumnWidth="0"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 143">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="128796" 
       GroupName="Advanced Sequencing"
       GroupId="object://customgroup/d775c482-4220-4044-b3d8-d0980146f9dc/Advanced
Sequencing"
       ColumnClassName="AnalyzerPortResults AnalyzerPortResults
AnalyzerPortResults AnalyzerPortResults AnalyzerPortResults"
       ColumnPropertyName="DroppedFrameCount InOrderFrameCount
ReorderedFrameCount DuplicateFrameCount LateFrameCount"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
AnalyzerPortResults.DroppedFrameCount AS &apos;Dropped Count (Frames)&apos;,
AnalyzerPortResults.InOrderFrameCount AS &apos;In-order Count (Frames)&apos;,
AnalyzerPortResults.ReorderedFrameCount AS &apos;Reordered Count
(Frames)&apos;, AnalyzerPortResults.DuplicateFrameCount AS &apos;Duplicate
Count (Frames)&apos;, AnalyzerPortResults.LateFrameCount AS &apos;Late Count
(Frames)&apos; FROM Port, AnalyzerPortResults, Analyzer WHERE (
Analyzer.ParentHnd = Port.Handle AND AnalyzerPortResults.ParentHnd =
Analyzer.Handle AND Port.DataSetId = @DataSetId AND
AnalyzerPortResults.DataSetId = @DataSetId AND Analyzer.DataSetId = @DataSetId 
) UNION SELECT ExternalDevicePort.Name AS &apos;Port Name&apos;,
AnalyzerPortResults.DroppedFrameCount AS &apos;Dropped Count (Frames)&apos;,
AnalyzerPortResults.InOrderFrameCount AS &apos;In-order Count (Frames)&apos;,
AnalyzerPortResults.ReorderedFrameCount AS &apos;Reordered Count
(Frames)&apos;, AnalyzerPortResults.DuplicateFrameCount AS &apos;Duplicate
Count (Frames)&apos;, AnalyzerPortResults.LateFrameCount AS &apos;Late Count
(Frames)&apos; FROM ExternalDevicePort, AnalyzerPortResults, Port, Analyzer
WHERE ( Analyzer.ParentHnd = Port.Handle AND AnalyzerPortResults.ParentHnd =
Analyzer.Handle AND ExternalDevicePort.DataSetId = @DataSetId AND
AnalyzerPortResults.DataSetId = @DataSetId AND Port.DataSetId = @DataSetId AND
Analyzer.DataSetId = @DataSetId  ) "
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 9">
      </RealTimeResultGroupDefinition>
    </ResultDataSet>
    <Perspective id="128797" 
     PerspectiveViewOwner="USER"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Perspective 1">
      <PerspectiveNode id="128798" 
       Guid="8CF0ABC3-9F7C-46bd-A22E-00D88A8376D3"
       Data="&lt;NodeData Name=&quot;resultFrame.1&quot;
FrameId=&quot;8CF0ABC3-9F7C-46bd-A22E-00D88A8376D3&quot;
Active=&quot;false&quot; RowCount=&quot;1&quot; ColumnCount=&quot;2&quot; /&gt;"
       ContentData="&lt;ContentData&gt;&lt;NodeContentData
FrameName=&quot;frame://core/Port/ResultQuery:(1, 0, 0)&quot;
ResultDataSetId=&quot;Port Traffic\Basic Traffic Results&quot;
Column=&quot;0&quot; Row=&quot;0&quot; DockPanelNumber=&quot;1&quot;
/&gt;&lt;NodeContentData
FrameName=&quot;frame://core/DynamicResultView/ResultQuery:(1, 0, 1)&quot;
ResultDataSetId=&quot;Port Traffic and Counters\Aggregate Port L1 Tx Rate&quot;
Column=&quot;1&quot; Row=&quot;0&quot; DockPanelNumber=&quot;1&quot;
/&gt;&lt;/ContentData&gt; &#xD;&#xA;"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PerspectiveNode 19">
        <Relation type="PerspectiveChild" target="128643"/>
        <Relation type="PerspectiveChild" target="128800"/>
      </PerspectiveNode>
      <PerspectiveNode id="128799" 
       Guid="1F412EE6-760C-4937-9644-ACFA463EA44E"
       Data="&lt;NodeData Name=&quot;resultFrame.2&quot;
FrameId=&quot;1F412EE6-760C-4937-9644-ACFA463EA44E&quot;
Active=&quot;false&quot; RowCount=&quot;1&quot; ColumnCount=&quot;2&quot; /&gt;"
       ContentData="&lt;ContentData /&gt; &#xD;&#xA;"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PerspectiveNode 20">
        <Relation type="PerspectiveChild" target="128643"/>
        <Relation type="PerspectiveChild" target="128800"/>
      </PerspectiveNode>
    </Perspective>
    <DynamicResultView id="128800" 
     ResultSourceClass="Port"
     SaveToConfig="TRUE"
     Identifier="Port Traffic and Counters\Aggregate Port L1 Tx Rate"
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path="Port Traffic"
     ResultViewOwner="SYSTEM"
     Description="object://core/DynamicResultView"
     CustomDisplayName=""
     CustomDisplayPath="Port Traffic and Counters"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Aggregate Port L1 Tx Rate">
      <PresentationResultQuery id="128801" 
       SelectProperties="Port.TxL1BitRate Port.TxMaxLineRate Project.Name"
       FromObjects="2"
       WhereConditions=""
       GroupByProperties="Project.Name"
       LimitOffset="0"
       LimitSize="2000"
       SortBy=""
       ArchivingOption="NONE"
       ArchivingInterval="10"
       DatabaseFileName=""
       DisableAutoGrouping="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PresentationResultQuery 1">
      </PresentationResultQuery>
      <ColumnDisplayProperties id="128802" 
       ColumnPropertyId="Port.TxL1BitRate"
       ColumnCaption="Tx L1 Rate"
       ColumnWidth="0"
       ColumnUnits="5"
       ColumnPrecision="255"
       ColumnGroups=""
       ColumnSortIndex="0"
       Active="TRUE"
       LocalActive="TRUE"
       Name="ColumnDisplayProperties 1">
      </ColumnDisplayProperties>
      <ColumnDisplayProperties id="128803" 
       ColumnPropertyId="Port.TxMaxLineRate"
       ColumnCaption="Tx Max Line Rate"
       ColumnWidth="0"
       ColumnUnits="5"
       ColumnPrecision="255"
       ColumnGroups=""
       ColumnSortIndex="0"
       Active="TRUE"
       LocalActive="TRUE"
       Name="ColumnDisplayProperties 2">
      </ColumnDisplayProperties>
      <ColumnDisplayProperties id="128804" 
       ColumnPropertyId="Project.Name"
       ColumnCaption="Project Name"
       ColumnWidth="0"
       ColumnUnits="5"
       ColumnPrecision="255"
       ColumnGroups=""
       ColumnSortIndex="0"
       Active="TRUE"
       LocalActive="TRUE"
       Name="ColumnDisplayProperties 3">
      </ColumnDisplayProperties>
    </DynamicResultView>
    <ExposedConfig id="128805" 
     Active="TRUE"
     LocalActive="TRUE"
     Name="ExposedConfig 1">
    </ExposedConfig>
    <Port id="128806" 
     Location="//10.14.16.27/7/9"
     UseDefaultHost="TRUE"
     AppendLocationToPortName="TRUE"
     Layer3Type="IPV4"
     PortGroupSize="2"
     TestModuleProfile="Default"
     Active="TRUE"
     LocalActive="TRUE"
     Name="TxLoad Port Group: PRI 0-6 0 //7/9 (offline)">
      <Relation type="UserTag" target="128382"/>
      <Relation type="ActivePhy" target="128853"/>
      <Host id="128807" 
       DeviceCount="1"
       EnablePingResponse="FALSE"
       RouterId="192.0.0.1"
       RouterIdStep="0.0.0.1"
       Ipv6RouterId="2000::1"
       Ipv6RouterIdStep="::1"
       ReadOnly="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Host">
        <Relation type="TopLevelIf" target="128812"/>
        <Relation type="TopLevelIf" target="128813"/>
        <Relation type="TopLevelIf" target="128814"/>
        <EthIIIf id="128808" 
         SourceMac="00:10:94:00:00:02"
         SrcMacStep="00:00:00:00:00:01"
         SrcMacList=""
         SrcMacStepMask="00:00:ff:ff:ff:ff"
         SrcMacRepeatCount="0"
         Authenticator="default"
         UseDefaultPhyMac="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="EthernetII 1">
        </EthIIIf>
        <HdlcIf id="128809" 
         ProtocolType="HDLC_PROTOCOL_TYPE_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="HDLC 1">
        </HdlcIf>
        <PppIf id="128810" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 1">
        </PppIf>
        <PppIf id="128811" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 2">
        </PppIf>
        <Ipv4If id="128812" 
         Address="192.85.1.3"
         AddrStep="0.0.0.1"
         AddrStepMask="255.255.255.255"
         SkipReserved="TRUE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         PrefixLength="24"
         UsePortDefaultIpv4Gateway="FALSE"
         Gateway="192.85.1.1"
         GatewayStep="0.0.0.0"
         GatewayRepeatCount="0"
         GatewayRecycleCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         Ttl="255"
         TosType="TOS"
         Tos="192"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv4 1">
          <Relation type="StackedOnEndpoint" target="128808"/>
        </Ipv4If>
        <Ipv6If id="128813" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 1">
          <Relation type="StackedOnEndpoint" target="128808"/>
        </Ipv6If>
        <Ipv6If id="128814" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 2">
          <Relation type="StackedOnEndpoint" target="128808"/>
        </Ipv6If>
      </Host>
      <Generator id="128815" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Generator 1">
        <Relation type="ResultChild" target="129649"/>
        <Relation type="ResultChild" target="136524"/>
        <GeneratorConfig id="128816" 
         SchedulingMode="RATE_BASED"
         AdvancedInterleaving="FALSE"
         Duration="30"
         DurationMode="CONTINUOUS"
         StepSize="1"
         TimestampLatchMode="START_OF_FRAME"
         RandomLengthSeed="10900842"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         BurstSize="1"
         LoadUnit="PERCENT_LINE_RATE"
         LoadMode="FIXED"
         FixedLoad="10"
         RandomMaxLoad="100"
         RandomMinLoad="10"
         InterFrameGap="12"
         InterFrameGapUnit="BYTES"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Generator Configuration 1">
        </GeneratorConfig>
      </Generator>
      <Analyzer id="128817" 
       FilterOnStreamId="TRUE"
       FilterOnInnerIP="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Analyzer 1">
        <Relation type="ResultChild" target="129652"/>
        <AnalyzerConfig id="128818" 
         TimestampLatchMode="START_OF_FRAME"
         SigMode="ENHANCED_DETECTION"
         HistogramMode="LATENCY"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         AdvSeqCheckerLateThreshold="1000"
         VlanAlternateTpid="34984"
         AlternateSigOffset="0"
         LatencyMode="PER_STREAM_RX_LATENCY_ON"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Advanced Analyzer Settings 1">
          <Relation type="ActiveHistogram" target="128820"/>
          <InterarrivalTimeHistogram id="128819" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </InterarrivalTimeHistogram>
          <LatencyHistogram id="128820" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </LatencyHistogram>
          <FrameLengthHistogram id="128821" 
           Description="(in bytes)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </FrameLengthHistogram>
          <SeqRunLengthHistogram id="128822" 
           Description="(in frames)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </SeqRunLengthHistogram>
          <SeqDiffCheckHistogram id="128823" 
           Description="(in deltas)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </SeqDiffCheckHistogram>
          <JitterHistogram id="128824" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </JitterHistogram>
        </AnalyzerConfig>
        <DiffServConfig id="128825" 
         QualifyIpv6DstAddr="FALSE"
         Ipv6DstAddr="ffff::ffff"
         QualifyIpv4DstAddr="FALSE"
         Ipv4DstAddr="0.0.0.0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="QoS Settings 1">
        </DiffServConfig>
        <HighResolutionSamplingPortConfig id="128826" 
         BaselineSampleCount="3"
         EnableTrigger="TRUE"
         TriggerCondition="LESS_THAN"
         TriggerValueUnitMode="PERCENT_BASELINE"
         TriggerStat="TotalFrameRate"
         TriggerValue="95"
         TriggerLocation="20"
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Port Sampling 1">
        </HighResolutionSamplingPortConfig>
        <HighResolutionStreamBlockOptions id="128827" 
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Stream Block Options 7">
        </HighResolutionStreamBlockOptions>
        <AnalyzerFrameConfigFilter id="128828" 
         Summary=""
         ParsedField=""
         FrameConfig="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;eth1&quot;
pdu=&quot;ethernet:EthernetII&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;ip_1&quot;
pdu=&quot;ipv4:IPv4&quot;&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Template Filter 3">
        </AnalyzerFrameConfigFilter>
      </Analyzer>
      <Capture id="128829" 
       ElapsedTime="0:00:00"
       TabIndex="0"
       Mode="REGULAR_MODE"
       SrcMode="TX_RX_MODE"
       RealTimeMode="REALTIME_DISABLE"
       FlagMode="REGULAR_FLAG_MODE"
       BufferMode="WRAP"
       Start="16384"
       Stop="0"
       SliceMode="DISABLE"
       SliceOffsetRef="PREAMBLE"
       SliceOffset="0"
       SliceCaptureSize="128"
       RealTimeFramesBuffer="0"
       RealTimeBufferStatus="FALSE"
       CurrentTask="IDLE"
       CurrentFiltersUsed="0"
       CurrentFilterBytesUsed="0"
       AbortSaveTask="FALSE"
       PostStopTriggerBuffer="255"
       CaptureFilterMode="FRAMECONTENT"
       IncreasedMemorySupport="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Capture 1">
        <CaptureFilter id="128830" 
         QualifyEvents="TRUE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Qualify Events 1">
        </CaptureFilter>
        <CaptureFilterStartEvent id="128831" 
         StartEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Start Events 1">
        </CaptureFilterStartEvent>
        <CaptureFilterStopEvent id="128832" 
         StopEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Stop Events 1">
        </CaptureFilterStopEvent>
        <CaptureIeee80211 id="128833" 
         ChannelWidth="CHANNEL_WIDTH_40M"
         Channel="36"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Capture IEEE 802.11 1">
        </CaptureIeee80211>
        <CaptureRawPacketTagsInfo id="128834" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="CaptureRawPacketTagsInfo 1">
        </CaptureRawPacketTagsInfo>
      </Capture>
      <IgmpPortConfig id="128835" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="IgmpPortConfig 1">
      </IgmpPortConfig>
      <MldPortConfig id="128836" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="MldPortConfig 1">
      </MldPortConfig>
      <ArpCache id="128837" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpCache 1">
      </ArpCache>
      <ArpNdReport id="128838" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpNdReport 1">
      </ArpNdReport>
      <PingReport id="128839" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="PingReport 1">
      </PingReport>
      <VxlanPortConfig id="128840" 
       UdpDstPort="4789"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VXLAN Port Configuration 1">
      </VxlanPortConfig>
      <StpPortConfig id="128841" 
       StpType="STP"
       PortType="TRUNK"
       EthernetType="8100"
       NativeVlan="1"
       EnablePt2PtLink="FALSE"
       EnableMacAddrReduction="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StpPortConfig 1">
      </StpPortConfig>
      <Dhcpv4PortConfig id="128842" 
       MaxMsgSize="576"
       LeaseTime="60"
       MsgTimeout="60"
       RetryCount="4"
       RequestRate="100"
       ReleaseRate="100"
       StartingXid="0"
       OutstandingSessionCount="1000"
       SeqType="SEQUENTIAL"
       MaxDnav4RetryCount="0"
       Dnav4Timeout="1000"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv4PortConfig 1">
      </Dhcpv4PortConfig>
      <Dhcpv6PortConfig id="128843" 
       RequestRate="100"
       ReleaseRate="100"
       RenewRate="100"
       SolicitTimeout="1"
       MaxSolicitRetryTimeout="120"
       SolicitRetryCount="10"
       IndefSolicitRetry="FALSE"
       DisableSolicitRetry="FALSE"
       RequestTimeout="1"
       MaxRequestRetryTimeout="30"
       RequestRetryCount="10"
       IndefRequestRetry="FALSE"
       DisableRequestRetry="FALSE"
       ConfirmTimeout="1"
       MaxConfirmTimeout="4"
       MaxConfirmDuration="10"
       RenewTimeout="10"
       MaxRenewRetryTimeout="600"
       RenewRetryCount="0"
       IndefRenewRetry="TRUE"
       DisableRenewRetry="FALSE"
       RebindTimeout="10"
       MaxRebindRetryTimeout="600"
       RebindRetryCount="0"
       IndefRebindRetry="TRUE"
       DisableRebindRetry="FALSE"
       ReleaseTimeout="1"
       ReleaseRetryCount="5"
       IndefReleaseRetry="FALSE"
       DisableReleaseRetry="FALSE"
       DeclineTimeout="1"
       DeclineRetryCount="5"
       IndefDeclineRetry="FALSE"
       DisableDeclineRetry="FALSE"
       OutstandingSessionCount="1000"
       InfoRequestTimeout="1"
       MaxInfoRequestTimeout="120"
       InfoRequestRetryCount="0"
       IndefInfoRequestRetry="TRUE"
       DisableInfoRequestRetry="FALSE"
       LeaseTime="86400"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv6PortConfig 1">
      </Dhcpv6PortConfig>
      <SaaPortConfig id="128844" 
       RequestRate="300"
       OutstandingSessionCount="1000"
       SeqType="PARALLEL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="SaaPortConfig 1">
      </SaaPortConfig>
      <L2tpPortConfig id="128845" 
       L2tpVersion="L2TPV2"
       L2tpNodeType="LAC"
       TunnelConnectRate="100"
       SeqType="SEQUENTIAL"
       ConnectRateV3="100"
       DisconnectRateV3="1000"
       SessionOutstandingV3="100"
       Active="TRUE"
       LocalActive="TRUE"
       Name="L2tpPortConfig 1">
      </L2tpPortConfig>
      <PppoxPortConfig id="128846" 
       EmulationType="CLIENT"
       ConnectRate="100"
       DisconnectRate="1000"
       SessionOutstanding="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppoxPortConfig 1">
      </PppoxPortConfig>
      <PppProtocolConfig id="128847" 
       PapRequestTimeout="3"
       MaxPapRequestAttempts="10"
       ChapChalRequestTimeout="3"
       ChapAckTimeout="3"
       MaxChapRequestReplyAttempts="10"
       AutoRetryCount="65535"
       EnableAutoRetry="FALSE"
       Ipv4PeerAddr="0.0.0.0"
       Ipv6PeerAddr="::"
       IpcpEncap="IPV4"
       Protocol="PPPOPOS"
       EnableMruNegotiation="TRUE"
       EnableMagicNum="TRUE"
       EnableNcpTermination="FALSE"
       Authentication="NONE"
       IncludeTxChapId="TRUE"
       EnableOsi="FALSE"
       EnableMpls="FALSE"
       MruSize="1492"
       EnableEchoRequest="FALSE"
       EchoRequestGenFreq="10"
       MaxEchoRequestAttempts="0"
       LcpConfigRequestTimeout="3"
       LcpConfigRequestMaxAttempts="10"
       LcpTermRequestTimeout="3"
       LcpTermRequestMaxAttempts="10"
       NcpConfigRequestTimeout="3"
       NcpConfigRequestMaxAttempts="10"
       MaxNaks="5"
       Username="spirent"
       Password="spirent"
       UseAuthenticationList="FALSE"
       AuthenticationFilePath=""
       RAMOFlag="NODHCP"
       UsePartialBlockState="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppProtocolConfig 1">
      </PppProtocolConfig>
      <AncpPortConfig id="128849" 
       EstablishRate="100"
       TerminateRate="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="AncpPortConfig 1">
        <Relation type="ResultChild" target="128850"/>
      </AncpPortConfig>
      <EoamPortConfig id="128851" 
       EtherType="8902"
       MulticastMacType1="01:80:c2:00:00:30"
       MulticastMacType2="01:80:c2:00:00:38"
       EncodeMeLevel="TRUE"
       DisableContChkRx="FALSE"
       LinkTraceResponseRelayAction="DEFAULT"
       ImmediateLinkTraceResponse="FALSE"
       ImmediateLoopbackResponse="FALSE"
       EchoTlvsInDelayMeasurementResponse="TRUE"
       EchoTlvsInLossMeasurementResponse="TRUE"
       EchoTlvsInSlr="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="EoamPortConfig 1">
      </EoamPortConfig>
      <VqAnalyzer id="128852" 
       FrameLossConcealmentRobustness="4"
       SlicesPerIframe="0"
       NominalDelay="3"
       MaxPktCount="65535"
       MosVThreshold="1"
       MosVNormalizedThreshold="1"
       MosAvThreshold="1"
       MosAThreshold="1"
       PidInterval="1"
       PatRepetition="0.5"
       PmtRepetition="0.5"
       PcrContinuity="0.1"
       PcrRepetition="0.04"
       PtsRepetition="0.7"
       RtpTimestampThreshold="3"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VqAnalyzer 1">
      </VqAnalyzer>
      <EthernetCopper id="128853" 
       AutoMdix="FALSE"
       TestMode="NORMAL_OPERATION"
       LineSpeed="SPEED_1G"
       AlternateSpeeds=""
       AutoNegotiation="TRUE"
       AutoNegotiationMasterSlave="MASTER"
       AutoNegotiationMasterSlaveEnable="TRUE"
       FlowControl="FALSE"
       Duplex="FULL"
       CollisionExponent="10"
       InternalPpmAdjust="0"
       TransmitClockSource="INTERNAL"
       ManagementRegistersTemplate="Templates/Mii/default_mii.xml"
       IgnoreLinkStatus="FALSE"
       DataPathMode="NORMAL"
       Mtu="1500"
       EnforceMtuOnRx="FALSE"
       PortSetupMode="PORTCONFIG_ONLY"
       ForwardErrorCorrection="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Ethernet Copper Phy 1">
        <Mii id="128854" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="Mii 1">
          <MiiRegister id="128855" 
           Address="0"
           RegValue="4416"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Control">
          </MiiRegister>
          <MiiRegister id="128856" 
           Address="1"
           RegValue="31085"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Status">
          </MiiRegister>
          <MiiRegister id="128857" 
           Address="2"
           RegValue="32"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="128858" 
           Address="3"
           RegValue="24753"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="128859" 
           Address="4"
           RegValue="481"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Advertisement">
          </MiiRegister>
          <MiiRegister id="128860" 
           Address="5"
           RegValue="19937"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Base Page Ability">
          </MiiRegister>
          <MiiRegister id="128861" 
           Address="6"
           RegValue="5"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Expansion">
          </MiiRegister>
          <MiiRegister id="128862" 
           Address="7"
           RegValue="8193"
           WritableMask="47103"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Next Page Transmit">
          </MiiRegister>
          <MiiRegister id="128863" 
           Address="8"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Received Next Page">
          </MiiRegister>
          <MiiRegister id="128864" 
           Address="9"
           RegValue="512"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Control Register">
          </MiiRegister>
          <MiiRegister id="128865" 
           Address="10"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Status Register">
          </MiiRegister>
          <MiiRegister id="128866" 
           Address="11"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128867" 
           Address="12"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128868" 
           Address="13"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128869" 
           Address="14"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128870" 
           Address="15"
           RegValue="12288"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Extended Status">
          </MiiRegister>
          <MiiRegister id="128871" 
           Address="16"
           RegValue="16385"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128872" 
           Address="17"
           RegValue="768"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128873" 
           Address="18"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128874" 
           Address="19"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128875" 
           Address="20"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128876" 
           Address="21"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128877" 
           Address="22"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128878" 
           Address="23"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128879" 
           Address="24"
           RegValue="25600"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128880" 
           Address="25"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128881" 
           Address="26"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128882" 
           Address="27"
           RegValue="65535"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128883" 
           Address="28"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128884" 
           Address="29"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128885" 
           Address="30"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128886" 
           Address="31"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
        </Mii>
      </EthernetCopper>
      <AppPerfPortConfig id="128887" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="AppPerfPortConfig 12">
      </AppPerfPortConfig>
    </Port>
    <Port id="128888" 
     Location="//10.14.16.27/7/11"
     UseDefaultHost="TRUE"
     AppendLocationToPortName="TRUE"
     Layer3Type="IPV4"
     PortGroupSize="2"
     TestModuleProfile="Default"
     Active="TRUE"
     LocalActive="TRUE"
     Name="TxTest Port Group: PRI 7 0 //7/11 (offline)">
      <Relation type="UserTag" target="128383"/>
      <Relation type="ActivePhy" target="128935"/>
      <Host id="128889" 
       DeviceCount="1"
       EnablePingResponse="FALSE"
       RouterId="192.0.0.1"
       RouterIdStep="0.0.0.1"
       Ipv6RouterId="2000::1"
       Ipv6RouterIdStep="::1"
       ReadOnly="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Host">
        <Relation type="TopLevelIf" target="128894"/>
        <Relation type="TopLevelIf" target="128895"/>
        <Relation type="TopLevelIf" target="128896"/>
        <EthIIIf id="128890" 
         SourceMac="00:10:94:00:00:02"
         SrcMacStep="00:00:00:00:00:01"
         SrcMacList=""
         SrcMacStepMask="00:00:ff:ff:ff:ff"
         SrcMacRepeatCount="0"
         Authenticator="default"
         UseDefaultPhyMac="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="EthernetII 1">
        </EthIIIf>
        <HdlcIf id="128891" 
         ProtocolType="HDLC_PROTOCOL_TYPE_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="HDLC 1">
        </HdlcIf>
        <PppIf id="128892" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 1">
        </PppIf>
        <PppIf id="128893" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 2">
        </PppIf>
        <Ipv4If id="128894" 
         Address="192.85.1.3"
         AddrStep="0.0.0.1"
         AddrStepMask="255.255.255.255"
         SkipReserved="TRUE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         PrefixLength="24"
         UsePortDefaultIpv4Gateway="FALSE"
         Gateway="192.85.1.1"
         GatewayStep="0.0.0.0"
         GatewayRepeatCount="0"
         GatewayRecycleCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         Ttl="255"
         TosType="TOS"
         Tos="192"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv4 1">
          <Relation type="StackedOnEndpoint" target="128890"/>
        </Ipv4If>
        <Ipv6If id="128895" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 1">
          <Relation type="StackedOnEndpoint" target="128890"/>
        </Ipv6If>
        <Ipv6If id="128896" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 2">
          <Relation type="StackedOnEndpoint" target="128890"/>
        </Ipv6If>
      </Host>
      <Generator id="128897" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Generator 1">
        <Relation type="ResultChild" target="129650"/>
        <Relation type="ResultChild" target="136525"/>
        <GeneratorConfig id="128898" 
         SchedulingMode="RATE_BASED"
         AdvancedInterleaving="FALSE"
         Duration="30"
         DurationMode="CONTINUOUS"
         StepSize="1"
         TimestampLatchMode="START_OF_FRAME"
         RandomLengthSeed="10900842"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         BurstSize="1"
         LoadUnit="PERCENT_LINE_RATE"
         LoadMode="FIXED"
         FixedLoad="10"
         RandomMaxLoad="100"
         RandomMinLoad="10"
         InterFrameGap="12"
         InterFrameGapUnit="BYTES"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Generator Configuration 1">
        </GeneratorConfig>
      </Generator>
      <Analyzer id="128899" 
       FilterOnStreamId="TRUE"
       FilterOnInnerIP="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Analyzer 1">
        <Relation type="ResultChild" target="129653"/>
        <AnalyzerConfig id="128900" 
         TimestampLatchMode="START_OF_FRAME"
         SigMode="ENHANCED_DETECTION"
         HistogramMode="LATENCY"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         AdvSeqCheckerLateThreshold="1000"
         VlanAlternateTpid="34984"
         AlternateSigOffset="0"
         LatencyMode="PER_STREAM_RX_LATENCY_ON"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Advanced Analyzer Settings 1">
          <Relation type="ActiveHistogram" target="128902"/>
          <InterarrivalTimeHistogram id="128901" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </InterarrivalTimeHistogram>
          <LatencyHistogram id="128902" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </LatencyHistogram>
          <FrameLengthHistogram id="128903" 
           Description="(in bytes)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </FrameLengthHistogram>
          <SeqRunLengthHistogram id="128904" 
           Description="(in frames)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </SeqRunLengthHistogram>
          <SeqDiffCheckHistogram id="128905" 
           Description="(in deltas)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </SeqDiffCheckHistogram>
          <JitterHistogram id="128906" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 1">
          </JitterHistogram>
        </AnalyzerConfig>
        <DiffServConfig id="128907" 
         QualifyIpv6DstAddr="FALSE"
         Ipv6DstAddr="ffff::ffff"
         QualifyIpv4DstAddr="FALSE"
         Ipv4DstAddr="0.0.0.0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="QoS Settings 1">
        </DiffServConfig>
        <HighResolutionSamplingPortConfig id="128908" 
         BaselineSampleCount="3"
         EnableTrigger="TRUE"
         TriggerCondition="LESS_THAN"
         TriggerValueUnitMode="PERCENT_BASELINE"
         TriggerStat="TotalFrameRate"
         TriggerValue="95"
         TriggerLocation="20"
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Port Sampling 1">
        </HighResolutionSamplingPortConfig>
        <HighResolutionStreamBlockOptions id="128909" 
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Stream Block Options 1">
        </HighResolutionStreamBlockOptions>
        <AnalyzerFrameConfigFilter id="128910" 
         Summary=""
         ParsedField=""
         FrameConfig="&lt;frame&gt;&lt;config&gt;&lt;pdus&gt;&lt;pdu
name=&quot;eth1&quot;
pdu=&quot;ethernet:EthernetII&quot;&gt;&lt;/pdu&gt;&lt;pdu
name=&quot;ip_1&quot;
pdu=&quot;ipv4:IPv4&quot;&gt;&lt;/pdu&gt;&lt;/pdus&gt;&lt;/config&gt;&lt;/frame&gt;"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Template Filter 1">
        </AnalyzerFrameConfigFilter>
      </Analyzer>
      <Capture id="128911" 
       ElapsedTime="0:00:00"
       TabIndex="0"
       Mode="REGULAR_MODE"
       SrcMode="TX_RX_MODE"
       RealTimeMode="REALTIME_DISABLE"
       FlagMode="REGULAR_FLAG_MODE"
       BufferMode="WRAP"
       Start="16384"
       Stop="0"
       SliceMode="DISABLE"
       SliceOffsetRef="PREAMBLE"
       SliceOffset="0"
       SliceCaptureSize="128"
       RealTimeFramesBuffer="0"
       RealTimeBufferStatus="FALSE"
       CurrentTask="IDLE"
       CurrentFiltersUsed="0"
       CurrentFilterBytesUsed="0"
       AbortSaveTask="FALSE"
       PostStopTriggerBuffer="255"
       CaptureFilterMode="FRAMECONTENT"
       IncreasedMemorySupport="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Capture 1">
        <CaptureFilter id="128912" 
         QualifyEvents="TRUE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Qualify Events 1">
        </CaptureFilter>
        <CaptureFilterStartEvent id="128913" 
         StartEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Start Events 1">
        </CaptureFilterStartEvent>
        <CaptureFilterStopEvent id="128914" 
         StopEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Stop Events 1">
        </CaptureFilterStopEvent>
        <CaptureIeee80211 id="128915" 
         ChannelWidth="CHANNEL_WIDTH_40M"
         Channel="36"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Capture IEEE 802.11 1">
        </CaptureIeee80211>
        <CaptureRawPacketTagsInfo id="128916" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="CaptureRawPacketTagsInfo 1">
        </CaptureRawPacketTagsInfo>
      </Capture>
      <IgmpPortConfig id="128917" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="IgmpPortConfig 1">
      </IgmpPortConfig>
      <MldPortConfig id="128918" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="MldPortConfig 1">
      </MldPortConfig>
      <ArpCache id="128919" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpCache 1">
      </ArpCache>
      <ArpNdReport id="128920" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpNdReport 1">
      </ArpNdReport>
      <PingReport id="128921" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="PingReport 1">
      </PingReport>
      <VxlanPortConfig id="128922" 
       UdpDstPort="4789"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VXLAN Port Configuration 1">
      </VxlanPortConfig>
      <StpPortConfig id="128923" 
       StpType="STP"
       PortType="TRUNK"
       EthernetType="8100"
       NativeVlan="1"
       EnablePt2PtLink="FALSE"
       EnableMacAddrReduction="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StpPortConfig 1">
      </StpPortConfig>
      <Dhcpv4PortConfig id="128924" 
       MaxMsgSize="576"
       LeaseTime="60"
       MsgTimeout="60"
       RetryCount="4"
       RequestRate="100"
       ReleaseRate="100"
       StartingXid="0"
       OutstandingSessionCount="1000"
       SeqType="SEQUENTIAL"
       MaxDnav4RetryCount="0"
       Dnav4Timeout="1000"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv4PortConfig 1">
      </Dhcpv4PortConfig>
      <Dhcpv6PortConfig id="128925" 
       RequestRate="100"
       ReleaseRate="100"
       RenewRate="100"
       SolicitTimeout="1"
       MaxSolicitRetryTimeout="120"
       SolicitRetryCount="10"
       IndefSolicitRetry="FALSE"
       DisableSolicitRetry="FALSE"
       RequestTimeout="1"
       MaxRequestRetryTimeout="30"
       RequestRetryCount="10"
       IndefRequestRetry="FALSE"
       DisableRequestRetry="FALSE"
       ConfirmTimeout="1"
       MaxConfirmTimeout="4"
       MaxConfirmDuration="10"
       RenewTimeout="10"
       MaxRenewRetryTimeout="600"
       RenewRetryCount="0"
       IndefRenewRetry="TRUE"
       DisableRenewRetry="FALSE"
       RebindTimeout="10"
       MaxRebindRetryTimeout="600"
       RebindRetryCount="0"
       IndefRebindRetry="TRUE"
       DisableRebindRetry="FALSE"
       ReleaseTimeout="1"
       ReleaseRetryCount="5"
       IndefReleaseRetry="FALSE"
       DisableReleaseRetry="FALSE"
       DeclineTimeout="1"
       DeclineRetryCount="5"
       IndefDeclineRetry="FALSE"
       DisableDeclineRetry="FALSE"
       OutstandingSessionCount="1000"
       InfoRequestTimeout="1"
       MaxInfoRequestTimeout="120"
       InfoRequestRetryCount="0"
       IndefInfoRequestRetry="TRUE"
       DisableInfoRequestRetry="FALSE"
       LeaseTime="86400"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv6PortConfig 1">
      </Dhcpv6PortConfig>
      <SaaPortConfig id="128926" 
       RequestRate="300"
       OutstandingSessionCount="1000"
       SeqType="PARALLEL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="SaaPortConfig 1">
      </SaaPortConfig>
      <L2tpPortConfig id="128927" 
       L2tpVersion="L2TPV2"
       L2tpNodeType="LAC"
       TunnelConnectRate="100"
       SeqType="SEQUENTIAL"
       ConnectRateV3="100"
       DisconnectRateV3="1000"
       SessionOutstandingV3="100"
       Active="TRUE"
       LocalActive="TRUE"
       Name="L2tpPortConfig 1">
      </L2tpPortConfig>
      <PppoxPortConfig id="128928" 
       EmulationType="CLIENT"
       ConnectRate="100"
       DisconnectRate="1000"
       SessionOutstanding="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppoxPortConfig 1">
      </PppoxPortConfig>
      <PppProtocolConfig id="128929" 
       PapRequestTimeout="3"
       MaxPapRequestAttempts="10"
       ChapChalRequestTimeout="3"
       ChapAckTimeout="3"
       MaxChapRequestReplyAttempts="10"
       AutoRetryCount="65535"
       EnableAutoRetry="FALSE"
       Ipv4PeerAddr="0.0.0.0"
       Ipv6PeerAddr="::"
       IpcpEncap="IPV4"
       Protocol="PPPOPOS"
       EnableMruNegotiation="TRUE"
       EnableMagicNum="TRUE"
       EnableNcpTermination="FALSE"
       Authentication="NONE"
       IncludeTxChapId="TRUE"
       EnableOsi="FALSE"
       EnableMpls="FALSE"
       MruSize="1492"
       EnableEchoRequest="FALSE"
       EchoRequestGenFreq="10"
       MaxEchoRequestAttempts="0"
       LcpConfigRequestTimeout="3"
       LcpConfigRequestMaxAttempts="10"
       LcpTermRequestTimeout="3"
       LcpTermRequestMaxAttempts="10"
       NcpConfigRequestTimeout="3"
       NcpConfigRequestMaxAttempts="10"
       MaxNaks="5"
       Username="spirent"
       Password="spirent"
       UseAuthenticationList="FALSE"
       AuthenticationFilePath=""
       RAMOFlag="NODHCP"
       UsePartialBlockState="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppProtocolConfig 1">
      </PppProtocolConfig>
      <AncpPortConfig id="128931" 
       EstablishRate="100"
       TerminateRate="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="AncpPortConfig 1">
        <Relation type="ResultChild" target="128932"/>
      </AncpPortConfig>
      <EoamPortConfig id="128933" 
       EtherType="8902"
       MulticastMacType1="01:80:c2:00:00:30"
       MulticastMacType2="01:80:c2:00:00:38"
       EncodeMeLevel="TRUE"
       DisableContChkRx="FALSE"
       LinkTraceResponseRelayAction="DEFAULT"
       ImmediateLinkTraceResponse="FALSE"
       ImmediateLoopbackResponse="FALSE"
       EchoTlvsInDelayMeasurementResponse="TRUE"
       EchoTlvsInLossMeasurementResponse="TRUE"
       EchoTlvsInSlr="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="EoamPortConfig 1">
      </EoamPortConfig>
      <VqAnalyzer id="128934" 
       FrameLossConcealmentRobustness="4"
       SlicesPerIframe="0"
       NominalDelay="3"
       MaxPktCount="65535"
       MosVThreshold="1"
       MosVNormalizedThreshold="1"
       MosAvThreshold="1"
       MosAThreshold="1"
       PidInterval="1"
       PatRepetition="0.5"
       PmtRepetition="0.5"
       PcrContinuity="0.1"
       PcrRepetition="0.04"
       PtsRepetition="0.7"
       RtpTimestampThreshold="3"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VqAnalyzer 1">
      </VqAnalyzer>
      <EthernetCopper id="128935" 
       AutoMdix="FALSE"
       TestMode="NORMAL_OPERATION"
       LineSpeed="SPEED_1G"
       AlternateSpeeds=""
       AutoNegotiation="TRUE"
       AutoNegotiationMasterSlave="MASTER"
       AutoNegotiationMasterSlaveEnable="TRUE"
       FlowControl="FALSE"
       Duplex="FULL"
       CollisionExponent="10"
       InternalPpmAdjust="0"
       TransmitClockSource="INTERNAL"
       ManagementRegistersTemplate="Templates/Mii/default_mii.xml"
       IgnoreLinkStatus="FALSE"
       DataPathMode="NORMAL"
       Mtu="1500"
       EnforceMtuOnRx="FALSE"
       PortSetupMode="PORTCONFIG_ONLY"
       ForwardErrorCorrection="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Ethernet Copper Phy 1">
        <Mii id="128936" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="Mii 1">
          <MiiRegister id="128937" 
           Address="0"
           RegValue="4416"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Control">
          </MiiRegister>
          <MiiRegister id="128938" 
           Address="1"
           RegValue="31085"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Status">
          </MiiRegister>
          <MiiRegister id="128939" 
           Address="2"
           RegValue="32"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="128940" 
           Address="3"
           RegValue="24753"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="128941" 
           Address="4"
           RegValue="481"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Advertisement">
          </MiiRegister>
          <MiiRegister id="128942" 
           Address="5"
           RegValue="19937"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Base Page Ability">
          </MiiRegister>
          <MiiRegister id="128943" 
           Address="6"
           RegValue="5"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Expansion">
          </MiiRegister>
          <MiiRegister id="128944" 
           Address="7"
           RegValue="8193"
           WritableMask="47103"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Next Page Transmit">
          </MiiRegister>
          <MiiRegister id="128945" 
           Address="8"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Received Next Page">
          </MiiRegister>
          <MiiRegister id="128946" 
           Address="9"
           RegValue="512"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Control Register">
          </MiiRegister>
          <MiiRegister id="128947" 
           Address="10"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Status Register">
          </MiiRegister>
          <MiiRegister id="128948" 
           Address="11"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128949" 
           Address="12"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128950" 
           Address="13"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128951" 
           Address="14"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="128952" 
           Address="15"
           RegValue="12288"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Extended Status">
          </MiiRegister>
          <MiiRegister id="128953" 
           Address="16"
           RegValue="16385"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128954" 
           Address="17"
           RegValue="768"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128955" 
           Address="18"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128956" 
           Address="19"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128957" 
           Address="20"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128958" 
           Address="21"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128959" 
           Address="22"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128960" 
           Address="23"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128961" 
           Address="24"
           RegValue="25600"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128962" 
           Address="25"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128963" 
           Address="26"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128964" 
           Address="27"
           RegValue="65535"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128965" 
           Address="28"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128966" 
           Address="29"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128967" 
           Address="30"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="128968" 
           Address="31"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
        </Mii>
      </EthernetCopper>
      <AppPerfPortConfig id="128969" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="AppPerfPortConfig 13">
      </AppPerfPortConfig>
    </Port>
    <Port id="128970" 
     Location="//10.14.16.27/7/10"
     UseDefaultHost="TRUE"
     AppendLocationToPortName="TRUE"
     Layer3Type="IPV4"
     PortGroupSize="2"
     TestModuleProfile="Default"
     Active="TRUE"
     LocalActive="TRUE"
     Name="RxPortGroup: PRI 0-7 0 //7/10 (offline)">
      <Relation type="UserTag" target="128384"/>
      <Relation type="ActivePhy" target="129016"/>
      <Host id="128971" 
       DeviceCount="1"
       EnablePingResponse="FALSE"
       RouterId="192.0.0.1"
       RouterIdStep="0.0.0.1"
       Ipv6RouterId="2000::1"
       Ipv6RouterIdStep="::1"
       ReadOnly="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Host">
        <Relation type="TopLevelIf" target="128976"/>
        <Relation type="TopLevelIf" target="128977"/>
        <Relation type="TopLevelIf" target="128978"/>
        <EthIIIf id="128972" 
         SourceMac="00:10:94:00:00:02"
         SrcMacStep="00:00:00:00:00:01"
         SrcMacList=""
         SrcMacStepMask="00:00:ff:ff:ff:ff"
         SrcMacRepeatCount="0"
         Authenticator="default"
         UseDefaultPhyMac="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="EthernetII 175">
        </EthIIIf>
        <HdlcIf id="128973" 
         ProtocolType="HDLC_PROTOCOL_TYPE_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="HDLC 3">
        </HdlcIf>
        <PppIf id="128974" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 5">
        </PppIf>
        <PppIf id="128975" 
         ProtocolId="PPP_PROTOCOL_ID_IPV4"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="PPP 6">
        </PppIf>
        <Ipv4If id="128976" 
         Address="192.85.1.3"
         AddrStep="0.0.0.1"
         AddrStepMask="255.255.255.255"
         SkipReserved="TRUE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         PrefixLength="24"
         UsePortDefaultIpv4Gateway="FALSE"
         Gateway="192.85.1.1"
         GatewayStep="0.0.0.0"
         GatewayRepeatCount="0"
         GatewayRecycleCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         Ttl="255"
         TosType="TOS"
         Tos="192"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv4 175">
          <Relation type="StackedOnEndpoint" target="128972"/>
        </Ipv4If>
        <Ipv6If id="128977" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 5">
          <Relation type="StackedOnEndpoint" target="128972"/>
        </Ipv6If>
        <Ipv6If id="128978" 
         Address="2000::2"
         AddrStep="::1"
         AddrStepMask="ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
         SkipReserved="FALSE"
         AddrList=""
         AddrRepeatCount="0"
         AddrResolver="default"
         AllocateEui64LinkLocalAddress="FALSE"
         PrefixLength="64"
         UsePortDefaultIpv6Gateway="FALSE"
         EnableGatewayLearning="FALSE"
         Gateway="::"
         GatewayStep="::"
         GatewayRepeatCount="0"
         UseIpAddrRangeSettingsForGateway="FALSE"
         GatewayList=""
         GatewayRecycleCount="0"
         ResolveGatewayMac="TRUE"
         GatewayMac="00:00:01:00:00:01"
         GatewayMacResolver="default"
         HopLimit="255"
         TrafficClass="0"
         FlowLabel="7"
         NeedsAuthentication="FALSE"
         IfCountPerLowerIf="1"
         IfRecycleCount="0"
         IsDecorated="FALSE"
         IsLoopbackIf="FALSE"
         IsRange="TRUE"
         IsDirectlyConnected="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="IPv6 6">
          <Relation type="StackedOnEndpoint" target="128972"/>
        </Ipv6If>
      </Host>
      <Generator id="128979" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Generator 3">
        <Relation type="ResultChild" target="129651"/>
        <GeneratorConfig id="128980" 
         SchedulingMode="PORT_BASED"
         AdvancedInterleaving="FALSE"
         Duration="30"
         DurationMode="CONTINUOUS"
         StepSize="1"
         TimestampLatchMode="START_OF_FRAME"
         RandomLengthSeed="10900842"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         BurstSize="1"
         LoadUnit="PERCENT_LINE_RATE"
         LoadMode="FIXED"
         FixedLoad="10"
         RandomMaxLoad="100"
         RandomMinLoad="10"
         InterFrameGap="12"
         InterFrameGapUnit="BYTES"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Generator Configuration 3">
        </GeneratorConfig>
      </Generator>
      <Analyzer id="128981" 
       FilterOnStreamId="TRUE"
       FilterOnInnerIP="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Analyzer 3">
        <Relation type="ResultChild" target="129654"/>
        <AnalyzerConfig id="128982" 
         TimestampLatchMode="START_OF_FRAME"
         SigMode="ENHANCED_DETECTION"
         HistogramMode="LATENCY"
         JumboFrameThreshold="1518"
         OversizeFrameThreshold="9018"
         UndersizeFrameThreshold="64"
         AdvSeqCheckerLateThreshold="1000"
         VlanAlternateTpid="34984"
         AlternateSigOffset="0"
         LatencyMode="PER_STREAM_RX_LATENCY_ON"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Advanced Analyzer Settings 3">
          <Relation type="ActiveHistogram" target="128984"/>
          <InterarrivalTimeHistogram id="128983" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </InterarrivalTimeHistogram>
          <LatencyHistogram id="128984" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </LatencyHistogram>
          <FrameLengthHistogram id="128985" 
           Description="(in bytes)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </FrameLengthHistogram>
          <SeqRunLengthHistogram id="128986" 
           Description="(in frames)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </SeqRunLengthHistogram>
          <SeqDiffCheckHistogram id="128987" 
           Description="(in deltas)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </SeqDiffCheckHistogram>
          <JitterHistogram id="128988" 
           Description="(ns)"
           BucketSizeList="2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384
32768 65536"
           LimitList="2 6 14 30 62 126 254 510 1022 2046 4094 8190 16382 32766
65534"
           DistributionMode="CUSTOM_MODE"
           ConfigMode="CONFIG_SIZE_MODE"
           DistributionModeSize="1024"
           UniformDistributionSize="8"
           CenterPoint="568"
           BucketSizeUnit="TEN_NANOSECONDS"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Histograms 3">
          </JitterHistogram>
        </AnalyzerConfig>
        <DiffServConfig id="128989" 
         QualifyIpv6DstAddr="FALSE"
         Ipv6DstAddr="ffff::ffff"
         QualifyIpv4DstAddr="FALSE"
         Ipv4DstAddr="0.0.0.0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="QoS Settings 3">
        </DiffServConfig>
        <HighResolutionSamplingPortConfig id="128990" 
         BaselineSampleCount="3"
         EnableTrigger="TRUE"
         TriggerCondition="LESS_THAN"
         TriggerValueUnitMode="PERCENT_BASELINE"
         TriggerStat="TotalFrameRate"
         TriggerValue="95"
         TriggerLocation="20"
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Port Sampling 3">
        </HighResolutionSamplingPortConfig>
        <HighResolutionStreamBlockOptions id="128991" 
         TimingMode="INTERVAL"
         SamplingInterval="10"
         SamplingDuration="10"
         Active="TRUE"
         LocalActive="TRUE"
         Name="High Resolution Stream Block Options 2">
        </HighResolutionStreamBlockOptions>
      </Analyzer>
      <Capture id="128992" 
       ElapsedTime="0:00:00"
       TabIndex="0"
       Mode="REGULAR_MODE"
       SrcMode="TX_RX_MODE"
       RealTimeMode="REALTIME_DISABLE"
       FlagMode="REGULAR_FLAG_MODE"
       BufferMode="WRAP"
       Start="16384"
       Stop="0"
       SliceMode="DISABLE"
       SliceOffsetRef="PREAMBLE"
       SliceOffset="0"
       SliceCaptureSize="128"
       RealTimeFramesBuffer="0"
       RealTimeBufferStatus="FALSE"
       CurrentTask="IDLE"
       CurrentFiltersUsed="0"
       CurrentFilterBytesUsed="0"
       AbortSaveTask="FALSE"
       PostStopTriggerBuffer="255"
       CaptureFilterMode="FRAMECONTENT"
       IncreasedMemorySupport="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Capture 3">
        <CaptureFilter id="128993" 
         QualifyEvents="TRUE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Qualify Events 3">
        </CaptureFilter>
        <CaptureFilterStartEvent id="128994" 
         StartEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Start Events 3">
        </CaptureFilterStartEvent>
        <CaptureFilterStopEvent id="128995" 
         StopEvents="FALSE"
         FilterName=""
         SigPresent="IGNORE"
         Oversized="IGNORE"
         Jumbo="IGNORE"
         Undersized="IGNORE"
         FcsError="IGNORE"
         Ipv4CheckSumError="IGNORE"
         TcpUdpIgmpCheckSumError="IGNORE"
         SigSeqNumError="IGNORE"
         Tcp="IGNORE"
         Udp="IGNORE"
         Ipv4="IGNORE"
         Ipv6="IGNORE"
         Igmp="IGNORE"
         FrameLenMatch="IGNORE"
         StreamIdMatch="IGNORE"
         PrbsError="IGNORE"
         FilterExpression="{ None }"
         GuiExpression=""
         FrameLength="0"
         StreamId="0"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Stop Events 3">
        </CaptureFilterStopEvent>
        <CaptureIeee80211 id="128996" 
         ChannelWidth="CHANNEL_WIDTH_40M"
         Channel="36"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Capture IEEE 802.11 3">
        </CaptureIeee80211>
        <CaptureRawPacketTagsInfo id="128997" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="CaptureRawPacketTagsInfo 3">
        </CaptureRawPacketTagsInfo>
      </Capture>
      <IgmpPortConfig id="128998" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="IgmpPortConfig 3">
      </IgmpPortConfig>
      <MldPortConfig id="128999" 
       RatePps="0"
       MaxBurst="0"
       CalculateLatencyDelay="10"
       VlanSubFilter="OUTER"
       Active="TRUE"
       LocalActive="TRUE"
       Name="MldPortConfig 3">
      </MldPortConfig>
      <ArpCache id="129000" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpCache 3">
      </ArpCache>
      <ArpNdReport id="129001" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="ArpNdReport 3">
      </ArpNdReport>
      <PingReport id="129002" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="PingReport 3">
      </PingReport>
      <VxlanPortConfig id="129003" 
       UdpDstPort="4789"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VXLAN Port Configuration 3">
      </VxlanPortConfig>
      <StpPortConfig id="129004" 
       StpType="STP"
       PortType="TRUNK"
       EthernetType="8100"
       NativeVlan="1"
       EnablePt2PtLink="FALSE"
       EnableMacAddrReduction="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StpPortConfig 3">
      </StpPortConfig>
      <Dhcpv4PortConfig id="129005" 
       MaxMsgSize="576"
       LeaseTime="60"
       MsgTimeout="60"
       RetryCount="4"
       RequestRate="100"
       ReleaseRate="100"
       StartingXid="0"
       OutstandingSessionCount="1000"
       SeqType="SEQUENTIAL"
       MaxDnav4RetryCount="0"
       Dnav4Timeout="1000"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv4PortConfig 3">
      </Dhcpv4PortConfig>
      <Dhcpv6PortConfig id="129006" 
       RequestRate="100"
       ReleaseRate="100"
       RenewRate="100"
       SolicitTimeout="1"
       MaxSolicitRetryTimeout="120"
       SolicitRetryCount="10"
       IndefSolicitRetry="FALSE"
       DisableSolicitRetry="FALSE"
       RequestTimeout="1"
       MaxRequestRetryTimeout="30"
       RequestRetryCount="10"
       IndefRequestRetry="FALSE"
       DisableRequestRetry="FALSE"
       ConfirmTimeout="1"
       MaxConfirmTimeout="4"
       MaxConfirmDuration="10"
       RenewTimeout="10"
       MaxRenewRetryTimeout="600"
       RenewRetryCount="0"
       IndefRenewRetry="TRUE"
       DisableRenewRetry="FALSE"
       RebindTimeout="10"
       MaxRebindRetryTimeout="600"
       RebindRetryCount="0"
       IndefRebindRetry="TRUE"
       DisableRebindRetry="FALSE"
       ReleaseTimeout="1"
       ReleaseRetryCount="5"
       IndefReleaseRetry="FALSE"
       DisableReleaseRetry="FALSE"
       DeclineTimeout="1"
       DeclineRetryCount="5"
       IndefDeclineRetry="FALSE"
       DisableDeclineRetry="FALSE"
       OutstandingSessionCount="1000"
       InfoRequestTimeout="1"
       MaxInfoRequestTimeout="120"
       InfoRequestRetryCount="0"
       IndefInfoRequestRetry="TRUE"
       DisableInfoRequestRetry="FALSE"
       LeaseTime="86400"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Dhcpv6PortConfig 3">
      </Dhcpv6PortConfig>
      <SaaPortConfig id="129007" 
       RequestRate="300"
       OutstandingSessionCount="1000"
       SeqType="PARALLEL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="SaaPortConfig 3">
      </SaaPortConfig>
      <L2tpPortConfig id="129008" 
       L2tpVersion="L2TPV2"
       L2tpNodeType="LAC"
       TunnelConnectRate="100"
       SeqType="SEQUENTIAL"
       ConnectRateV3="100"
       DisconnectRateV3="1000"
       SessionOutstandingV3="100"
       Active="TRUE"
       LocalActive="TRUE"
       Name="L2tpPortConfig 3">
      </L2tpPortConfig>
      <PppoxPortConfig id="129009" 
       EmulationType="CLIENT"
       ConnectRate="100"
       DisconnectRate="1000"
       SessionOutstanding="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppoxPortConfig 3">
      </PppoxPortConfig>
      <PppProtocolConfig id="129010" 
       PapRequestTimeout="3"
       MaxPapRequestAttempts="10"
       ChapChalRequestTimeout="3"
       ChapAckTimeout="3"
       MaxChapRequestReplyAttempts="10"
       AutoRetryCount="65535"
       EnableAutoRetry="FALSE"
       Ipv4PeerAddr="0.0.0.0"
       Ipv6PeerAddr="::"
       IpcpEncap="IPV4"
       Protocol="PPPOPOS"
       EnableMruNegotiation="TRUE"
       EnableMagicNum="TRUE"
       EnableNcpTermination="FALSE"
       Authentication="NONE"
       IncludeTxChapId="TRUE"
       EnableOsi="FALSE"
       EnableMpls="FALSE"
       MruSize="1492"
       EnableEchoRequest="FALSE"
       EchoRequestGenFreq="10"
       MaxEchoRequestAttempts="0"
       LcpConfigRequestTimeout="3"
       LcpConfigRequestMaxAttempts="10"
       LcpTermRequestTimeout="3"
       LcpTermRequestMaxAttempts="10"
       NcpConfigRequestTimeout="3"
       NcpConfigRequestMaxAttempts="10"
       MaxNaks="5"
       Username="spirent"
       Password="spirent"
       UseAuthenticationList="FALSE"
       AuthenticationFilePath=""
       RAMOFlag="NODHCP"
       UsePartialBlockState="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="PppProtocolConfig 3">
      </PppProtocolConfig>
      <AncpPortConfig id="129012" 
       EstablishRate="100"
       TerminateRate="100"
       SeqType="SEQUENTIAL"
       Active="TRUE"
       LocalActive="TRUE"
       Name="AncpPortConfig 3">
        <Relation type="ResultChild" target="129013"/>
      </AncpPortConfig>
      <EoamPortConfig id="129014" 
       EtherType="8902"
       MulticastMacType1="01:80:c2:00:00:30"
       MulticastMacType2="01:80:c2:00:00:38"
       EncodeMeLevel="TRUE"
       DisableContChkRx="FALSE"
       LinkTraceResponseRelayAction="DEFAULT"
       ImmediateLinkTraceResponse="FALSE"
       ImmediateLoopbackResponse="FALSE"
       EchoTlvsInDelayMeasurementResponse="TRUE"
       EchoTlvsInLossMeasurementResponse="TRUE"
       EchoTlvsInSlr="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="EoamPortConfig 3">
      </EoamPortConfig>
      <VqAnalyzer id="129015" 
       FrameLossConcealmentRobustness="4"
       SlicesPerIframe="0"
       NominalDelay="3"
       MaxPktCount="65535"
       MosVThreshold="1"
       MosVNormalizedThreshold="1"
       MosAvThreshold="1"
       MosAThreshold="1"
       PidInterval="1"
       PatRepetition="0.5"
       PmtRepetition="0.5"
       PcrContinuity="0.1"
       PcrRepetition="0.04"
       PtsRepetition="0.7"
       RtpTimestampThreshold="3"
       Active="TRUE"
       LocalActive="TRUE"
       Name="VqAnalyzer 3">
      </VqAnalyzer>
      <EthernetCopper id="129016" 
       AutoMdix="FALSE"
       TestMode="NORMAL_OPERATION"
       LineSpeed="SPEED_1G"
       AlternateSpeeds=""
       AutoNegotiation="TRUE"
       AutoNegotiationMasterSlave="MASTER"
       AutoNegotiationMasterSlaveEnable="TRUE"
       FlowControl="FALSE"
       Duplex="FULL"
       CollisionExponent="10"
       InternalPpmAdjust="0"
       TransmitClockSource="INTERNAL"
       ManagementRegistersTemplate="Templates/Mii/default_mii.xml"
       IgnoreLinkStatus="FALSE"
       DataPathMode="NORMAL"
       Mtu="1500"
       EnforceMtuOnRx="FALSE"
       PortSetupMode="PORTCONFIG_ONLY"
       ForwardErrorCorrection="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Ethernet Copper Phy 3">
        <Mii id="129017" 
         Active="TRUE"
         LocalActive="TRUE"
         Name="Mii 1">
          <MiiRegister id="129018" 
           Address="0"
           RegValue="4416"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Control">
          </MiiRegister>
          <MiiRegister id="129019" 
           Address="1"
           RegValue="31085"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Status">
          </MiiRegister>
          <MiiRegister id="129020" 
           Address="2"
           RegValue="32"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="129021" 
           Address="3"
           RegValue="24753"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="PHY Identifier">
          </MiiRegister>
          <MiiRegister id="129022" 
           Address="4"
           RegValue="481"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Advertisement">
          </MiiRegister>
          <MiiRegister id="129023" 
           Address="5"
           RegValue="19937"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Base Page Ability">
          </MiiRegister>
          <MiiRegister id="129024" 
           Address="6"
           RegValue="5"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Expansion">
          </MiiRegister>
          <MiiRegister id="129025" 
           Address="7"
           RegValue="8193"
           WritableMask="47103"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Next Page Transmit">
          </MiiRegister>
          <MiiRegister id="129026" 
           Address="8"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Auto-Negotiation Link Partner Received Next Page">
          </MiiRegister>
          <MiiRegister id="129027" 
           Address="9"
           RegValue="512"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Control Register">
          </MiiRegister>
          <MiiRegister id="129028" 
           Address="10"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="MASTER-SLAVE Status Register">
          </MiiRegister>
          <MiiRegister id="129029" 
           Address="11"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="129030" 
           Address="12"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="129031" 
           Address="13"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="129032" 
           Address="14"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Reserved">
          </MiiRegister>
          <MiiRegister id="129033" 
           Address="15"
           RegValue="12288"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Extended Status">
          </MiiRegister>
          <MiiRegister id="129034" 
           Address="16"
           RegValue="16385"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129035" 
           Address="17"
           RegValue="768"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129036" 
           Address="18"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129037" 
           Address="19"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129038" 
           Address="20"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129039" 
           Address="21"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129040" 
           Address="22"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129041" 
           Address="23"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129042" 
           Address="24"
           RegValue="25600"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129043" 
           Address="25"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129044" 
           Address="26"
           RegValue="0"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129045" 
           Address="27"
           RegValue="65535"
           WritableMask="65535"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129046" 
           Address="28"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129047" 
           Address="29"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129048" 
           Address="30"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
          <MiiRegister id="129049" 
           Address="31"
           RegValue="0"
           WritableMask="0"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Vendor Specific">
          </MiiRegister>
        </Mii>
      </EthernetCopper>
      <AppPerfPortConfig id="129050" 
       Active="TRUE"
       LocalActive="TRUE"
       Name="AppPerfPortConfig 14">
      </AppPerfPortConfig>
    </Port>
    <ResultDataSet id="129051" 
     PrimaryClass="TxStreamBlockResults"
     InternalXmlFormatString=""
     ResultFilterMode="32"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="25"
     NotifyInterval="1000"
     Identifier="Stream Results\Stream Block Results"
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path="Stream Results"
     ResultViewOwner="SYSTEM"
     Description="object://l2l3/TxStreamBlockResults"
     CustomDisplayName=""
     CustomDisplayPath="Streams"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Stream Block Results">
      <RealTimeResultColumnDefinition id="129052" 
       ColumnClassName="Port"
       ColumnPropertyName="Name"
       ColumnDescription="DescribeMe"
       ColumnWidth="85"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 174">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129053" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="RxPortName"
       ColumnDescription="DescribeMe"
       ColumnWidth="87"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 175">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="129054" 
       GroupName="All Groups"
       GroupId="core://allgroups/"
       ColumnClassName="Port RxStreamBlockResults StreamBlock"
       ColumnPropertyName="Name RxPortName Name"
       SqlString=""
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 17">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129055" 
       GroupName="Basic Counters"
       GroupId="object://customgroup/0e4f05e2-356d-4dd7-b3b9-dc7d82fb9482/Basic
Counters"
       ColumnClassName="TxStreamBlockResults RxStreamBlockResults
TxStreamBlockResults RxStreamBlockResults TxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults"
       ColumnPropertyName="FrameCount FrameCount FrameRate FrameRate BitRate
BitRate SigFrameCount AvgLatency MinLatency MaxLatency AvgJitter MinJitter
MaxJitter AvgInterarrivalTime MinInterarrivalTime MaxInterarrivalTime"
       SqlString="select TxPortName as &apos;Tx Port&apos;, ActualRxPortList as
&apos;Rx Port&apos;, TxStreamBlockName as &apos;Stream Block&apos;,
TxSumFrameCount as &apos;Tx Count (Frames)&apos;, coalesce(RxSumFrameCount,0)
as &apos;Rx Count (Frames)&apos;, coalesce(RxSumSigFrameCount,0) as &apos;Sig
Count (Frames)&apos;, TxSumTxOctetCount * 8 as &apos;Tx Count (bits)&apos;,
coalesce((RxSumOctetCount * 8), 0) as &apos;Rx Count (bits)&apos;,
TxSumTxL1BitCount as &apos;Tx L1 Count (bits)&apos;,
coalesce(RxSumL1BitCount,0) as &apos;Rx L1 Count (bits)&apos;,
coalesce(RxSumAvgLatency, 0) as &apos;Avg Latency (us)&apos;,
coalesce(RxSumMinLatency, 0) as &apos;Min Latency (us)&apos;,
coalesce(RxSumMaxLatency, 0) as &apos;Max Latency (us)&apos;,
coalesce(RxSumAvgJitter, 0.0) as &apos;Avg Jitter (us)&apos;,
coalesce(RxSumMaxJitter,0.0) as &apos;Max Jitter (us)&apos;,
coalesce(RxSumMinJitter,0.0) as &apos;Min Jitter (us)&apos;,
coalesce(RxSumAvgInterarrivalTime, 0.0) as &apos;Avg Inter-arrival Time
(us)&apos;, coalesce(RxSumMinInterarrivalTime,0.0) as &apos;Min Inter-arrival
Time (us)&apos;, coalesce(RxSumMaxInterarrivalTime, 0.0) as &apos;Max
Inter-arrival Time (us)&apos;, TxSumCellCount as &apos;Tx Count (Cells)&apos;,
coalesce(RxSumCellCount,0) as &apos;Rx Count (Cells)&apos; from (select
TxParentHnd, TxPortName, TxStreamBlockName, TxStreamIndex, TxStreamId,
TxParentStreamBlock as TxSumTxParentSBHnd, sum(TxFrameCount) as
TxSumFrameCount, sum(TxOctetCount) as TxSumTxOctetCount, sum(TxL1BitCount) as
TxSumTxL1BitCount, sum(TxCellCount) as TxSumCellCount, ExpectedRxPortHandle,
ExpectedRxPortName, sum(ExpectedRxFrameCount) as TxExpectedRxFrameCount,
DataSetId, ParentHnd, PortName from (select * from TxRxEotStreamResults group
by DataSetId, TxStreamId) group by DataSetId, TxParentStreamBlock limit
@_offset,@_limit) as TxSumTable left join (select TxParentStreamBlock as
RxSumTxParentSBHnd, sum(FrameCount) as RxSumFrameCount, sum(OctetCount) as
RxSumOctetCount, sum(SigFrameCount) as RxSumSigFrameCount, sum(L1BitCount) as
RxSumL1BitCount, coalesce(round(sum(TotalLatency) / 100.0 / sum(SigFrameCount),
3), 0) as RxSumAvgLatency, min(MinLatency) as RxSumMinLatency, max(MaxLatency)
as RxSumMaxLatency, (case when ((InJitterModeRfc3393 and ModInSeqFrameCount
&lt; 1) or (not InJitterModeRfc3393 and ModSigFrameCount &lt; 1)) then
&apos;&apos; when (InJitterModeRfc3393) then coalesce(round(sum(TotalJitter) /
100.0 / sum(ModInSeqFrameCount), 3), &apos;&apos;) else
coalesce(round(sum(TotalJitter) / 100.0 / sum(ModSigFrameCount), 3),
&apos;&apos;) end) as RxSumAvgJitter, min(MinJitter) as RxSumMinJitter,
max(MaxJitter) as RxSumMaxJitter, coalesce(round(sum(TotalInterarrivalTime) /
100.0 / sum(ModFrameCount), 4), &apos;&apos;) as RxSumAvgInterarrivalTime,
min(MinInterarrivalTime) as RxSumMinInterarrivalTime, max(MaxInterarrivalTime)
as RxSumMaxInterarrivalTime, group_concat(distinct ActualRxPortName) as
ActualRxPortList, sum(CellCount) as RxSumCellCount from TxRxEotStreamResults
where IsExpectedPort = 1 group by DataSetId, TxParentStreamBlock) as RxSumTable
on TxSumTxParentSBHnd = RxSumTxParentSBHnd where DataSetId = @DataSetId"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 18">
      </RealTimeResultGroupDefinition>
      <ResultQuery id="129056" 
       ConfigClassId="streamblock"
       ResultClassId="txstreamblockresults"
       ResultRootList="128806"
       PropertyIdArray="txbasicresults.framecount txbasicresults.framerate
txbasicresults.bitrate"
       PropertyHandleArray=""
       ResultOptions="Basic"
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 8">
      </ResultQuery>
      <ResultQuery id="129057" 
       ConfigClassId="streamblock"
       ResultClassId="rxstreamblockresults"
       ResultRootList="128806"
       PropertyIdArray="rxbasicresults.framecount rxbasicresults.framerate
rxbasicresults.bitrate rxbasicresults.sigframecount
rxbasicresults.fcserrorframecount rxbasicresults.minlatency
rxbasicresults.maxlatency rxbasicresults.droppedframecount
rxbasicresults.droppedframepercent rxbasicresults.inorderframecount
rxbasicresults.reorderedframecount rxbasicresults.duplicateframecount
rxbasicresults.lateframecount rxbasicresults.prbsbiterrorcount
rxbasicresults.prbsfilloctetcount rxbasicresults.ipv4checksumerrorcount
rxbasicresults.tcpudpchecksumerrorcount rxbasicresults.avglatency
rxbasicresults.prbsbiterrorratio rxbasicresults.prbserrorframecount
rxstreamblockresults.rxportname rxbasicresults.avgjitter
rxbasicresults.minjitter rxbasicresults.maxjitter
rxbasicresults.avginterarrivaltime rxbasicresults.mininterarrivaltime
rxbasicresults.maxinterarrivaltime rxbasicresults.inseqframecount
rxbasicresults.outseqframecount rxbasicresults.histbin1count
rxbasicresults.histbin2count rxbasicresults.histbin3count
rxbasicresults.histbin4count rxbasicresults.histbin5count
rxbasicresults.histbin6count rxbasicresults.histbin7count
rxbasicresults.histbin8count rxbasicresults.histbin9count
rxbasicresults.histbin10count rxbasicresults.histbin11count
rxbasicresults.histbin12count rxbasicresults.histbin13count
rxbasicresults.histbin14count rxbasicresults.histbin15count
rxbasicresults.histbin16count"
       PropertyHandleArray=""
       ResultOptions="Basic"
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 9">
      </ResultQuery>
      <RealTimeResultColumnDefinition id="129058" 
       ColumnClassName="StreamBlock"
       ColumnPropertyName="Name"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 176">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129059" 
       ColumnClassName="TxStreamBlockResults"
       ColumnPropertyName="FrameCount"
       ColumnDescription=""
       ColumnWidth="97"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 177">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129060" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="FrameCount"
       ColumnDescription=""
       ColumnWidth="97"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 178">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129061" 
       ColumnClassName="TxStreamBlockResults"
       ColumnPropertyName="FrameRate"
       ColumnDescription=""
       ColumnWidth="80"
       ColumnUnits="17"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 179">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129062" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="FrameRate"
       ColumnDescription=""
       ColumnWidth="80"
       ColumnUnits="17"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 180">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129063" 
       ColumnClassName="TxStreamBlockResults"
       ColumnPropertyName="BitRate"
       ColumnDescription=""
       ColumnWidth="90"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 181">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129064" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="BitRate"
       ColumnDescription=""
       ColumnWidth="90"
       ColumnUnits="5"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 182">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129065" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="SigFrameCount"
       ColumnDescription=""
       ColumnWidth="116"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 183">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129066" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="AvgLatency"
       ColumnDescription=""
       ColumnWidth="123"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 184">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129067" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MinLatency"
       ColumnDescription=""
       ColumnWidth="100"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 185">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129068" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MaxLatency"
       ColumnDescription=""
       ColumnWidth="103"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 186">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129069" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="AvgJitter"
       ColumnDescription=""
       ColumnWidth="88"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 187">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129070" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MinJitter"
       ColumnDescription=""
       ColumnWidth="86"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 188">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129071" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MaxJitter"
       ColumnDescription=""
       ColumnWidth="89"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 189">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129072" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="AvgInterarrivalTime"
       ColumnDescription=""
       ColumnWidth="172"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 190">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129073" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MinInterarrivalTime"
       ColumnDescription=""
       ColumnWidth="149"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 191">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129074" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="MaxInterarrivalTime"
       ColumnDescription=""
       ColumnWidth="152"
       ColumnUnits="22"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 192">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129075" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="Ipv4ChecksumErrorCount"
       ColumnDescription=""
       ColumnWidth="171"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 193">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129076" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="TcpUdpChecksumErrorCount"
       ColumnDescription=""
       ColumnWidth="194"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 194">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129077" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="PrbsBitErrorCount"
       ColumnDescription=""
       ColumnWidth="121"
       ColumnUnits="1"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 197">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129078" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="PrbsFillOctetCount"
       ColumnDescription=""
       ColumnWidth="123"
       ColumnUnits="12"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 198">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129079" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="PrbsBitErrorRatio"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 200">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129080" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="FcsErrorFrameCount"
       ColumnDescription=""
       ColumnWidth="148"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 201">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129081" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="PrbsErrorFrameCount"
       ColumnDescription=""
       ColumnWidth="121"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 202">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129082" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="InSeqFrameCount"
       ColumnDescription=""
       ColumnWidth="147"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 203">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129083" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="OutSeqFrameCount"
       ColumnDescription=""
       ColumnWidth="170"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 204">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129084" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="DroppedFrameCount"
       ColumnDescription=""
       ColumnWidth="127"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 205">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129085" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="DroppedFramePercent"
       ColumnDescription=""
       ColumnWidth="85"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 206">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129086" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="InOrderFrameCount"
       ColumnDescription=""
       ColumnWidth="126"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 207">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129087" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="ReorderedFrameCount"
       ColumnDescription=""
       ColumnWidth="136"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 208">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129088" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="DuplicateFrameCount"
       ColumnDescription=""
       ColumnWidth="131"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 209">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129089" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="LateFrameCount"
       ColumnDescription=""
       ColumnWidth="106"
       ColumnUnits="16"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 210">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129090" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin1Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 211">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129091" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin2Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 212">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129092" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin3Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 213">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129093" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin4Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 214">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129094" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin5Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 215">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129095" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin6Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 216">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129096" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin7Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 217">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129097" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin8Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 218">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129098" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin9Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 219">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129099" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin10Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 220">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129100" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin11Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 221">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129101" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin12Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 138">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129102" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin13Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 178">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129103" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin14Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 179">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129104" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin15Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 181">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129105" 
       ColumnClassName="RxStreamBlockResults"
       ColumnPropertyName="HistBin16Count"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 182">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="129106" 
       GroupName="Errors"
       GroupId="object://customgroup/43f59771-130a-4207-bd0a-83d79e3598be/Errors"
       ColumnClassName="TxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults"
       ColumnPropertyName="FrameCount FrameCount Ipv4ChecksumErrorCount
TcpUdpChecksumErrorCount PrbsBitErrorCount PrbsFillOctetCount PrbsBitErrorRatio
FcsErrorFrameCount PrbsErrorFrameCount"
       SqlString="select TxPortName as &apos;Tx Port&apos;, ActualRxPortList as
&apos;Rx Port&apos;, TxStreamBlockName as &apos;Stream Block&apos;,
TxSumFrameCount as &apos;Tx Count (Frames)&apos;, coalesce(RxSumFrameCount,0)
as &apos;Rx Count (Frames)&apos;, TxSumTxOctetCount as &apos;Tx Octet
Count&apos;, coalesce(RxSumIpv4ChecksumErrorCount,0) as &apos;Rx IPv4 Checksum
Error Count&apos;, coalesce(RxSumTcpUdpChecksumErrorCount,0) as &apos;Rx
TCP/UDP Checksum Error Count&apos;, coalesce(RxSumPrbsBitErrorCount,0) as
&apos;PRBS Bit Error Count&apos;, coalesce(RxSumPRBSBitErrorRatio,0) as
&apos;PRBS Bit Error Ratio&apos;, coalesce(RxSumFcsErrorFrameCount,0) as
&apos;Rx FCS Error Frame Count&apos;, coalesce(RxSumPrbsErrorFrameCount,0) as
&apos;PRBS Error Frame Count&apos; from (select TxParentHnd, TxPortName,
TxStreamBlockName, TxStreamIndex, TxStreamId, TxParentStreamBlock as
TxSumTxParentSBHnd, sum(TxFrameCount) as TxSumFrameCount, sum(TxOctetCount) as
TxSumTxOctetCount, sum(TxL1BitCount) as TxSumTxL1BitCount,
ExpectedRxPortHandle, ExpectedRxPortName, sum(ExpectedRxFrameCount) as
TxExpectedRxFrameCount, DataSetId, ParentHnd, PortName from (select * from
TxRxEotStreamResults group by DataSetId, TxStreamId) group by DataSetId,
TxParentStreamBlock limit @_offset,@_limit) as TxSumTable left join  (select
TxParentStreamBlock as RxSumTxParentSBHnd, sum(FrameCount) as RxSumFrameCount,
sum(OctetCount) as RxSumOctetCount, sum(SigFrameCount) as RxSumSigFrameCount,
sum(L1BitCount) as RxSumL1BitCount, sum(FcsErrorFrameCount) as
RxSumFcsErrorFrameCount, sum(InSeqFrameCount) as RxSumInSeqFrameCount,
sum(OutSeqFrameCount) as RxSumOutSeqFrameCount, sum(Ipv4ChecksumErrorCount) as
RxSumIpv4ChecksumErrorCount, sum(TcpUdpChecksumErrorCount) as
RxSumTcpUdpChecksumErrorCount, sum(PrbsBitErrorCount) as
RxSumPrbsBitErrorCount, sum(PrbsErrorFrameCount) as RxSumPrbsErrorFrameCount,
coalesce(round(cast(sum(PrbsBitErrorCount) as
double)/(sum(PrbsFillOctetCount)*8), 3), 0.0) as RxSumPRBSBitErrorRatio,
sum(FcsErrorFrameCount) as RxSumFcsErrorFrameCount, group_concat(distinct
ActualRxPortName) as ActualRxPortList from TxRxEotStreamResults where
IsExpectedPort = 1 group by DataSetId, TxParentStreamBlock) as RxSumTable on
TxSumTxParentSBHnd = RxSumTxParentSBHnd where DataSetId = @DataSetId"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 19">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129107" 
       GroupName="Basic Sequencing"
       GroupId="object://customgroup/632cf707-e985-4650-a4a4-ac00663c307d/Basic
Sequencing"
       ColumnClassName="TxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults"
       ColumnPropertyName="FrameCount FrameCount InSeqFrameCount
OutSeqFrameCount"
       SqlString="select TxPortName as &apos;Tx Port&apos;, ActualRxPortList as
&apos;Rx Port&apos;, TxStreamBlockName as &apos;Stream Block&apos;,
TxSumFrameCount as &apos;Tx Count (Frames)&apos;, coalesce(RxSumFrameCount,0)
as &apos;Rx Count (Frames)&apos;, coalesce(RxSumSeqRunLength,0) as
&apos;Sequence Run Length&apos;, coalesce(RxSumInSeqFrameCount,0) as &apos;In
Seq Count (Frames)&apos;, coalesce(RxSumOutSeqFrameCount,0) as &apos;Out of Seq
Count (Frames)&apos;  from (select TxParentHnd, TxPortName, TxStreamBlockName,
TxStreamIndex, TxStreamId, TxParentStreamBlock as TxSumTxParentSBHnd,
sum(TxFrameCount) as TxSumFrameCount, sum(TxOctetCount) as TxSumTxOctetCount,
sum(TxL1BitCount) as TxSumTxL1BitCount, ExpectedRxPortHandle,
ExpectedRxPortName, sum(ExpectedRxFrameCount) as TxExpectedRxFrameCount,
DataSetId, ParentHnd, PortName from (select * from TxRxEotStreamResults group
by DataSetId, TxStreamId) group by DataSetId, TxParentStreamBlock limit
@_offset,@_limit) as TxSumTable left join  (select TxParentStreamBlock as
RxSumTxParentSBHnd, sum(FrameCount) as RxSumFrameCount, sum(OctetCount) as
RxSumOctetCount, sum(SigFrameCount) as RxSumSigFrameCount, sum(SeqRunLength) as
RxSumSeqRunLength, sum(InSeqFrameCount) as RxSumInSeqFrameCount,
sum(OutSeqFrameCount) as RxSumOutSeqFrameCount, group_concat(distinct
ActualRxPortName) as ActualRxPortList from TxRxEotStreamResults where
IsExpectedPort = 1 group by DataSetId, TxParentStreamBlock) as RxSumTable on
TxSumTxParentSBHnd = RxSumTxParentSBHnd where DataSetId = @DataSetId"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 20">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129108" 
       GroupName="Advanced Sequencing"
       GroupId="object://customgroup/aa9022f0-5dff-4079-b5e9-17ce0c4294e1/Advanced
Sequencing"
       ColumnClassName="TxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults"
       ColumnPropertyName="FrameCount FrameCount DroppedFrameCount
DroppedFramePercent InOrderFrameCount ReorderedFrameCount DuplicateFrameCount
LateFrameCount"
       SqlString="select TxPortName as &apos;Tx Port&apos;, ActualRxPortList as
&apos;Rx Port&apos;, TxStreamBlockName as &apos;Stream Block&apos;,
TxSumFrameCount as &apos;Tx Count (Frames)&apos;, coalesce(RxSumFrameCount,0)
as &apos;Rx Count (Frames)&apos;, (case when
(coalesce(TxExpectedRxFrameCount,0) - coalesce(RxSumFrameCount, 0)) &lt; 0 then
&apos;&apos; else coalesce(TxExpectedRxFrameCount,0) -
coalesce(RxSumFrameCount,0) end) as &apos;Tx-Rx (Frames)&apos;, (case when
(coalesce(TxExpectedRxFrameCount,0) - coalesce(RxSumFrameCount, 0)) &lt; 0 then
&apos;&apos; else round(cast(coalesce(TxExpectedRxFrameCount,0) -
coalesce(RxSumFrameCount, 0) as double) * 100.0 /
coalesce(TxExpectedRxFrameCount,1), 5) end) as &apos;Tx-Rx (%)&apos;,
coalesce(TxExpectedRxFrameCount,0) as &apos;Expected Rx Count (Frames)&apos;,
coalesce(RxSumDroppedFrameCount,0) as &apos;Dropped Frame Count&apos;,
round(cast(coalesce(RxSumDroppedFrameCount, 0) as double) * 100.0 /
coalesce(TxExpectedRxFrameCount,1), 5) as &apos;Dropped Frame (%)&apos;,
coalesce(RxSumInOrderFrameCount,0) as &apos;In-order Count (Frames)&apos;,
coalesce(RxSumReorderedFrameCount,0) as &apos;Reordered Count (Frames)&apos;,
coalesce(RxSumDuplicateFrameCount,0) as &apos;Duplicate Count (Frames)&apos;,
coalesce(RxSumLateFrameCount,0) as &apos;Late Count (Frames)&apos;  from
(select TxParentHnd, TxPortName, TxStreamBlockName, TxStreamIndex, TxStreamId,
TxParentStreamBlock as TxSumTxParentSBHnd, sum(TxFrameCount) as
TxSumFrameCount, sum(TxOctetCount) as TxSumTxOctetCount, sum(TxL1BitCount) as
TxSumTxL1BitCount, ExpectedRxPortHandle, ExpectedRxPortName,
sum(ExpectedRxFrameCount) as TxExpectedRxFrameCount, DataSetId, ParentHnd,
PortName from (select * from TxRxEotStreamResults group by DataSetId,
TxStreamId) group by DataSetId, TxParentStreamBlock limit @_offset,@_limit) as
TxSumTable left join  (select TxParentStreamBlock as RxSumTxParentSBHnd,
sum(FrameCount) as RxSumFrameCount, sum(InOrderFrameCount) as
RxSumInOrderFrameCount, sum(ReorderedFrameCount) as RxSumReorderedFrameCount,
sum(duplicateFrameCount) as RxSumDuplicateFrameCount, sum(LateFrameCount) as
RxSumLateFrameCount, group_concat(distinct ActualRxPortName) as
ActualRxPortList, sum(DroppedFrameCount) as RxSumDroppedFrameCount  from
TxRxEotStreamResults where IsExpectedPort = 1 group by DataSetId,
TxParentStreamBlock) as RxSumTable on TxSumTxParentSBHnd = RxSumTxParentSBHnd
where DataSetId = @DataSetId"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 21">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129109" 
       GroupName="Histograms"
       GroupId="object://customgroup/4c2ca0de-93f0-43e8-b5c0-5d7c9c4704fb/Histograms"
       ColumnClassName="TxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults RxStreamBlockResults RxStreamBlockResults
RxStreamBlockResults"
       ColumnPropertyName="FrameCount FrameCount HistBin1Count HistBin2Count
HistBin3Count HistBin4Count HistBin5Count HistBin6Count HistBin7Count
HistBin8Count HistBin9Count HistBin10Count HistBin11Count HistBin12Count
HistBin13Count HistBin14Count HistBin15Count HistBin16Count"
       SqlString="select TxPortName as &apos;Tx Port&apos;, ActualRxPortList as
&apos;Rx Port&apos;, TxStreamBlockName as &apos;Stream Block&apos;,
TxSumFrameCount as &apos;Tx Count (Frames)&apos;, coalesce(RxSumFrameCount, 0)
as &apos;Rx Count (Frames)&apos;, coalesce(RxSumHistBin1Count, 0) as
&apos;Bucket 1&apos;, coalesce(RxSumHistBin2Count,0) as &apos;Bucket 2&apos;,
coalesce(RxSumHistBin3Count,0) as &apos;Bucket 3&apos;,
coalesce(RxSumHistBin4Count,0) as &apos;Bucket 4&apos;,
coalesce(RxSumHistBin5Count,0) as &apos;Bucket 5&apos;,
coalesce(RxSumHistBin6Count,0) as &apos;Bucket 6&apos;,
coalesce(RxSumHistBin7Count,0) as &apos;Bucket 7&apos;,
coalesce(RxSumHistBin8Count,0) as &apos;Bucket 8&apos;,
coalesce(RxSumHistBin9Count,0) as &apos;Bucket 9&apos;,
coalesce(RxSumHistBin10Count,0) as &apos;Bucket 10&apos;,
coalesce(RxSumHistBin11Count,0) as &apos;Bucket 11&apos;,
coalesce(RxSumHistBin12Count,0) as &apos;Bucket 12&apos;,
coalesce(RxSumHistBin13Count,0) as &apos;Bucket 13&apos;,
coalesce(RxSumHistBin14Count,0) as &apos;Bucket 14&apos;,
coalesce(RxSumHistBin15Count,0) as &apos;Bucket 15&apos;,
coalesce(RxSumHistBin16Count,0) as &apos;Bucket 16&apos;  from (select
TxParentHnd, TxPortName, TxStreamBlockName, TxStreamIndex, TxStreamId,
TxParentStreamBlock as TxSumTxParentSBHnd, sum(TxFrameCount) as
TxSumFrameCount, sum(TxOctetCount) as TxSumTxOctetCount, sum(TxL1BitCount) as
TxSumTxL1BitCount, ExpectedRxPortHandle, ExpectedRxPortName,
sum(ExpectedRxFrameCount) as TxExpectedRxFrameCount, DataSetId, ParentHnd,
PortName from (select * from TxRxEotStreamResults group by DataSetId,
TxStreamId) group by DataSetId, TxParentStreamBlock limit @_offset, @_limit) as
TxSumTable left join (select TxParentStreamBlock as RxSumTxParentSBHnd,
sum(FrameCount) as RxSumFrameCount, sum(HistBin1Count) as RxSumHistBin1Count,
sum(HistBin2Count) as RxSumHistBin2Count,sum(HistBin3Count) as
RxSumHistBin3Count,sum(HistBin4Count) as RxSumHistBin4Count,sum(HistBin5Count)
as RxSumHistBin5Count,sum(HistBin6Count) as
RxSumHistBin6Count,sum(HistBin7Count) as RxSumHistBin7Count,sum(HistBin8Count)
as RxSumHistBin8Count,sum(HistBin9Count) as
RxSumHistBin9Count,sum(HistBin10Count) as
RxSumHistBin10Count,sum(HistBin11Count) as
RxSumHistBin11Count,sum(HistBin12Count) as
RxSumHistBin12Count,sum(HistBin13Count) as
RxSumHistBin13Count,sum(HistBin14Count) as
RxSumHistBin14Count,sum(HistBin15Count) as
RxSumHistBin15Count,sum(HistBin16Count) as RxSumHistBin16Count,
group_concat(distinct ActualRxPortName) as ActualRxPortList  from
TxRxEotStreamResults where IsExpectedPort = 1 group by DataSetId,
TxParentStreamBlock) as RxSumTable on TxSumTxParentSBHnd = RxSumTxParentSBHnd
where DataSetId = @DataSetId"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 22">
      </RealTimeResultGroupDefinition>
    </ResultDataSet>
    <ResultDataSet id="129110" 
     PrimaryClass="Host"
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="1000"
     Identifier="Host Protocols\DHCP Results"
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path="Access Protocols"
     ResultViewOwner="SYSTEM"
     Description="object://core/Host"
     CustomDisplayName=""
     CustomDisplayPath="Access\DHCP"
     Active="TRUE"
     LocalActive="TRUE"
     Name="DHCP Results">
      <RealTimeResultColumnDefinition id="129111" 
       ColumnClassName="Port"
       ColumnPropertyName="Name"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 211">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129112" 
       ColumnClassName="EmulatedDevice"
       ColumnPropertyName="Name"
       ColumnDescription="DescribeMe"
       ColumnWidth="72"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 212">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="129113" 
       GroupName="All Groups"
       GroupId="core://allgroups/"
       ColumnClassName="Port EmulatedDevice"
       ColumnPropertyName="Name Name"
       SqlString=""
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 21">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129114" 
       GroupName="DHCP Results"
       GroupId="object://customgroup/3fbe1ac1-b979-476c-92dc-fa4d2859e59c/Main"
       ColumnClassName="Dhcpv4BlockConfig Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults
Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults Dhcpv4BlockResults"
       ColumnPropertyName="BlockState ElapsedTime CurrentAttemptCount
CurrentIdleCount CurrentBoundCount TotalAttemptCount TotalBoundCount
TotalFailedCount TotalRetriedCount TotalRenewedCount TotalRebootedCount
BindRate AttemptRate TxDiscoverCount RxOfferCount TxRequestCount TxRenewCount
TxRebindCount TxRebootCount RxAckCount TxReleaseCount RxNakCount
RxForceRenewCount TxDnav4RequestCount RxDnav4ReplyCount Dnav4RetryCount
Dnav4FailedCount"
       SqlString="SELECT Port.Name AS &apos;Port Name&apos;,
EmulatedDevice.Name AS &apos;Device Name&apos;, Dhcpv4BlockConfig.BlockState AS
&apos;State&apos;, Dhcpv4BlockResults.ElapsedTime AS &apos;Elapsed Time
(seconds)&apos;, Dhcpv4BlockResults.CurrentAttemptCount AS &apos;Currently
Attempting&apos;, Dhcpv4BlockResults.CurrentIdleCount AS &apos;Currently
Idle&apos;, Dhcpv4BlockResults.CurrentBoundCount AS &apos;Currently
Bound&apos;, Dhcpv4BlockResults.TotalAttemptCount AS &apos;Total
Attempted&apos;, Dhcpv4BlockResults.TotalBoundCount AS &apos;Total Bound&apos;,
Dhcpv4BlockResults.TotalFailedCount AS &apos;Total Failed&apos;,
Dhcpv4BlockResults.TotalRetriedCount AS &apos;Total Retried&apos;,
Dhcpv4BlockResults.TotalRenewedCount AS &apos;Total Renewed&apos;,
Dhcpv4BlockResults.TotalRebootedCount AS &apos;Total Init-Rebooted&apos;,
Dhcpv4BlockResults.BindRate AS &apos;Bind Rate (sessions/sec)&apos;,
Dhcpv4BlockResults.AttemptRate AS &apos;Attempt Rate (sessions/sec)&apos;,
Dhcpv4BlockResults.TxDiscoverCount AS &apos;Discover Tx Count&apos;,
Dhcpv4BlockResults.RxOfferCount AS &apos;Offer Rx Count&apos;,
Dhcpv4BlockResults.TxRequestCount AS &apos;Request Tx Count&apos;,
Dhcpv4BlockResults.TxRenewCount AS &apos;Renew Tx Count&apos;,
Dhcpv4BlockResults.TxRebindCount AS &apos;Rebind Tx Count&apos;,
Dhcpv4BlockResults.TxRebootCount AS &apos;Init-Reboot Tx Count&apos;,
Dhcpv4BlockResults.RxAckCount AS &apos;ACK Rx Count&apos;,
Dhcpv4BlockResults.TxReleaseCount AS &apos;Release Tx Count&apos;,
Dhcpv4BlockResults.RxNakCount AS &apos;NAK Rx Count&apos;,
Dhcpv4BlockResults.RxForceRenewCount AS &apos;Force Renew Rx Count&apos;,
Dhcpv4BlockResults.TxDnav4RequestCount AS &apos;DNAv4 Request Tx Count&apos;,
Dhcpv4BlockResults.RxDnav4ReplyCount AS &apos;DNAv4 Reply Rx Count&apos;,
Dhcpv4BlockResults.Dnav4RetryCount AS &apos;DNAv4 Retry Count&apos;,
Dhcpv4BlockResults.Dnav4FailedCount AS &apos;DNAv4 Failed Count&apos; FROM
AllDevice AS EmulatedDevice, Port, Dhcpv4BlockConfig, Dhcpv4BlockResults,
RelationTable  WHERE (  RelationTable.Type = &apos;AffiliationPort&apos; AND 
RelationTable.SourceHnd = EmulatedDevice.Handle AND  RelationTable.TargetHnd =
Port.Handle AND Dhcpv4BlockConfig.ParentHnd = EmulatedDevice.Handle AND
Dhcpv4BlockResults.ParentHnd = Dhcpv4BlockConfig.Handle AND
EmulatedDevice.DataSetId = @DataSetId AND Port.DataSetId = @DataSetId AND
Dhcpv4BlockConfig.DataSetId = @DataSetId AND Dhcpv4BlockResults.DataSetId =
@DataSetId  AND RelationTable.DataSetId = @DataSetId ) UNION SELECT
ExternalDevicePort.Name AS &apos;Port Name&apos;, EmulatedDevice.Name AS
&apos;Device Name&apos;, Dhcpv4BlockConfig.BlockState AS &apos;State&apos;,
Dhcpv4BlockResults.ElapsedTime AS &apos;Elapsed Time (seconds)&apos;,
Dhcpv4BlockResults.CurrentAttemptCount AS &apos;Currently Attempting&apos;,
Dhcpv4BlockResults.CurrentIdleCount AS &apos;Currently Idle&apos;,
Dhcpv4BlockResults.CurrentBoundCount AS &apos;Currently Bound&apos;,
Dhcpv4BlockResults.TotalAttemptCount AS &apos;Total Attempted&apos;,
Dhcpv4BlockResults.TotalBoundCount AS &apos;Total Bound&apos;,
Dhcpv4BlockResults.TotalFailedCount AS &apos;Total Failed&apos;,
Dhcpv4BlockResults.TotalRetriedCount AS &apos;Total Retried&apos;,
Dhcpv4BlockResults.TotalRenewedCount AS &apos;Total Renewed&apos;,
Dhcpv4BlockResults.TotalRebootedCount AS &apos;Total Init-Rebooted&apos;,
Dhcpv4BlockResults.BindRate AS &apos;Bind Rate (sessions/sec)&apos;,
Dhcpv4BlockResults.AttemptRate AS &apos;Attempt Rate (sessions/sec)&apos;,
Dhcpv4BlockResults.TxDiscoverCount AS &apos;Discover Tx Count&apos;,
Dhcpv4BlockResults.RxOfferCount AS &apos;Offer Rx Count&apos;,
Dhcpv4BlockResults.TxRequestCount AS &apos;Request Tx Count&apos;,
Dhcpv4BlockResults.TxRenewCount AS &apos;Renew Tx Count&apos;,
Dhcpv4BlockResults.TxRebindCount AS &apos;Rebind Tx Count&apos;,
Dhcpv4BlockResults.TxRebootCount AS &apos;Init-Reboot Tx Count&apos;,
Dhcpv4BlockResults.RxAckCount AS &apos;ACK Rx Count&apos;,
Dhcpv4BlockResults.TxReleaseCount AS &apos;Release Tx Count&apos;,
Dhcpv4BlockResults.RxNakCount AS &apos;NAK Rx Count&apos;,
Dhcpv4BlockResults.RxForceRenewCount AS &apos;Force Renew Rx Count&apos;,
Dhcpv4BlockResults.TxDnav4RequestCount AS &apos;DNAv4 Request Tx Count&apos;,
Dhcpv4BlockResults.RxDnav4ReplyCount AS &apos;DNAv4 Reply Rx Count&apos;,
Dhcpv4BlockResults.Dnav4RetryCount AS &apos;DNAv4 Retry Count&apos;,
Dhcpv4BlockResults.Dnav4FailedCount AS &apos;DNAv4 Failed Count&apos; FROM
AllDevice AS EmulatedDevice, ExternalDevicePort, Dhcpv4BlockConfig,
Dhcpv4BlockResults, Port, RelationTable  WHERE (  RelationTable.Type =
&apos;AffiliationPort&apos; AND  RelationTable.SourceHnd =
EmulatedDevice.Handle AND  RelationTable.TargetHnd = Port.Handle AND
Dhcpv4BlockConfig.ParentHnd = EmulatedDevice.Handle AND
Dhcpv4BlockResults.ParentHnd = Dhcpv4BlockConfig.Handle AND
EmulatedDevice.DataSetId = @DataSetId AND ExternalDevicePort.DataSetId =
@DataSetId AND Dhcpv4BlockConfig.DataSetId = @DataSetId AND
Dhcpv4BlockResults.DataSetId = @DataSetId AND Port.DataSetId = @DataSetId  AND
RelationTable.DataSetId = @DataSetId ) "
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 22">
      </RealTimeResultGroupDefinition>
      <ResultQuery id="129115" 
       ConfigClassId="dhcpv4blockconfig"
       ResultClassId="dhcpv4blockresults"
       ResultRootList="2"
       PropertyIdArray="dhcpv4blockresults.elapsedtime
dhcpv4blockresults.currentattemptcount dhcpv4blockresults.currentidlecount
dhcpv4blockresults.currentboundcount dhcpv4blockresults.totalattemptcount
dhcpv4blockresults.totalboundcount dhcpv4blockresults.totalrenewedcount
dhcpv4blockresults.totalfailedcount dhcpv4blockresults.totalretriedcount
dhcpv4blockresults.bindrate dhcpv4blockresults.attemptrate
dhcpv4blockresults.txdiscovercount dhcpv4blockresults.rxoffercount
dhcpv4blockresults.txrequestcount dhcpv4blockresults.txrenewcount
dhcpv4blockresults.txrebindcount dhcpv4blockresults.rxackcount
dhcpv4blockresults.txreleasecount dhcpv4blockresults.rxnakcount
dhcpv4blockresults.rxforcerenewcount dhcpv4blockresults.totalrebootedcount
dhcpv4blockresults.txrebootcount dhcpv4blockresults.txdnav4requestcount
dhcpv4blockresults.rxdnav4replycount dhcpv4blockresults.dnav4retrycount
dhcpv4blockresults.dnav4failedcount"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 10">
      </ResultQuery>
      <RealTimeResultColumnDefinition id="129116" 
       ColumnClassName="Dhcpv4BlockConfig"
       ColumnPropertyName="BlockState"
       ColumnDescription=""
       ColumnWidth="80"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 213">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129117" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="ElapsedTime"
       ColumnDescription=""
       ColumnWidth="76"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 214">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129118" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="CurrentAttemptCount"
       ColumnDescription=""
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 215">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129119" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="CurrentIdleCount"
       ColumnDescription=""
       ColumnWidth="58"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 216">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129120" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="CurrentBoundCount"
       ColumnDescription=""
       ColumnWidth="59"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 217">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129121" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalAttemptCount"
       ColumnDescription=""
       ColumnWidth="68"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 218">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129122" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalBoundCount"
       ColumnDescription=""
       ColumnWidth="47"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 219">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129123" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalFailedCount"
       ColumnDescription=""
       ColumnWidth="42"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 220">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129124" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalRetriedCount"
       ColumnDescription=""
       ColumnWidth="50"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 221">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129125" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalRenewedCount"
       ColumnDescription=""
       ColumnWidth="58"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 222">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129126" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TotalRebootedCount"
       ColumnDescription=""
       ColumnWidth="59"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 223">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129127" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="BindRate"
       ColumnDescription=""
       ColumnWidth="82"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 224">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129128" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="AttemptRate"
       ColumnDescription=""
       ColumnWidth="83"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 225">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129129" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxDiscoverCount"
       ColumnDescription=""
       ColumnWidth="56"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 226">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129130" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="RxOfferCount"
       ColumnDescription=""
       ColumnWidth="56"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 227">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129131" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxRequestCount"
       ColumnDescription=""
       ColumnWidth="60"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 228">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129132" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxRenewCount"
       ColumnDescription=""
       ColumnWidth="60"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 229">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129133" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxRebindCount"
       ColumnDescription=""
       ColumnWidth="60"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 230">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129134" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxRebootCount"
       ColumnDescription=""
       ColumnWidth="68"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 231">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129135" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="RxAckCount"
       ColumnDescription=""
       ColumnWidth="45"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 232">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129136" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxReleaseCount"
       ColumnDescription=""
       ColumnWidth="65"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 233">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129137" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="RxNakCount"
       ColumnDescription=""
       ColumnWidth="54"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 234">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129138" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="RxForceRenewCount"
       ColumnDescription=""
       ColumnWidth="74"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 235">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129139" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="TxDnav4RequestCount"
       ColumnDescription=""
       ColumnWidth="59"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 236">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129140" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="RxDnav4ReplyCount"
       ColumnDescription=""
       ColumnWidth="68"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 237">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129141" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="Dnav4RetryCount"
       ColumnDescription=""
       ColumnWidth="59"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 238">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129142" 
       ColumnClassName="Dhcpv4BlockResults"
       ColumnPropertyName="Dnav4FailedCount"
       ColumnDescription=""
       ColumnWidth="68"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 239">
      </RealTimeResultColumnDefinition>
    </ResultDataSet>
    <ResultDataSet id="129143" 
     PrimaryClass="Port"
     InternalXmlFormatString=""
     ResultFilterMode="32"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="1000"
     Identifier="Port Traffic\Port Average Latency Results"
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path="Port Traffic"
     ResultViewOwner="SYSTEM"
     Description="object://l2l3/PortAvgLatencyResults"
     CustomDisplayName=""
     CustomDisplayPath="Port Traffic and Counters"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Port Average Latency Results">
      <RealTimeResultColumnDefinition id="129144" 
       ColumnClassName="Port"
       ColumnPropertyName="Name"
       ColumnDescription="DescribeMe"
       ColumnWidth="70"
       ColumnUnits="0"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 123">
      </RealTimeResultColumnDefinition>
      <RealTimeResultGroupDefinition id="129145" 
       GroupName="All Groups"
       GroupId="core://allgroups/"
       ColumnClassName="Port"
       ColumnPropertyName="Name"
       SqlString=""
       UseCustomSqlString="FALSE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 9">
      </RealTimeResultGroupDefinition>
      <RealTimeResultGroupDefinition id="129146" 
       GroupName="Port Avg Latency Results"
       GroupId="object://customgroup/94c85199-06dd-4125-9ef2-b4ae9a3d67fd/Port
Avg Latency Results"
       ColumnClassName="PortAvgLatencyResults PortAvgLatencyResults
PortAvgLatencyResults"
       ColumnPropertyName="AvgLatency MinLatency MaxLatency"
       SqlString=" SELECT Port.Name AS &apos;Port Name&apos;,
coalesce(PortAvgLatencyResults.AvgLatency, 0.0) AS &apos;Average Latency
(us)&apos;, coalesce(PortAvgLatencyResults.MinLatency, 0.0) AS &apos;Min
Latency (us)&apos;, coalesce(PortAvgLatencyResults.MaxLatency,0.0) AS &apos;Max
Latency (us)&apos; FROM Port, PortAvgLatencyResults, Analyzer WHERE (
Analyzer.ParentHnd = Port.Handle AND PortAvgLatencyResults.ParentHnd =
Analyzer.Handle AND Port.DataSetId = @DataSetId AND
PortAvgLatencyResults.DataSetId = @DataSetId AND Analyzer.DataSetId =
@DataSetId  )"
       UseCustomSqlString="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultGroupDefinition 10">
      </RealTimeResultGroupDefinition>
      <ResultQuery id="129147" 
       ConfigClassId="analyzer"
       ResultClassId="portavglatencyresults"
       ResultRootList="2"
       PropertyIdArray="portavglatencyresults.avglatency
portavglatencyresults.minlatency portavglatencyresults.maxlatency"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 5">
      </ResultQuery>
      <RealTimeResultColumnDefinition id="129148" 
       ColumnClassName="PortAvgLatencyResults"
       ColumnPropertyName="AvgLatency"
       ColumnDescription=""
       ColumnWidth="123"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 124">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129149" 
       ColumnClassName="PortAvgLatencyResults"
       ColumnPropertyName="MinLatency"
       ColumnDescription=""
       ColumnWidth="100"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 125">
      </RealTimeResultColumnDefinition>
      <RealTimeResultColumnDefinition id="129150" 
       ColumnClassName="PortAvgLatencyResults"
       ColumnPropertyName="MaxLatency"
       ColumnDescription=""
       ColumnWidth="103"
       ColumnUnits="9"
       ColumnPrecision="2"
       ColumnSortType="NONE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="RealTimeResultColumnDefinition 126">
      </RealTimeResultColumnDefinition>
    </ResultDataSet>
    <ResultDataSet id="129151" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 3855">
      <ResultQuery id="129152" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 4846">
      </ResultQuery>
    </ResultDataSet>
    <StmExposedConfig id="129153" 
     MethodologyKey="IEEE8021QOS"
     MethodologyDisplayName="L2 QoS VLAN Validation"
     MethodologyDescription="Tests the ability of a SUT to satisfy its QoS
operation using the Priority field of VLAN tags (IEEE 802.1Q)."
     Active="TRUE"
     LocalActive="TRUE"
     Name="StmExposedConfig 3">
      <StmExposedProperty id="129154" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3615/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 0."
       EpDisplayName="Priority 0 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3615"
       EpMetaPropertyName="TxLoadPri0MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:02"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11903">
        <Relation type="ScriptableExposedProperty" target="129313"/>
      </StmExposedProperty>
      <StmExposedProperty id="129155" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3615/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 0."
       EpDisplayName="Priority 0 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3615"
       EpMetaPropertyName="TxLoadPri0MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11905">
        <Relation type="ScriptableExposedProperty" target="129313"/>
      </StmExposedProperty>
      <StmExposedProperty id="129156" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3615/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 0."
       EpDisplayName="Priority 0 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3615"
       EpMetaPropertyName="TxLoadPri0VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="100"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11908">
        <Relation type="ScriptableExposedProperty" target="129313"/>
      </StmExposedProperty>
      <StmExposedProperty id="129157" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3616/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 1."
       EpDisplayName="Priority 1 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3616"
       EpMetaPropertyName="TxLoadPri1MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:03"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11954">
        <Relation type="ScriptableExposedProperty" target="129314"/>
      </StmExposedProperty>
      <StmExposedProperty id="129158" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3616/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 1."
       EpDisplayName="Priority 1 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3616"
       EpMetaPropertyName="TxLoadPri1MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11956">
        <Relation type="ScriptableExposedProperty" target="129314"/>
      </StmExposedProperty>
      <StmExposedProperty id="129159" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3616/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 1."
       EpDisplayName="Priority 1 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3616"
       EpMetaPropertyName="TxLoadPri1VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="101"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 11959">
        <Relation type="ScriptableExposedProperty" target="129314"/>
      </StmExposedProperty>
      <StmExposedProperty id="129160" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3617/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 2."
       EpDisplayName="Priority 2 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3617"
       EpMetaPropertyName="TxLoadPri2MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:04"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12005">
        <Relation type="ScriptableExposedProperty" target="129315"/>
      </StmExposedProperty>
      <StmExposedProperty id="129161" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3617/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 2."
       EpDisplayName="Priority 2 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3617"
       EpMetaPropertyName="TxLoadPri2MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12007">
        <Relation type="ScriptableExposedProperty" target="129315"/>
      </StmExposedProperty>
      <StmExposedProperty id="129162" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3617/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 2."
       EpDisplayName="Priority 2 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3617"
       EpMetaPropertyName="TxLoadPri2VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="102"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12010">
        <Relation type="ScriptableExposedProperty" target="129315"/>
      </StmExposedProperty>
      <StmExposedProperty id="129163" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3618/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 3."
       EpDisplayName="Priority 3 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3618"
       EpMetaPropertyName="TxLoadPri3MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:05"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12056">
        <Relation type="ScriptableExposedProperty" target="129316"/>
      </StmExposedProperty>
      <StmExposedProperty id="129164" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3618/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 3."
       EpDisplayName="Priority 3 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3618"
       EpMetaPropertyName="TxLoadPri3MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12058">
        <Relation type="ScriptableExposedProperty" target="129316"/>
      </StmExposedProperty>
      <StmExposedProperty id="129165" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3618/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 3."
       EpDisplayName="Priority 3 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3618"
       EpMetaPropertyName="TxLoadPri3VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="103"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12061">
        <Relation type="ScriptableExposedProperty" target="129316"/>
      </StmExposedProperty>
      <StmExposedProperty id="129166" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3619/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 4."
       EpDisplayName="Priority 4 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3619"
       EpMetaPropertyName="TxLoadPri4MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:06"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12107">
        <Relation type="ScriptableExposedProperty" target="129317"/>
      </StmExposedProperty>
      <StmExposedProperty id="129167" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3619/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 4."
       EpDisplayName="Priority 4 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3619"
       EpMetaPropertyName="TxLoadPri4MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12109">
        <Relation type="ScriptableExposedProperty" target="129317"/>
      </StmExposedProperty>
      <StmExposedProperty id="129168" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3619/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 4."
       EpDisplayName="Priority 4 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3619"
       EpMetaPropertyName="TxLoadPri4VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="104"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12112">
        <Relation type="ScriptableExposedProperty" target="129317"/>
      </StmExposedProperty>
      <StmExposedProperty id="129169" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3620/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 5."
       EpDisplayName="Priority 5 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3620"
       EpMetaPropertyName="TxLoadPri5MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:07"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12158">
        <Relation type="ScriptableExposedProperty" target="129318"/>
      </StmExposedProperty>
      <StmExposedProperty id="129170" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3620/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 5."
       EpDisplayName="Priority 5 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3620"
       EpMetaPropertyName="TxLoadPri5MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12160">
        <Relation type="ScriptableExposedProperty" target="129318"/>
      </StmExposedProperty>
      <StmExposedProperty id="129171" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3620/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 5."
       EpDisplayName="Priority 5 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3620"
       EpMetaPropertyName="TxLoadPri5VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="105"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12163">
        <Relation type="ScriptableExposedProperty" target="129318"/>
      </StmExposedProperty>
      <StmExposedProperty id="129172" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3621/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxLoad Priority 6."
       EpDisplayName="Priority 6 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3621"
       EpMetaPropertyName="TxLoadPri6MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:08"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12209">
        <Relation type="ScriptableExposedProperty" target="129319"/>
      </StmExposedProperty>
      <StmExposedProperty id="129173" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3621/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxLoad Priority 6."
       EpDisplayName="Priority 6 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3621"
       EpMetaPropertyName="TxLoadPri6MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12211">
        <Relation type="ScriptableExposedProperty" target="129319"/>
      </StmExposedProperty>
      <StmExposedProperty id="129174" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129310/spirent.methodology.createtemplateconfigcommand.inputjson.3621/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxLoad Priority 6."
       EpDisplayName="Priority 6 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3621"
       EpMetaPropertyName="TxLoadPri6VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="106"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 12214">
        <Relation type="ScriptableExposedProperty" target="129319"/>
      </StmExposedProperty>
      <StmExposedProperty id="129175" 
       EpPath=""
       EpDescription="TxLoad Port Group will be transmitting traffic with
Priority 0-6, each at 12.5%."
       EpDisplayName="TxLoad Port Group: Priority 0-6"
       EpTargetClassId="tag"
       EpTargetPropertyId="scriptable.name"
       EpPropertyId="tag.name.2551"
       EpMetaPropertyName="TxLoadPortGroup"
       EpPropertyJsonId=""
       EpPropertyType="STRING"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="TxLoadPortGroup"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 17679">
        <Relation type="ScriptableExposedProperty" target="128382"/>
      </StmExposedProperty>
      <StmExposedProperty id="129176" 
       EpPath=""
       EpDescription="TxTest Port Group will be transmitting traffic with
Priority 7, starting at and incrementing by 12.5%."
       EpDisplayName="TxTest Port Group: Priority 7"
       EpTargetClassId="tag"
       EpTargetPropertyId="scriptable.name"
       EpPropertyId="tag.name.2569"
       EpMetaPropertyName="TxTestPortGroup"
       EpPropertyJsonId=""
       EpPropertyType="STRING"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="TxTestPortGroup"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 17680">
        <Relation type="ScriptableExposedProperty" target="128383"/>
      </StmExposedProperty>
      <StmExposedProperty id="129177" 
       EpPath=""
       EpDescription="Rx Port Group will be the endpoint to receive the traffic
transmitted by TxLoad and TxTest."
       EpDisplayName="Rx Port Group: Priority 0-7"
       EpTargetClassId="tag"
       EpTargetPropertyId="scriptable.name"
       EpPropertyId="tag.name.2579"
       EpMetaPropertyName="RxPortGroup"
       EpPropertyJsonId=""
       EpPropertyType="STRING"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="RxPortGroup"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 17681">
        <Relation type="ScriptableExposedProperty" target="128384"/>
      </StmExposedProperty>
      <StmExposedProperty id="129178" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129320/spirent.methodology.createtemplateconfigcommand.inputjson.3623/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for TxTest Priority 7."
       EpDisplayName="Priority 7 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3623"
       EpMetaPropertyName="TxTestPri7MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:94:00:00:09"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 24061">
        <Relation type="ScriptableExposedProperty" target="129321"/>
      </StmExposedProperty>
      <StmExposedProperty id="129179" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129320/spirent.methodology.createtemplateconfigcommand.inputjson.3623/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for TxTest Priority 7."
       EpDisplayName="Priority 7 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3623"
       EpMetaPropertyName="TxTestPri7MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 24063">
        <Relation type="ScriptableExposedProperty" target="129321"/>
      </StmExposedProperty>
      <StmExposedProperty id="129180" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129320/spirent.methodology.createtemplateconfigcommand.inputjson.3623/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for TxTest Priority 7."
       EpDisplayName="Priority 7 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3623"
       EpMetaPropertyName="TxTestPri7VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="107"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 24066">
        <Relation type="ScriptableExposedProperty" target="129321"/>
      </StmExposedProperty>
      <StmExposedProperty id="129181" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3625/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 0."
       EpDisplayName="Priority 0 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3625"
       EpMetaPropertyName="RxLoadPri0MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:02"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30034">
        <Relation type="ScriptableExposedProperty" target="129323"/>
      </StmExposedProperty>
      <StmExposedProperty id="129182" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3625/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 0."
       EpDisplayName="Priority 0 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3625"
       EpMetaPropertyName="RxLoadPri0MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30036">
        <Relation type="ScriptableExposedProperty" target="129323"/>
      </StmExposedProperty>
      <StmExposedProperty id="129183" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3625/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 0."
       EpDisplayName="Priority 0 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3625"
       EpMetaPropertyName="RxLoadPri0VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="100"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30039">
        <Relation type="ScriptableExposedProperty" target="129323"/>
      </StmExposedProperty>
      <StmExposedProperty id="129184" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3626/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 1."
       EpDisplayName="Priority 1 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3626"
       EpMetaPropertyName="RxLoadPri1MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:03"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30085">
        <Relation type="ScriptableExposedProperty" target="129324"/>
      </StmExposedProperty>
      <StmExposedProperty id="129185" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3626/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 1."
       EpDisplayName="Priority 1 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3626"
       EpMetaPropertyName="RxLoadPri1MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30087">
        <Relation type="ScriptableExposedProperty" target="129324"/>
      </StmExposedProperty>
      <StmExposedProperty id="129186" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3626/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 1."
       EpDisplayName="Priority 1 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3626"
       EpMetaPropertyName="RxLoadPri1VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="101"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 30090">
        <Relation type="ScriptableExposedProperty" target="129324"/>
      </StmExposedProperty>
      <StmExposedProperty id="129187" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3627/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 2."
       EpDisplayName="Priority 2 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3627"
       EpMetaPropertyName="RxLoadPri2MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:04"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41920">
        <Relation type="ScriptableExposedProperty" target="129325"/>
      </StmExposedProperty>
      <StmExposedProperty id="129188" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3627/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 2."
       EpDisplayName="Priority 2 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3627"
       EpMetaPropertyName="RxLoadPri2MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41922">
        <Relation type="ScriptableExposedProperty" target="129325"/>
      </StmExposedProperty>
      <StmExposedProperty id="129189" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3627/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 2."
       EpDisplayName="Priority 2 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3627"
       EpMetaPropertyName="RxLoadPri2VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="102"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41925">
        <Relation type="ScriptableExposedProperty" target="129325"/>
      </StmExposedProperty>
      <StmExposedProperty id="129190" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3628/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 3."
       EpDisplayName="Priority 3 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3628"
       EpMetaPropertyName="RxLoadPri3MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:05"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41971">
        <Relation type="ScriptableExposedProperty" target="129326"/>
      </StmExposedProperty>
      <StmExposedProperty id="129191" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3628/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 3."
       EpDisplayName="Priority 3 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3628"
       EpMetaPropertyName="RxLoadPri3MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41973">
        <Relation type="ScriptableExposedProperty" target="129326"/>
      </StmExposedProperty>
      <StmExposedProperty id="129192" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3628/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 3."
       EpDisplayName="Priority 3 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3628"
       EpMetaPropertyName="RxLoadPri3VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="103"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 41976">
        <Relation type="ScriptableExposedProperty" target="129326"/>
      </StmExposedProperty>
      <StmExposedProperty id="129193" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3629/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 4."
       EpDisplayName="Priority 4 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3629"
       EpMetaPropertyName="RxLoadPri4MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:06"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42022">
        <Relation type="ScriptableExposedProperty" target="129327"/>
      </StmExposedProperty>
      <StmExposedProperty id="129194" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3629/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 4."
       EpDisplayName="Priority 4 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3629"
       EpMetaPropertyName="RxLoadPri4MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42024">
        <Relation type="ScriptableExposedProperty" target="129327"/>
      </StmExposedProperty>
      <StmExposedProperty id="129195" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3629/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 4."
       EpDisplayName="Priority 4 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3629"
       EpMetaPropertyName="RxLoadPri4VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="104"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42027">
        <Relation type="ScriptableExposedProperty" target="129327"/>
      </StmExposedProperty>
      <StmExposedProperty id="129196" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3630/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 5."
       EpDisplayName="Priority 5 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3630"
       EpMetaPropertyName="RxLoadPri5MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:07"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42073">
        <Relation type="ScriptableExposedProperty" target="129328"/>
      </StmExposedProperty>
      <StmExposedProperty id="129197" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3630/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 5."
       EpDisplayName="Priority 5 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3630"
       EpMetaPropertyName="RxLoadPri5MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42075">
        <Relation type="ScriptableExposedProperty" target="129328"/>
      </StmExposedProperty>
      <StmExposedProperty id="129198" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3630/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 5."
       EpDisplayName="Priority 5 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3630"
       EpMetaPropertyName="RxLoadPri5VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="105"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42078">
        <Relation type="ScriptableExposedProperty" target="129328"/>
      </StmExposedProperty>
      <StmExposedProperty id="129199" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3631/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxLoad Priority 6."
       EpDisplayName="Priority 6 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3631"
       EpMetaPropertyName="RxLoadPri6MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:08"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42124">
        <Relation type="ScriptableExposedProperty" target="129329"/>
      </StmExposedProperty>
      <StmExposedProperty id="129200" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3631/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for RxLoad Priority 6."
       EpDisplayName="Priority 6 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3631"
       EpMetaPropertyName="RxLoadPri6MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42126">
        <Relation type="ScriptableExposedProperty" target="129329"/>
      </StmExposedProperty>
      <StmExposedProperty id="129201" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3631/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxLoad Priority 6."
       EpDisplayName="Priority 6 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3631"
       EpMetaPropertyName="RxLoadPri6VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="106"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42129">
        <Relation type="ScriptableExposedProperty" target="129329"/>
      </StmExposedProperty>
      <StmExposedProperty id="129202" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3632/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="MAC Address for RxTest Priority 7."
       EpDisplayName="Priority 7 - MAC Address"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3632"
       EpMetaPropertyName="RxTestPri7MacAddr"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:10:95:00:00:09"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42175">
        <Relation type="ScriptableExposedProperty" target="129330"/>
      </StmExposedProperty>
      <StmExposedProperty id="129203" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3632/modifyList[1]/operationList[0]/stmPropertyModifier/propertyValueList/TargetObjectStep"
       EpDescription="MAC Address Step across port for Rx Test Priority 7."
       EpDisplayName="Priority 7 - MAC Address Port Step"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3632"
       EpMetaPropertyName="RxTestPri7MacAddrPortStep"
       EpPropertyJsonId="modifyList[1].operationList[0].stmPropertyModifier.propertyValueList.TargetObjectStep"
       EpPropertyType="MAC"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue="00:00:00:00:01:00"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42177">
        <Relation type="ScriptableExposedProperty" target="129330"/>
      </StmExposedProperty>
      <StmExposedProperty id="129204" 
       EpPath="Sequence/spirent.methodology.customtopologycommand.129309/spirent.methodology.topologygroupcommand.129322/spirent.methodology.createtemplateconfigcommand.inputjson.3632/modifyList[2]/operationList[0]/stmPropertyModifier/propertyValueList/Start"
       EpDescription="VLAN ID for RxTest Priority 7."
       EpDisplayName="Priority 7 - VLAN ID"
       EpTargetClassId="spirent.methodology.createtemplateconfigcommand"
       EpTargetPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson"
       EpPropertyId="spirent.methodology.createtemplateconfigcommand.inputjson.3632"
       EpMetaPropertyName="RxTestPri7VlanId"
       EpPropertyJsonId="modifyList[2].operationList[0].stmPropertyModifier.propertyValueList.Start"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="107"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 42180">
        <Relation type="ScriptableExposedProperty" target="129330"/>
      </StmExposedProperty>
      <StmExposedProperty id="129205" 
       EpPath="Sequence/spirent.methodology.testgroupcommand.129373/spirent.methodology.iterationgroupcommand.129382/sequencerwhilecommand.129383/spirent.methodology.objectiteratorcommand.valuelist.3701"
       EpDescription="List of Frame Sizes to iterate over during the test."
       EpDisplayName="Frame Size List"
       EpTargetClassId="spirent.methodology.objectiteratorcommand"
       EpTargetPropertyId="spirent.methodology.objectiteratorcommand.valuelist"
       EpPropertyId="spirent.methodology.objectiteratorcommand.valuelist.3701"
       EpMetaPropertyName="FrameSizeList"
       EpPropertyJsonId=""
       EpPropertyType="STRING"
       EpUnits="bytes"
       EpIsCollection="TRUE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList=""
       EpPropertyValue=""
       EpPropertyValueList="128 256 512 1024"
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 48191">
        <Relation type="ScriptableExposedProperty" target="129384"/>
      </StmExposedProperty>
      <StmExposedProperty id="129206" 
       EpPath="Sequence/spirent.methodology.testgroupcommand.129373/spirent.methodology.iterationgroupcommand.129382/sequencerwhilecommand.129383/sequencerifcommand.129394/waitcommand.waittime.3795"
       EpDescription="Duration of the Sanity Test (seconds)"
       EpDisplayName="Sanity Test Duration"
       EpTargetClassId="waitcommand"
       EpTargetPropertyId="waitcommand.waittime"
       EpPropertyId="waitcommand.waittime.3795"
       EpMetaPropertyName="SanityDuration"
       EpPropertyJsonId=""
       EpPropertyType="FLOAT"
       EpUnits="seconds"
       EpIsCollection="FALSE"
       EpMinValue="0.005"
       EpMaxValue="2147483647.0"
       EpEnumValueList=""
       EpPropertyValue="30.00"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 48227">
        <Relation type="ScriptableExposedProperty" target="129400"/>
      </StmExposedProperty>
      <StmExposedProperty id="129207" 
       EpPath="Sequence/spirent.methodology.testgroupcommand.129373/spirent.methodology.iterationgroupcommand.129382/sequencerwhilecommand.129383/spirent.methodology.iterationgroupcommand.129423/sequencerwhilecommand.129424/waitcommand.waittime.3854"
       EpDescription="Duration of a Test Load Iteration (seconds)"
       EpDisplayName="Iteration Duration"
       EpTargetClassId="waitcommand"
       EpTargetPropertyId="waitcommand.waittime"
       EpPropertyId="waitcommand.waittime.3854"
       EpMetaPropertyName="IterationDuration"
       EpPropertyJsonId=""
       EpPropertyType="FLOAT"
       EpUnits="seconds"
       EpIsCollection="FALSE"
       EpMinValue="0.005"
       EpMaxValue="2147483647.0"
       EpEnumValueList=""
       EpPropertyValue="30.00"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 49883">
        <Relation type="ScriptableExposedProperty" target="129434"/>
      </StmExposedProperty>
      <StmExposedProperty id="129208" 
       EpPath="Sequence/spirent.methodology.testgroupcommand.129373/spirent.methodology.iterationgroupcommand.129382/sequencerwhilecommand.129383/waitcommand.waittime.3877"
       EpDescription="Duration of the Recovery Test (seconds)"
       EpDisplayName="Recovery Test Duration"
       EpTargetClassId="waitcommand"
       EpTargetPropertyId="waitcommand.waittime"
       EpPropertyId="waitcommand.waittime.3877"
       EpMetaPropertyName="RecoveryDuration"
       EpPropertyJsonId=""
       EpPropertyType="FLOAT"
       EpUnits="seconds"
       EpIsCollection="FALSE"
       EpMinValue="0.005"
       EpMaxValue="2147483647.0"
       EpEnumValueList=""
       EpPropertyValue="30.00"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 51312">
        <Relation type="ScriptableExposedProperty" target="129457"/>
      </StmExposedProperty>
      <StmExposedProperty id="129209" 
       EpPath=""
       EpDescription="VLAN ID for Priority 0 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 0 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri0VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="100"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58953">
      </StmExposedProperty>
      <StmExposedPropertyMap id="129210" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri0VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129209"/>
        <Relation type="StmExposedMapDstProperty" target="129156"/>
        <Relation type="StmExposedMapDstProperty" target="129183"/>
      </StmExposedPropertyMap>
      <StmExposedProperty id="129211" 
       EpPath=""
       EpDescription="VLAN ID for Priority 1 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 1 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri1VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="101"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58955">
      </StmExposedProperty>
      <StmExposedProperty id="129212" 
       EpPath=""
       EpDescription="VLAN ID for Priority 2 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 2 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri2VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="102"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58956">
      </StmExposedProperty>
      <StmExposedProperty id="129213" 
       EpPath=""
       EpDescription="VLAN ID for Priority 3 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 3 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri3VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="103"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58957">
      </StmExposedProperty>
      <StmExposedProperty id="129214" 
       EpPath=""
       EpDescription="VLAN ID for Priority 4 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 4 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri4VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="104"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58958">
      </StmExposedProperty>
      <StmExposedProperty id="129215" 
       EpPath=""
       EpDescription="VLAN ID for Priority 5 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 5 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri5VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="105"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58959">
      </StmExposedProperty>
      <StmExposedProperty id="129216" 
       EpPath=""
       EpDescription="VLAN ID for Priority 6 Traffic (TxLoad -&gt; Rx)."
       EpDisplayName="Priority 6 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri6VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="106"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58960">
      </StmExposedProperty>
      <StmExposedProperty id="129217" 
       EpPath=""
       EpDescription="VLAN ID for Priority 7 Traffic (TxTest -&gt; Rx)."
       EpDisplayName="Priority 7 - VLAN ID"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="Pri7VlanId"
       EpPropertyJsonId=""
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="4095"
       EpEnumValueList=""
       EpPropertyValue="107"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58961">
      </StmExposedProperty>
      <StmExposedProperty id="129218" 
       EpPath=""
       EpDescription="Duration of Sanity, Load Iteration, and Recovery Tests
(seconds)"
       EpDisplayName="Iteration Duration"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="TestDuration"
       EpPropertyJsonId=""
       EpPropertyType="FLOAT"
       EpUnits="seconds"
       EpIsCollection="FALSE"
       EpMinValue="0.01"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="30.00"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 58962">
      </StmExposedProperty>
      <StmExposedPropertyMap id="129219" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri1VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129211"/>
        <Relation type="StmExposedMapDstProperty" target="129159"/>
        <Relation type="StmExposedMapDstProperty" target="129186"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129220" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri2VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129212"/>
        <Relation type="StmExposedMapDstProperty" target="129162"/>
        <Relation type="StmExposedMapDstProperty" target="129189"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129221" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri3VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129213"/>
        <Relation type="StmExposedMapDstProperty" target="129165"/>
        <Relation type="StmExposedMapDstProperty" target="129192"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129222" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri4VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129214"/>
        <Relation type="StmExposedMapDstProperty" target="129168"/>
        <Relation type="StmExposedMapDstProperty" target="129195"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129223" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri5VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129215"/>
        <Relation type="StmExposedMapDstProperty" target="129171"/>
        <Relation type="StmExposedMapDstProperty" target="129198"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129224" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri6VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129216"/>
        <Relation type="StmExposedMapDstProperty" target="129174"/>
        <Relation type="StmExposedMapDstProperty" target="129201"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129225" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapPri7VlanId">
        <Relation type="StmExposedMapSrcProperty" target="129217"/>
        <Relation type="StmExposedMapDstProperty" target="129180"/>
        <Relation type="StmExposedMapDstProperty" target="129204"/>
      </StmExposedPropertyMap>
      <StmExposedPropertyMap id="129226" 
       MapType="DIRECT"
       MappingJson=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapDuration">
        <Relation type="StmExposedMapSrcProperty" target="129218"/>
        <Relation type="StmExposedMapDstProperty" target="129206"/>
        <Relation type="StmExposedMapDstProperty" target="129207"/>
        <Relation type="StmExposedMapDstProperty" target="129208"/>
      </StmExposedPropertyMap>
      <StmExposedProperty id="129227" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[0][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="1000000000"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6663">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129228" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][3]"
       EpDescription="Maximum latency (us) allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[0][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="1000000000"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6664">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129229" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][4]"
       EpDescription="Maximum loss frames allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[0][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="65535"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6665">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129230" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[0][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="65535"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6666">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129231" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][6]"
       EpDescription="Maximum reordered frames allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[0][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="65535"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6667">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129232" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[0][7]"
       EpDescription="Maximum late frames allowed for Priority 0 traffic."
       EpDisplayName="Priority 0 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri0MaxLate"
       EpPropertyJsonId="sql_operations[1].table[0][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="65535"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6668">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129233" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[1][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="5.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6671">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129234" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][3]"
       EpDescription="Maximum latency (us) allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[1][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="10.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6672">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129235" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][4]"
       EpDescription="Maximum loss frames allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[1][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6673">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129236" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[1][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="2"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6674">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129237" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][6]"
       EpDescription="Maximum reordered frames allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[1][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="2"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6675">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129238" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[1][7]"
       EpDescription="Maximum late frames allowed for Priority 1 traffic."
       EpDisplayName="Priority 1 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri1MaxLate"
       EpPropertyJsonId="sql_operations[1].table[1][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="2"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 6676">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129239" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[2][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="3.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26215">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129240" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][3]"
       EpDescription="Maximum latency (us) allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[2][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="5.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26216">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129241" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][4]"
       EpDescription="Maximum loss frames allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[2][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26217">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129242" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[2][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26218">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129243" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][6]"
       EpDescription="Maximum reordered frames allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[2][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26219">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129244" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[2][7]"
       EpDescription="Maximum late frames allowed for Priority 2 traffic."
       EpDisplayName="Priority 2 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri2MaxLate"
       EpPropertyJsonId="sql_operations[1].table[2][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26220">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129245" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[3][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="2.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26223">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129246" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][3]"
       EpDescription="Maximum latency (us) allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[3][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="5.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26224">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129247" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][4]"
       EpDescription="Maximum loss frames allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[3][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26225">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129248" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[3][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26226">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129249" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][6]"
       EpDescription="Maximum reordered frames allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[3][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26227">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129250" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[3][7]"
       EpDescription="Maximum late frames allowed for Priority 3 traffic."
       EpDisplayName="Priority 3 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri3MaxLate"
       EpPropertyJsonId="sql_operations[1].table[3][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="1"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26228">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129251" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[4][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="1.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26231">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129252" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][3]"
       EpDescription="Maximum latency (us) allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[4][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="3.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26232">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129253" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][4]"
       EpDescription="Maximum loss frames allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[4][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26233">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129254" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[4][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26234">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129255" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][6]"
       EpDescription="Maximum reordered frames allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[4][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26235">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129256" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[4][7]"
       EpDescription="Maximum late frames allowed for Priority 4 traffic."
       EpDisplayName="Priority 4 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri4MaxLate"
       EpPropertyJsonId="sql_operations[1].table[4][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 26236">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129257" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[5][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="1.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52245">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129258" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][3]"
       EpDescription="Maximum latency (us) allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[5][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="2.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52246">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129259" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][4]"
       EpDescription="Maximum loss frames allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[5][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52247">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129260" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[5][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52248">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129261" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][6]"
       EpDescription="Maximum reordered frames allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[5][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52249">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129262" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[5][7]"
       EpDescription="Maximum late frames allowed for Priority 5 traffic."
       EpDisplayName="Priority 5 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri5MaxLate"
       EpPropertyJsonId="sql_operations[1].table[5][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52250">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129263" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[6][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="0.5"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52253">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129264" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][3]"
       EpDescription="Maximum latency (us) allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[6][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="2.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52254">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129265" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][4]"
       EpDescription="Maximum loss frames allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[6][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52255">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129266" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[6][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52256">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129267" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][6]"
       EpDescription="Maximum reordered frames allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[6][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52257">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129268" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[6][7]"
       EpDescription="Maximum late frames allowed for Priority 6 traffic."
       EpDisplayName="Priority 6 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri6MaxLate"
       EpPropertyJsonId="sql_operations[1].table[6][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52258">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129269" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][2]"
       EpDescription="Maximum jitter (us) allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Jitter"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxJitter"
       EpPropertyJsonId="sql_operations[1].table[7][2]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="0.2"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52261">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129270" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][3]"
       EpDescription="Maximum latency (us) allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Latency"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxLatency"
       EpPropertyJsonId="sql_operations[1].table[7][3]"
       EpPropertyType="FLOAT"
       EpUnits="us"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="2147483647"
       EpEnumValueList=""
       EpPropertyValue="1.0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52262">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129271" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][4]"
       EpDescription="Maximum loss frames allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Loss"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxLoss"
       EpPropertyJsonId="sql_operations[1].table[7][4]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52263">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129272" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][5]"
       EpDescription="Maximum duplicate frames allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Duplicate"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxDuplicate"
       EpPropertyJsonId="sql_operations[1].table[7][5]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52264">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129273" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][6]"
       EpDescription="Maximum reordered frames allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Reordered"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxReordered"
       EpPropertyJsonId="sql_operations[1].table[7][6]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52265">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129274" 
       EpPath="Sequence/spirent.methodology.initgroupcommand.129303/spirent.methodology.addtodbtablecommand.dbjsonstring.4557/sql_operations[1]/table[7][7]"
       EpDescription="Maximum late frames allowed for Priority 7 traffic."
       EpDisplayName="Priority 7 - Max Late"
       EpTargetClassId="spirent.methodology.addtodbtablecommand"
       EpTargetPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring"
       EpPropertyId="spirent.methodology.addtodbtablecommand.dbjsonstring.4557"
       EpMetaPropertyName="Pri7MaxLate"
       EpPropertyJsonId="sql_operations[1].table[7][7]"
       EpPropertyType="INTEGER"
       EpUnits="frames"
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="65535"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 52266">
        <Relation type="ScriptableExposedProperty" target="129505"/>
      </StmExposedProperty>
      <StmExposedProperty id="129275" 
       EpPath="Sequence/spirent.methodology.testgroupcommand.129373/sequencerifcommand.129377/spirent.methodology.runsqlcommand.dbjsonstring.214747/sql_operations[1]/sql_statement[1]/dynamic"
       EpDescription="Flag to enable L2 Learning."
       EpDisplayName="Enable L2 Learning"
       EpTargetClassId="spirent.methodology.runsqlcommand"
       EpTargetPropertyId="spirent.methodology.runsqlcommand.dbjsonstring"
       EpPropertyId="spirent.methodology.runsqlcommand.dbjsonstring.214747"
       EpMetaPropertyName="EnableL2Learning"
       EpPropertyJsonId="sql_operations[1].sql_statement[1].dynamic"
       EpPropertyType="INTEGER"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue="0"
       EpMaxValue="1"
       EpEnumValueList=""
       EpPropertyValue="0"
       EpPropertyValueList=""
       EpFileExtensionList="{}"
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 15483">
        <Relation type="ScriptableExposedProperty" target="129378"/>
      </StmExposedProperty>
      <StmExposedProperty id="129276" 
       EpPath=""
       EpDescription="Learning Mode: None or L2"
       EpDisplayName="Learning Mode"
       EpTargetClassId=""
       EpTargetPropertyId=""
       EpPropertyId=""
       EpMetaPropertyName="LearningMode"
       EpPropertyJsonId=""
       EpPropertyType="ENUM"
       EpUnits=""
       EpIsCollection="FALSE"
       EpMinValue=""
       EpMaxValue=""
       EpEnumValueList="None L2"
       EpPropertyValue="None"
       EpPropertyValueList=""
       EpFileExtensionList=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="StmExposedProperty 21048">
      </StmExposedProperty>
      <StmExposedPropertyMap id="129277" 
       MapType="SWITCH"
       MappingJson="[{&quot;src_case&quot;:&quot;None&quot;,&quot;property_value_dict&quot;:{&quot;EnableL2Learning&quot;:&quot;0&quot;}},{&quot;src_case&quot;:&quot;L2&quot;,&quot;property_value_dict&quot;:{&quot;EnableL2Learning&quot;:&quot;1&quot;}}]"
       Active="TRUE"
       LocalActive="TRUE"
       Name="MapLearning">
        <Relation type="StmExposedMapSrcProperty" target="129276"/>
        <Relation type="StmExposedMapDstProperty" target="129275"/>
      </StmExposedPropertyMap>
    </StmExposedConfig>
    <ResultDataSet id="129278" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 5391">
      <ResultQuery id="129279" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 6774">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="129280" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 6928">
      <ResultQuery id="129281" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 8703">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="129282" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 8465">
      <ResultQuery id="129283" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 10632">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="129284" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 9234">
      <ResultQuery id="129285" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 11597">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="129286" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 1875">
      <ResultQuery id="129287" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 2333">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="129288" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 2811">
      <ResultQuery id="129289" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 3514">
      </ResultQuery>
    </ResultDataSet>
    <ResultDataSet id="136517" 
     PrimaryClass=""
     InternalXmlFormatString=""
     ResultFilterMode="1"
     ResultViewDataOutput="FALSE"
     PageNumber="1"
     RecordsPerPage="100"
     NotifyInterval="3000"
     Identifier=""
     Persistent="TRUE"
     CreatorId=""
     IsDeprecated="FALSE"
     Path=""
     ResultViewOwner="USER"
     Description=""
     CustomDisplayName=""
     CustomDisplayPath=""
     Active="TRUE"
     LocalActive="TRUE"
     Name="ResultDataSet 1762">
      <Relation type="ResultChild" target="136524"/>
      <Relation type="ResultChild" target="136525"/>
      <ResultQuery id="136518" 
       ConfigClassId="generator"
       ResultClassId="generatorportresults"
       ResultRootList="128806 128888"
       PropertyIdArray="generatorportresults.generatorsigframerate"
       PropertyHandleArray=""
       ResultOptions=""
       ArchivingOption="NONE"
       InternalCookie=""
       Active="TRUE"
       LocalActive="TRUE"
       Name="ResultQuery 2177">
      </ResultQuery>
    </ResultDataSet>
  </Project>
  <AutomationOptions id="6" 
   CommandTimeout="3600"
   LogLevel="WARN"
   LogTo="stdout"
   MaxBackup="0"
   MaxFileSizeInMB="10"
   SuppressTclErrors="FALSE"
   AutoSubscribe="FALSE"
   Active="TRUE"
   LocalActive="TRUE"
   Name="AutomationOptions 1">
  </AutomationOptions>
  <PhysicalChassisManager id="10" 
   RawImageArchiveDir="\\storage.cal.ci.spirentcom.com\builds\TestCenter\9.90\CI_Builds\IL\9.90.6893\fsimg"
   FirmwareArchiveDir=""
   Active="TRUE"
   LocalActive="TRUE"
   Name="PhysicalChassisManager 1">
  </PhysicalChassisManager>
  <Sequencer id="11" 
   CurrentSubCommandName="Results: End Of Test Command"
   CommandList="194088"
   BreakpointList=""
   DisabledCommandList=""
   CleanupCommand="129480"
   Active="TRUE"
   LocalActive="TRUE"
   Name="Sequencer">
    <Relation type="SequencerFinalizeType" target="129480"/>
    <spirent.methodology.L2L3LearningCommand id="129290" 
     ObjectList=""
     TagNameList=""
     EnableL2Learning="TRUE"
     EnableL3Learning="TRUE"
     L2LearningOption="TX_RX"
     WaitForArpToFinish="TRUE"
     ForceArp="TRUE"
     VerifyArp="TRUE"
     CommandName=""
     PackageName="spirent"
     ErrorOnFailure="TRUE"
     AutoDestroy="FALSE"
     ExecuteSynchronous="FALSE"
     ProgressEnable="TRUE"
     ProgressIsSafeCancel="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Test Methodology: L2L3 Learning Command 1">
    </spirent.methodology.L2L3LearningCommand>
    <SequenceableCommandProperties id="129291" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 9">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129292" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 13">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129293" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 70">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129294" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 71">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129295" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 72">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129296" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 73">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129297" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 74">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129298" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 75">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129299" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 76">
    </SequenceableCommandProperties>
    <SequenceableCommandProperties id="129300" 
     AllowDelete="FALSE"
     AllowMove="FALSE"
     AllowUngroup="FALSE"
     AllowDisable="FALSE"
     AllowBreakpoints="TRUE"
     ShowEditor="FALSE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="SequenceableCommandProperties 77">
    </SequenceableCommandProperties>
    <spirent.methodology.manager.MethodologyGroupCommand id="194088" 
     CommandName=""
     PackageName="spirent"
     CommandList="129302 129303 129309 129331 129372 129373 129476 129477"
     ExecutionMode="BACKGROUND"
     GroupCategory="REGULAR_COMMAND"
     AutoDestroy="FALSE"
     ExecuteSynchronous="FALSE"
     ProgressEnable="TRUE"
     ProgressIsSafeCancel="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Methodology Manager: Methodology Group Command 10">
      <SequencerComment id="129302" 
       Text="Initialization and Test Configuration"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Comment">
      </SequencerComment>
      <spirent.methodology.InitGroupCommand id="129303" 
       DisplayName="Test Initialization: Expected SUT Guarantees"
       Description="Initializes the configuration and database for the
methodology."
       CommandName=""
       PackageName="spirent"
       CommandList="129304 129305 129306 129505 129307"
       ExecutionMode="BACKGROUND"
       GroupCategory="REGULAR_COMMAND"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Init Group - Methodology Initialization">
        <spirent.methodology.DeleteTemplatesAndGeneratedObjectsCommand id="129304" 
         DeleteStmTemplateConfigs="TRUE"
         TagList=""
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Delete Templates and Generated Objects">
        </spirent.methodology.DeleteTemplatesAndGeneratedObjectsCommand>
        <spirent.methodology.StartOfTestCommand id="129305" 
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Results: Start Of Test">
        </spirent.methodology.StartOfTestCommand>
        <SaveResultsCommand id="129306" 
         ResultFileName="IEEE8021QoSValidation.db"
         SaveDetailedResults="TRUE"
         ClearChartResultAfterSave="TRUE"
         CollectResult="TRUE"
         LoopMode="APPEND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Prepare Results DB">
        </SaveResultsCommand>
        <spirent.methodology.InitRealTimeResultsCommand id="129307" 
         InputJson="[     {         &quot;enable&quot;: true,        
&quot;result_id&quot;: &quot;TxSigFrameRate&quot;,        
&quot;source_type&quot;: &quot;RESULTS_SUBSCRIBE&quot;,        
&quot;type&quot;: &quot;chart&quot;,         &quot;definition&quot;: {         
   &quot;chart&quot;: {                 &quot;type&quot;: &quot;line&quot;     
       },             &quot;title&quot;: {                 &quot;text&quot;:
&quot;Generator Tx Signature Frame Rates&quot;             },            
&quot;subtitle&quot;: {                 &quot;text&quot;: &quot;Tx Signature
Frame Rates Per Second.&quot;             },             &quot;xAxis&quot;: {  
              &quot;title&quot;: {                     &quot;text&quot;:
&quot;Time (s)&quot;                 },                
&quot;gridLineWidth&quot;: 1,                 &quot;minPadding&quot;: 0.2,     
           &quot;maxPadding&quot;: 0.2             },            
&quot;yAxis&quot;: {                 &quot;title&quot;: {                    
&quot;text&quot;: &quot;Rate (fps)&quot;                 },                
&quot;minPadding&quot;: 0.2,                 &quot;maxPadding&quot;: 0.2       
     },             &quot;legend&quot;: {                 &quot;enabled&quot;:
true             },             &quot;plotOptions&quot;: {                
&quot;series&quot;: {                     &quot;lineWidth&quot;: 1             
   }             },             &quot;tooltip&quot;: {                
&quot;headerFormat&quot;: &quot;&lt;span style=\&quot;font-size:
10px\&quot;&gt;{point.key}s&lt;/span&gt;&lt;br/&gt;&quot;             },       
     &quot;series&quot;: []         },         &quot;subscribe&quot;: [        
    {                 &quot;config_type&quot;: &quot;generator&quot;,          
      &quot;result_type&quot;: &quot;generatorportresults&quot;,               
 &quot;view_attribute_list&quot;: [                    
&quot;generatorsigframerate&quot;                 ],                
&quot;result_parent_tags&quot;: [                    
&quot;TxLoadPortGroup&quot;,                     &quot;TxTestPortGroup&quot;   
             ]             }         ]     },     {         &quot;enable&quot;:
true,         &quot;result_id&quot;: &quot;Rx_Percent_Load&quot;,        
&quot;source_type&quot;: &quot;SUMMARY_DB&quot;,         &quot;query&quot;: {  
          &quot;data_column_names&quot;: [                
&quot;Priority_0&quot;,                 &quot;Priority_1&quot;,                
&quot;Priority_2&quot;,                 &quot;Priority_3&quot;,                
&quot;Priority_4&quot;,                 &quot;Priority_5&quot;,                
&quot;Priority_6&quot;,                 &quot;Priority_7&quot;             ],  
          &quot;table&quot;: &quot;RTChartPercentLoad&quot;,            
&quot;timestamp_column_name&quot;: &quot;ROWID&quot;         },        
&quot;type&quot;: &quot;chart&quot;,         &quot;definition&quot;: {         
   &quot;chart&quot;: {                 &quot;type&quot;: &quot;line&quot;     
       },             &quot;title&quot;: {                 &quot;text&quot;:
&quot;Rx Load Percentage&quot;             },             &quot;subtitle&quot;:
{                 &quot;text&quot;: &quot;Average Rx Load Percentage Per
Iteration&quot;             },             &quot;xAxis&quot;: {                
&quot;title&quot;: {                     &quot;text&quot;:
&quot;Iteration&quot;                 },                
&quot;gridLineWidth&quot;: 1,                 &quot;minPadding&quot;: 0.2,     
           &quot;maxPadding&quot;: 0.2             },            
&quot;yAxis&quot;: {                 &quot;title&quot;: {                    
&quot;text&quot;: &quot;Rx Load Percentage&quot;                 },            
    &quot;minPadding&quot;: 0.2,                 &quot;maxPadding&quot;: 0.2,  
              &quot;min&quot;: 0             },             &quot;legend&quot;:
{                 &quot;enabled&quot;: true             },            
&quot;plotOptions&quot;: {                 &quot;series&quot;: {               
     &quot;lineWidth&quot;: 1                 }             },            
&quot;tooltip&quot;: {                 &quot;headerFormat&quot;: &quot;&lt;span
style=\&quot;font-size:
10px\&quot;&gt;{point.key}s&lt;/span&gt;&lt;br/&gt;&quot;             },       
     &quot;series&quot;: []         }     } ]"
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Initialize Real Time Results Command">
        </spirent.methodology.InitRealTimeResultsCommand>
        <spirent.methodology.AddToDbTableCommand id="129505" 
         DbJsonString="{     &quot;sql_operations&quot;: [         {           
 &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IEEE8021ExpectedQoS( PRI
INTEGER PRIMARY KEY, MinBWRatio REAL, MaxJitter REAL, MaxLatency REAL, MaxLoss
INTEGER, MaxDuplicate INTEGER, MaxReordered INTEGER, MaxLate INTEGER )&quot;   
             }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;table_name&quot;:
&quot;IEEE8021ExpectedQoS&quot;,                 &quot;columns&quot;: [        
            &quot;PRI&quot;,                     &quot;MinBWRatio&quot;,       
             &quot;MaxJitter&quot;,                     &quot;MaxLatency&quot;,
                    &quot;MaxLoss&quot;,                    
&quot;MaxDuplicate&quot;,                     &quot;MaxReordered&quot;,        
            &quot;MaxLate&quot;                 ]             },            
&quot;table&quot;: [                
[&quot;0&quot;,&quot;0.00&quot;,&quot;1000000000&quot;,&quot;1000000000&quot;,&quot;1000000000&quot;,&quot;1000000000&quot;,&quot;1000000000&quot;,&quot;1000000000&quot;],
               
[&quot;1&quot;,&quot;0.85&quot;,&quot;5.0&quot;,&quot;10.0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;2&quot;,&quot;2&quot;],
               
[&quot;2&quot;,&quot;0.90&quot;,&quot;3.0&quot;,&quot;5.0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;3&quot;,&quot;0.95&quot;,&quot;2.0&quot;,&quot;5.0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;4&quot;,&quot;0.98&quot;,&quot;1.0&quot;,&quot;3.0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],
               
[&quot;5&quot;,&quot;0.99&quot;,&quot;1.0&quot;,&quot;2.0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],
               
[&quot;6&quot;,&quot;1.00&quot;,&quot;0.5&quot;,&quot;2.0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],
               
[&quot;7&quot;,&quot;1.00&quot;,&quot;0.2&quot;,&quot;1.0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]
            ],             &quot;sql_statement&quot;: []         },           
{             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IEEE8021ExpectedRx( TxTestPercent REAL, \&quot;PRI_0\&quot; BOOLEAN,
\&quot;PRI_1\&quot; BOOLEAN, \&quot;PRI_2\&quot; BOOLEAN, \&quot;PRI_3\&quot;
BOOLEAN, \&quot;PRI_4\&quot; BOOLEAN, \&quot;PRI_5\&quot; BOOLEAN,
\&quot;PRI_6\&quot; BOOLEAN, \&quot;PRI_7\&quot; BOOLEAN )&quot;               
 }             ]         },         {             &quot;db_information&quot;: {
                &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;table_name&quot;: &quot;IEEE8021ExpectedRx&quot;,                
&quot;columns&quot;: [                     &quot;TxTestPercent&quot;,          
          &quot;PRI_0&quot;,                     &quot;PRI_1&quot;,            
        &quot;PRI_2&quot;,                     &quot;PRI_3&quot;,              
      &quot;PRI_4&quot;,                     &quot;PRI_5&quot;,                
    &quot;PRI_6&quot;,                     &quot;PRI_7&quot;                 ] 
           },             &quot;table&quot;: [                
[&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;],
               
[&quot;12.5&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;25&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;37.5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;50&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;62.5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;75&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;87.5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;],
               
[&quot;100&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;]
            ],             &quot;sql_statement&quot;: []         },         {  
          &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IEEE8021TestConfig(
\&quot;Frame Size List (bytes)\&quot; INTEGER, \&quot;Iteration Duration
(s)\&quot; TEXT )&quot;                 }             ]         },         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SummaryGenLoad(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, \&quot;StreamBlock Name\&quot; TEXT,
\&quot;Tx Load (%)\&quot; REAL, \&quot;Expected Tx Load (%)\&quot; REAL )&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SummarySigFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Signature Frame
Count\&quot; INTEGER, Failure TEXT )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
SummaryBpsLoad( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;bps Load\&quot; REAL, \&quot;Expected bps Load\&quot; REAL,
\&quot;Bandwidth Ratio\&quot; REAL )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
SummaryMaxJitter( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;Max Jitter (us)\&quot; REAL, \&quot;Max Jitter Allowed (us)\&quot; REAL
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SummaryMaxLatency(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Max Latency
(us)\&quot; REAL, \&quot;Max Latency Allowed (us)\&quot; REAL )&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SummaryDroppedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Loss Frame
Count\&quot; INTEGER, \&quot;Max Loss Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
SummaryDuplicateFrameCount( \&quot;Frame Size (bytes)\&quot; INTEGER,
\&quot;TxTest Load Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT,
Priority INTEGER, \&quot;Duplicate Frame Count\&quot; INTEGER, \&quot;Max
Duplicate Frame Count\&quot; INTEGER )&quot;                 }             ]   
     },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
SummaryReorderedFrameCount( \&quot;Frame Size (bytes)\&quot; INTEGER,
\&quot;TxTest Load Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT,
Priority INTEGER, \&quot;Reordered Frame Count\&quot; INTEGER, \&quot;Max
Reordered Frame Count\&quot; INTEGER )&quot;                 }             ]   
     },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
SummaryLateFrameCount( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest
Load Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;Late Frame Count\&quot; INTEGER, \&quot;Max Late Frame Count\&quot;
INTEGER )&quot;                 }             ]         },         {           
 &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SummaryChartPercentLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, PercentLoad
REAL )&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RTChartPercentLoad(
\&quot;Priority_0\&quot; REAL, \&quot;Priority_1\&quot; REAL,
\&quot;Priority_2\&quot; REAL, \&quot;Priority_3\&quot; REAL,
\&quot;Priority_4\&quot; REAL, \&quot;Priority_5\&quot; REAL,
\&quot;Priority_6\&quot; REAL, \&quot;Priority_7\&quot; REAL )&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS SanitySummary( QoS TEXT,
Failed INTEGER )&quot;                 }             ]         }     ] }"
         DbJsonFileName=""
         EnableLoadFromFileName="FALSE"
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Build Expected Results Tables">
        </spirent.methodology.AddToDbTableCommand>
      </spirent.methodology.InitGroupCommand>
      <spirent.methodology.CustomTopologyCommand id="129309" 
       CommandName=""
       PackageName="spirent"
       CommandList="129310 129320 129322"
       ExecutionMode="BACKGROUND"
       GroupCategory="REGULAR_COMMAND"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Sequence: Custom Topology Command">
        <spirent.methodology.TopologyGroupCommand id="129310" 
         TopologySide="NW"
         DisplayName="TxLoad Port Group"
         Description="Port group responsible for transmitting PRI 0-6 streams."
         CommandName=""
         PackageName="spirent"
         CommandList="129313 129314 129315 129316 129317 129318 129319"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Topology Group - TxLoad">
          <spirent.methodology.CreateTemplateConfigCommand id="129311" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI0_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:02&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;0&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.2&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 0">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129312" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI4_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:06&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;4&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.6&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 4">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129313" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI0_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:02&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;0&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.2&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 0">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129314" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI1_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:03&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;101&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;1&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;101&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.3&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 1">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129315" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI2_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:04&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;102&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;102&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.4&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 2">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129316" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI3_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:05&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;103&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;3&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;103&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.5&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 3">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129317" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI4_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:06&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;4&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.6&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 4">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129318" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI5_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:07&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;105&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;5&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;105&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.7&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 5">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129319" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxLoad_PRI6_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:08&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;106&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;6&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;106&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.8&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxLoadPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxLoad - Priority 6">
          </spirent.methodology.CreateTemplateConfigCommand>
        </spirent.methodology.TopologyGroupCommand>
        <spirent.methodology.TopologyGroupCommand id="129320" 
         TopologySide="SW"
         DisplayName="TxTest Port Group"
         Description="Port group responsible for transmitting PRI 7 stream."
         CommandName=""
         PackageName="spirent"
         CommandList="129321"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Topology Group - TxTest">
          <spirent.methodology.CreateTemplateConfigCommand id="129321" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;TxTest_&quot;,    
&quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:94:00:00:09&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;107&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;7&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;107&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;194.1.1.9&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="TxTestPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create TxTest">
          </spirent.methodology.CreateTemplateConfigCommand>
        </spirent.methodology.TopologyGroupCommand>
        <spirent.methodology.TopologyGroupCommand id="129322" 
         TopologySide="EAST"
         DisplayName="Rx Port Group"
         Description="Port group responsible for receiving all PRI streams."
         CommandName=""
         PackageName="spirent"
         CommandList="129323 129324 129325 129326 129327 129328 129329 129330"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Topology Group - Rx">
          <spirent.methodology.CreateTemplateConfigCommand id="129323" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI0_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:02&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;0&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;100&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.2&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 0">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129324" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI1_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:03&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;101&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;1&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;101&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.3&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 1">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129325" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI2_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:04&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;102&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;102&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.4&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 2">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129326" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI3_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:05&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;103&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;3&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;103&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.5&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 3">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129327" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI4_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:06&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;4&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;104&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.6&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 4">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129328" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI5_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:07&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;105&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;5&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;105&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.7&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 5">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129329" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxLoad_PRI6_&quot;,   
 &quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:08&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;106&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;6&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;106&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.8&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxLoad - Priority 6">
          </spirent.methodology.CreateTemplateConfigCommand>
          <spirent.methodology.CreateTemplateConfigCommand id="129330" 
           AutoExpandTemplate="TRUE"
           StmTemplateMix="0"
           InputJson="{     &quot;tagPrefix&quot;: &quot;RxTest_&quot;,    
&quot;baseTemplateFile&quot;: &quot;EmulatedDevice.xml&quot;,    
&quot;modifyList&quot;: [         {             &quot;description&quot;:
&quot;Build the Network Interface Stack&quot;,            
&quot;operationList&quot;: [                 {                    
&quot;buildStack&quot;: {                         &quot;deviceTagName&quot;:
&quot;ttEmulatedDevice&quot;,                         &quot;stack&quot;: [     
                       {                                 &quot;className&quot;:
&quot;EthIIIf&quot;,                                 &quot;isLowestLayer&quot;:
true,                                 &quot;tagName&quot;:
&quot;ttEthIIIf&quot;                             },                           
 {                                 &quot;className&quot;: &quot;VlanIf&quot;,  
                              &quot;tagName&quot;: &quot;ttOuterVlanIf&quot;,  
                              &quot;useIf&quot;: true                          
  },                             {                                
&quot;className&quot;: &quot;VlanIf&quot;,                                
&quot;stackSplit&quot;: [                                     [                
                        {                                            
&quot;className&quot;: &quot;Ipv4If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv4If&quot;,                                     
       &quot;useIf&quot;: true                                         }       
                             ],                                     [          
                              {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttIpv6If&quot;,                                     
       &quot;useIf&quot;: false                                         }      
                              ],                                     [         
                               {                                            
&quot;className&quot;: &quot;Ipv6If&quot;,                                     
       &quot;isPrimary&quot;: true,                                            
&quot;isTopLevel&quot;: true,                                            
&quot;tagName&quot;: &quot;ttLinkLocalIf&quot;,                                
            &quot;useIf&quot;: false                                         } 
                                   ]                                 ],        
                        &quot;tagName&quot;: &quot;ttInnerVlanIf&quot;,        
                        &quot;useIf&quot;: false                             } 
                       ]                     }                 }             ] 
       },         {             &quot;description&quot;: &quot;Modify the
EthIIIf&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;EthIIIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttEthIIIf&quot;,                        
&quot;propertyName&quot;: &quot;SourceMac&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;00:10:95:00:00:09&quot;,                             &quot;Step&quot;:
&quot;00:00:00:00:00:01&quot;,                            
&quot;TargetObjectStep&quot;: &quot;00:00:00:00:01:00&quot;,                   
         &quot;ResetOnNewTargetObject&quot;: true                         },   
                     &quot;tagName&quot;: &quot;ttEthIIIf.SourceMac&quot;      
              }                 }             ]         },         {           
 &quot;description&quot;: &quot;Modify the Outer VlanIf&quot;,            
&quot;enable&quot;: true,             &quot;operationList&quot;: [             
   {                     &quot;stmPropertyModifier&quot;: {                    
    &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;107&quot;,                             &quot;Step&quot;: &quot;1&quot;,  
                          &quot;TargetObjectStep&quot;: &quot;0&quot;,         
                   &quot;ResetOnNewTargetObject&quot;: true                    
    },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.VlanId&quot;                     }                 },      
          {                     &quot;stmPropertyModifier&quot;: {             
           &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttOuterVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;Priority&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;7&quot;,                             &quot;Step&quot;: &quot;1&quot;,    
                        &quot;TargetObjectStep&quot;: &quot;0&quot;,           
                 &quot;ResetOnNewTargetObject&quot;: true                      
  },                         &quot;tagName&quot;:
&quot;ttOuterVlanIf.Priority&quot;                     }                 }     
                       ]         },         {            
&quot;description&quot;: &quot;Modify the Inner VlanIf&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;stmPropertyModifier&quot;: {                   
     &quot;className&quot;: &quot;VlanIf&quot;,                        
&quot;parentTagName&quot;: &quot;ttInnerVlanIf&quot;,                        
&quot;propertyName&quot;: &quot;VlanId&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;107&quot;,                             &quot;Step&quot;: &quot;1&quot;   
                     },                         &quot;tagName&quot;:
&quot;ttInnerVlanIf.VlanId&quot;                     }                 }       
     ]         },         {             &quot;description&quot;: &quot;Modify
the Ipv4If&quot;,             &quot;enable&quot;: true,            
&quot;operationList&quot;: [                 {                    
&quot;propertyValue&quot;: {                         &quot;className&quot;:
&quot;Ipv4If&quot;,                         &quot;propertyValueList&quot;: {   
                         &quot;PrefixLength&quot;: &quot;24&quot;              
          },                         &quot;tagName&quot;: &quot;ttIpv4If&quot; 
                   }                 },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.1&quot;,                             &quot;Step&quot;:
&quot;0.0.0.0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv4If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv4If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv4If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;195.1.1.9&quot;,                             &quot;Step&quot;:
&quot;0.0.0.1&quot;,                             &quot;TargetObjectStep&quot;:
&quot;0.0.1.0&quot;,                            
&quot;ResetOnNewTargetObject&quot;: true                         },            
            &quot;tagName&quot;: &quot;ttIpv4If.Address&quot;                  
  }                 }             ]         },         {            
&quot;description&quot;: &quot;Modify the IPv6Ifs&quot;,            
&quot;enable&quot;: false,             &quot;operationList&quot;: [            
    {                     &quot;propertyValue&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;propertyValueList&quot;: {                            
&quot;PrefixLength&quot;: &quot;64&quot;                         },            
            &quot;tagName&quot;: &quot;ttIpv6If&quot;                     }    
            },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Gateway&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::1&quot;,                             &quot;Step&quot;:
&quot;::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Gateway&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttIpv6If&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;2000::2&quot;,                             &quot;Step&quot;:
&quot;0::1:0&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        },                 {                    
&quot;stmPropertyModifier&quot;: {                        
&quot;className&quot;: &quot;Ipv6If&quot;,                        
&quot;parentTagName&quot;: &quot;ttLinkLocalIf&quot;,                        
&quot;propertyName&quot;: &quot;Address&quot;,                        
&quot;propertyValueList&quot;: {                             &quot;Start&quot;:
&quot;FE80::1:1&quot;,                             &quot;Step&quot;:
&quot;0::1&quot;                         },                        
&quot;tagName&quot;: &quot;ttIpv6If.Address&quot;                     }        
        }             ]         }     ] }"
           CopiesPerParent="1"
           SrcTagList=""
           TargetTagList="RxPortGroup"
           TemplateTagName=""
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Create RxTest">
          </spirent.methodology.CreateTemplateConfigCommand>
        </spirent.methodology.TopologyGroupCommand>
      </spirent.methodology.CustomTopologyCommand>
      <spirent.methodology.TrafficGroupCommand id="129331" 
       DisplayName="Traffic Configuration"
       Description="Configures traffic for TxLoad and TxTest."
       CommandName=""
       PackageName="spirent"
       CommandList="129332 129352"
       ExecutionMode="BACKGROUND"
       GroupCategory="REGULAR_COMMAND"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Traffic Group Configuration">
        <spirent.methodology.traffic.CreateTrafficMixCommand id="129332" 
         MixInfo="{ &quot;load&quot;: 87.5, &quot;loadUnits&quot;:
&quot;PERCENT_LINE_RATE&quot;, &quot;table&quot;: [{ &quot;weight&quot;:
&quot;12.5&quot;, &quot;tagPrefix&quot;: &quot;TxLoad_PRI0_&quot;,
&quot;baseTemplateFile&quot;: &quot;Ipv4_Stream.xml&quot;,
&quot;postExpandModify&quot;: [{ &quot;streamBlockExpand&quot;: {
&quot;endpointMapping&quot;: { &quot;bidirectional&quot;: false,
&quot;dstBindingTagList&quot;: [&quot;RxLoad_PRI0_ttOuterVlanIf&quot;],
&quot;srcBindingTagList&quot;: [&quot;TxLoad_PRI0_ttOuterVlanIf&quot;] } } }],
&quot;modifyList&quot;: [{ &quot;operationList&quot;: [{
&quot;pduBuilder&quot;: { &quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;],
&quot;pduData&quot;: { &quot;pdu_list&quot;: [{ &quot;enable&quot;: true,
&quot;name&quot;: &quot;eth_0&quot;, &quot;pdu&quot;:
&quot;ethernet:EthernetII&quot;, &quot;element_type&quot;: &quot;pdu&quot;,
&quot;pdu_data&quot;: [{ &quot;enable&quot;: true, &quot;pdu_data&quot;: [{
&quot;property_data&quot;: { &quot;pri&quot;: &quot;000&quot; },
&quot;enable&quot;: true, &quot;name&quot;: &quot;vlan_0&quot;,
&quot;element_type&quot;: &quot;Vlan&quot; }], &quot;name&quot;:
&quot;vlans_0&quot;, &quot;element_type&quot;: &quot;vlans&quot; }] }, {
&quot;enable&quot;: true, &quot;name&quot;: &quot;ip_0&quot;, &quot;pdu&quot;:
&quot;ipv4:IPv4&quot;, &quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 0&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 0 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI1_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI1_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI1_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_1&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;001&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_1&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_1&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_1&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 1&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 1 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI2_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI2_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI2_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_2&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;010&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_2&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_2&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_2&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 2&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 2 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI3_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI3_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI3_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_3&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;011&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_3&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_3&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_3&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 3&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 3 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI4_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI4_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI4_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_4&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;100&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_4&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_4&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_4&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 4&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 4 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI5_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI5_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI5_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_5&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;101&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_5&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_5&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_5&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 5&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 5 Traffic&quot; }] }, {
&quot;weight&quot;: &quot;12.5&quot;, &quot;tagPrefix&quot;:
&quot;TxLoad_PRI6_&quot;, &quot;baseTemplateFile&quot;:
&quot;Ipv4_Stream.xml&quot;, &quot;postExpandModify&quot;: [{
&quot;streamBlockExpand&quot;: { &quot;endpointMapping&quot;: {
&quot;bidirectional&quot;: false, &quot;dstBindingTagList&quot;:
[&quot;RxLoad_PRI6_ttOuterVlanIf&quot;], &quot;srcBindingTagList&quot;:
[&quot;TxLoad_PRI6_ttOuterVlanIf&quot;] } } }], &quot;modifyList&quot;: [{
&quot;operationList&quot;: [{ &quot;pduBuilder&quot;: {
&quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {
&quot;pdu_list&quot;: [{ &quot;enable&quot;: true, &quot;name&quot;:
&quot;eth_6&quot;, &quot;pdu&quot;: &quot;ethernet:EthernetII&quot;,
&quot;element_type&quot;: &quot;pdu&quot;, &quot;pdu_data&quot;: [{
&quot;enable&quot;: true, &quot;pdu_data&quot;: [{ &quot;property_data&quot;: {
&quot;pri&quot;: &quot;110&quot; }, &quot;enable&quot;: true, &quot;name&quot;:
&quot;vlan_6&quot;, &quot;element_type&quot;: &quot;Vlan&quot; }],
&quot;name&quot;: &quot;vlans_6&quot;, &quot;element_type&quot;:
&quot;vlans&quot; }] }, { &quot;enable&quot;: true, &quot;name&quot;:
&quot;ip_6&quot;, &quot;pdu&quot;: &quot;ipv4:IPv4&quot;,
&quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 6&quot; } }             }],
&quot;description&quot;: &quot;TxLoad - Priority 6 Traffic&quot; }] }] }"
         MixTagName="TxLoadTrafficMix"
         AutoExpandTemplateMix="TRUE"
         CommandName=""
         PackageName="spirent"
         CommandList="129345"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Create TxLoad Traffic Mix">
          <spirent.methodology.IterationGroupCommand id="129333" 
           CommandName=""
           PackageName="spirent"
           CommandList="129334"
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 63">
            <Relation type="SequenceableProperties" target="129293"/>
            <SequencerWhileCommand id="129334" 
             ExpressionCommand="129335"
             Condition="PASSED"
             CommandList="129336 129337"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="While">
              <Relation type="SequenceableProperties" target="129294"/>
              <spirent.methodology.ObjectIteratorCommand id="129335" 
               IterMode="STEP"
               StepVal="10"
               EnableInitialVal="FALSE"
               InitialVal="0"
               ValueType="RANGE"
               ValueList=""
               BreakOnFail="FALSE"
               MinVal="0"
               MaxVal="100"
               PrevIterVerdict="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Iterators: Object Iterator Command 11">
              </spirent.methodology.ObjectIteratorCommand>
              <spirent.methodology.IteratorConfigMixParamsCommand id="129336" 
               StmTemplateMix="0"
               TagData=""
               ObjectList=""
               TagList=""
               CurrVal=""
               Iteration="0"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Methodology: IteratorConfigMixParamsCommand 6">
                <Relation type="SequenceableProperties" target="129295"/>
              </spirent.methodology.IteratorConfigMixParamsCommand>
              <spirent.methodology.CreateTemplateConfigCommand id="129337" 
               AutoExpandTemplate="TRUE"
               StmTemplateMix="0"
               InputJson="{&quot;baseTemplateFile&quot;:
&quot;IPv4_NoVlan.xml&quot;}"
               CopiesPerParent="1"
               SrcTagList=""
               TargetTagList=""
               TemplateTagName=""
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Topology Template: Create Template Config Command 26">
                <Relation type="SequenceableProperties" target="129296"/>
              </spirent.methodology.CreateTemplateConfigCommand>
            </SequencerWhileCommand>
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129338" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 19">
            <Relation type="SequenceableProperties" target="129291"/>
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129339" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 15">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129340" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 1">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129341" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 504">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129342" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 481">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129343" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 1">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129344" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 31">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129345" 
           CommandName=""
           PackageName="spirent"
           CommandList="129346"
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 1">
            <SequencerWhileCommand id="129346" 
             ExpressionCommand="129347"
             Condition="PASSED"
             CommandList="129350 129351"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="While">
              <spirent.methodology.ObjectIteratorCommand id="129347" 
               IterMode="STEP"
               StepVal="1"
               EnableInitialVal="FALSE"
               InitialVal="0"
               ValueType="RANGE"
               ValueList=""
               BreakOnFail="FALSE"
               MinVal="0"
               MaxVal="6"
               PrevIterVerdict="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Iterators: Object Iterator Command 1">
                <Relation type="UserTag" target="128385"/>
                <Relation type="UserTag" target="128391"/>
                <Relation type="UserTag" target="128397"/>
                <Relation type="UserTag" target="128404"/>
                <Relation type="UserTag" target="128410"/>
                <Relation type="UserTag" target="128416"/>
                <Relation type="UserTag" target="128422"/>
                <Relation type="UserTag" target="128428"/>
                <Relation type="UserTag" target="128434"/>
                <Relation type="UserTag" target="128442"/>
                <Relation type="UserTag" target="128448"/>
                <Relation type="UserTag" target="137114"/>
                <PropertyChainingConfig id="129348" 
                 SourcePropertyId="spirent.methodology.iteratorcommand.iteration"
                 TargetPropertyId="spirent.methodology.iteratorconfigcommand.iteration"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Property Chaining Config 1">
                  <Relation type="PropertyChain" target="129350"/>
                </PropertyChainingConfig>
                <PropertyChainingConfig id="129349" 
                 SourcePropertyId="spirent.methodology.iteratorcommand.currval"
                 TargetPropertyId="spirent.methodology.iteratorconfigcommand.currval"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Property Chaining Config 2">
                  <Relation type="PropertyChain" target="129350"/>
                </PropertyChainingConfig>
              </spirent.methodology.ObjectIteratorCommand>
              <spirent.methodology.IteratorConfigMixParamsCommand id="129350" 
               StmTemplateMix="137112"
               TagData="{&quot;rowConfigurator&quot;:
&quot;spirent.methodology.iteratorconfigmixparamscommand.129350&quot;,
&quot;rowIterator&quot;:
&quot;spirent.methodology.objectiteratorcommand.129347&quot;,
&quot;templateConfigurator&quot;:
&quot;spirent.methodology.createtemplateconfigcommand.129351&quot;}"
               ObjectList=""
               TagList=""
               CurrVal="6"
               Iteration="7"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Methodology: IteratorConfigMixParamsCommand 1">
                <Relation type="UserTag" target="128386"/>
                <Relation type="UserTag" target="128392"/>
                <Relation type="UserTag" target="128398"/>
                <Relation type="UserTag" target="128405"/>
                <Relation type="UserTag" target="128411"/>
                <Relation type="UserTag" target="128417"/>
                <Relation type="UserTag" target="128423"/>
                <Relation type="UserTag" target="128429"/>
                <Relation type="UserTag" target="128435"/>
                <Relation type="UserTag" target="128443"/>
                <Relation type="UserTag" target="128449"/>
                <Relation type="UserTag" target="137115"/>
              </spirent.methodology.IteratorConfigMixParamsCommand>
              <spirent.methodology.CreateTemplateConfigCommand id="129351" 
               AutoExpandTemplate="FALSE"
               StmTemplateMix="137112"
               InputJson="{&quot;modifyList&quot;: [{&quot;operationList&quot;:
[{&quot;pduBuilder&quot;: {&quot;tagNameList&quot;:
[&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {&quot;pdu_list&quot;:
[{&quot;pdu&quot;: &quot;ethernet:EthernetII&quot;, &quot;enable&quot;: true,
&quot;pdu_data&quot;: [{&quot;enable&quot;: true, &quot;pdu_data&quot;:
[{&quot;property_data&quot;: {&quot;pri&quot;: &quot;110&quot;},
&quot;enable&quot;: true, &quot;name&quot;: &quot;vlan_6&quot;,
&quot;element_type&quot;: &quot;Vlan&quot;}], &quot;name&quot;:
&quot;vlans_6&quot;, &quot;element_type&quot;: &quot;vlans&quot;}],
&quot;name&quot;: &quot;eth_6&quot;, &quot;element_type&quot;:
&quot;pdu&quot;}, {&quot;pdu&quot;: &quot;ipv4:IPv4&quot;, &quot;enable&quot;:
true, &quot;name&quot;: &quot;ip_6&quot;, &quot;element_type&quot;:
&quot;pdu&quot;}]}}}, {&quot;propertyValue&quot;: {&quot;className&quot;:
&quot;StreamBlock&quot;, &quot;tagName&quot;: &quot;ttStreamBlock&quot;,
&quot;propertyValueList&quot;: {&quot;TrafficPattern&quot;:
&quot;BACKBONE&quot;, &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,
&quot;name&quot;: &quot;PRI 6&quot;}}}], &quot;description&quot;: &quot;TxLoad
- Priority 6 Traffic&quot;}], &quot;tagPrefix&quot;: &quot;TxLoad_PRI6_&quot;,
&quot;baseTemplateFile&quot;: &quot;Ipv4_Stream.xml&quot;}"
               CopiesPerParent="1"
               SrcTagList=""
               TargetTagList=""
               TemplateTagName=""
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Topology Template: Create Template Config Command 21">
                <Relation type="UserTag" target="128387"/>
                <Relation type="UserTag" target="128393"/>
                <Relation type="UserTag" target="128399"/>
                <Relation type="UserTag" target="128406"/>
                <Relation type="UserTag" target="128412"/>
                <Relation type="UserTag" target="128418"/>
                <Relation type="UserTag" target="128424"/>
                <Relation type="UserTag" target="128430"/>
                <Relation type="UserTag" target="128436"/>
                <Relation type="UserTag" target="128444"/>
                <Relation type="UserTag" target="128450"/>
                <Relation type="UserTag" target="137116"/>
              </spirent.methodology.CreateTemplateConfigCommand>
            </SequencerWhileCommand>
          </spirent.methodology.IterationGroupCommand>
        </spirent.methodology.traffic.CreateTrafficMixCommand>
        <spirent.methodology.traffic.CreateTrafficMixCommand id="129352" 
         MixInfo="{ &quot;load&quot;: 12.5, &quot;loadUnits&quot;:
&quot;PERCENT_LINE_RATE&quot;, &quot;table&quot;: [{ &quot;weight&quot;:
&quot;100%&quot;, &quot;tagPrefix&quot;: &quot;TxTest_&quot;,
&quot;baseTemplateFile&quot;: &quot;Ipv4_Stream.xml&quot;,
&quot;postExpandModify&quot;: [{ &quot;streamBlockExpand&quot;: {
&quot;endpointMapping&quot;: { &quot;bidirectional&quot;: false,
&quot;dstBindingTagList&quot;: [&quot;RxTest_ttOuterVlanIf&quot;],
&quot;srcBindingTagList&quot;: [&quot;TxTest_ttOuterVlanIf&quot;] } } }],
&quot;modifyList&quot;: [{ &quot;operationList&quot;: [{
&quot;pduBuilder&quot;: { &quot;tagNameList&quot;: [&quot;ttStreamBlock&quot;],
&quot;pduData&quot;: { &quot;pdu_list&quot;: [{ &quot;enable&quot;: true,
&quot;name&quot;: &quot;eth_7&quot;, &quot;pdu&quot;:
&quot;ethernet:EthernetII&quot;, &quot;element_type&quot;: &quot;pdu&quot;,
&quot;pdu_data&quot;: [{ &quot;enable&quot;: true, &quot;pdu_data&quot;: [{
&quot;property_data&quot;: { &quot;pri&quot;: &quot;111&quot; },
&quot;enable&quot;: true, &quot;name&quot;: &quot;vlan_7&quot;,
&quot;element_type&quot;: &quot;Vlan&quot; }], &quot;name&quot;:
&quot;vlans_7&quot;, &quot;element_type&quot;: &quot;vlans&quot; }] }, {
&quot;enable&quot;: true, &quot;name&quot;: &quot;ip_7&quot;, &quot;pdu&quot;:
&quot;ipv4:IPv4&quot;, &quot;element_type&quot;: &quot;pdu&quot; }] } } }, {
&quot;propertyValue&quot;: { &quot;className&quot;: &quot;StreamBlock&quot;,
&quot;tagName&quot;: &quot;ttStreamBlock&quot;, &quot;propertyValueList&quot;:
{                         &quot;TrafficPattern&quot;: &quot;BACKBONE&quot;,    
                    &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,      
              &quot;name&quot;: &quot;PRI 7&quot; } }             }],
&quot;description&quot;: &quot;TxTest - Priority 7 Traffic&quot; }] }] }"
         MixTagName="TxTestTrafficMix"
         AutoExpandTemplateMix="TRUE"
         CommandName=""
         PackageName="spirent"
         CommandList="129365"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Create TxTest Traffic Load">
          <spirent.methodology.IterationGroupCommand id="129353" 
           CommandName=""
           PackageName="spirent"
           CommandList="129354"
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 72">
            <Relation type="SequenceableProperties" target="129297"/>
            <SequencerWhileCommand id="129354" 
             ExpressionCommand="129355"
             Condition="PASSED"
             CommandList="129356 129357"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="While">
              <Relation type="SequenceableProperties" target="129298"/>
              <spirent.methodology.ObjectIteratorCommand id="129355" 
               IterMode="STEP"
               StepVal="10"
               EnableInitialVal="FALSE"
               InitialVal="0"
               ValueType="RANGE"
               ValueList=""
               BreakOnFail="FALSE"
               MinVal="0"
               MaxVal="100"
               PrevIterVerdict="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Iterators: Object Iterator Command 13">
              </spirent.methodology.ObjectIteratorCommand>
              <spirent.methodology.IteratorConfigMixParamsCommand id="129356" 
               StmTemplateMix="0"
               TagData=""
               ObjectList=""
               TagList=""
               CurrVal=""
               Iteration="0"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Methodology: IteratorConfigMixParamsCommand 8">
                <Relation type="SequenceableProperties" target="129299"/>
              </spirent.methodology.IteratorConfigMixParamsCommand>
              <spirent.methodology.CreateTemplateConfigCommand id="129357" 
               AutoExpandTemplate="TRUE"
               StmTemplateMix="0"
               InputJson="{&quot;baseTemplateFile&quot;:
&quot;IPv4_NoVlan.xml&quot;}"
               CopiesPerParent="1"
               SrcTagList=""
               TargetTagList=""
               TemplateTagName=""
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Topology Template: Create Template Config Command 28">
                <Relation type="SequenceableProperties" target="129300"/>
              </spirent.methodology.CreateTemplateConfigCommand>
            </SequencerWhileCommand>
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129358" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 27">
            <Relation type="SequenceableProperties" target="129292"/>
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129359" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 22">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129360" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 7">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129361" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 509">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129362" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 485">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129363" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 4">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129364" 
           CommandName=""
           PackageName="spirent"
           CommandList=""
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 33">
          </spirent.methodology.IterationGroupCommand>
          <spirent.methodology.IterationGroupCommand id="129365" 
           CommandName=""
           PackageName="spirent"
           CommandList="129366"
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Iteration Framework: Iteration Group Command 2">
            <SequencerWhileCommand id="129366" 
             ExpressionCommand="129367"
             Condition="PASSED"
             CommandList="129370 129371"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="While">
              <spirent.methodology.ObjectIteratorCommand id="129367" 
               IterMode="STEP"
               StepVal="1"
               EnableInitialVal="FALSE"
               InitialVal="0"
               ValueType="RANGE"
               ValueList=""
               BreakOnFail="FALSE"
               MinVal="0"
               MaxVal="0"
               PrevIterVerdict="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Iterators: Object Iterator Command 2">
                <Relation type="UserTag" target="128388"/>
                <Relation type="UserTag" target="128394"/>
                <Relation type="UserTag" target="128400"/>
                <Relation type="UserTag" target="128407"/>
                <Relation type="UserTag" target="128413"/>
                <Relation type="UserTag" target="128419"/>
                <Relation type="UserTag" target="128425"/>
                <Relation type="UserTag" target="128431"/>
                <Relation type="UserTag" target="128437"/>
                <Relation type="UserTag" target="128445"/>
                <Relation type="UserTag" target="128451"/>
                <Relation type="UserTag" target="137293"/>
                <PropertyChainingConfig id="129368" 
                 SourcePropertyId="spirent.methodology.iteratorcommand.iteration"
                 TargetPropertyId="spirent.methodology.iteratorconfigcommand.iteration"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Property Chaining Config 3">
                  <Relation type="PropertyChain" target="129370"/>
                </PropertyChainingConfig>
                <PropertyChainingConfig id="129369" 
                 SourcePropertyId="spirent.methodology.iteratorcommand.currval"
                 TargetPropertyId="spirent.methodology.iteratorconfigcommand.currval"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Property Chaining Config 4">
                  <Relation type="PropertyChain" target="129370"/>
                </PropertyChainingConfig>
              </spirent.methodology.ObjectIteratorCommand>
              <spirent.methodology.IteratorConfigMixParamsCommand id="129370" 
               StmTemplateMix="137291"
               TagData="{&quot;rowConfigurator&quot;:
&quot;spirent.methodology.iteratorconfigmixparamscommand.129370&quot;,
&quot;rowIterator&quot;:
&quot;spirent.methodology.objectiteratorcommand.129367&quot;,
&quot;templateConfigurator&quot;:
&quot;spirent.methodology.createtemplateconfigcommand.129371&quot;}"
               ObjectList=""
               TagList=""
               CurrVal="0"
               Iteration="1"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Methodology: IteratorConfigMixParamsCommand 2">
                <Relation type="UserTag" target="128389"/>
                <Relation type="UserTag" target="128395"/>
                <Relation type="UserTag" target="128401"/>
                <Relation type="UserTag" target="128408"/>
                <Relation type="UserTag" target="128414"/>
                <Relation type="UserTag" target="128420"/>
                <Relation type="UserTag" target="128426"/>
                <Relation type="UserTag" target="128432"/>
                <Relation type="UserTag" target="128438"/>
                <Relation type="UserTag" target="128446"/>
                <Relation type="UserTag" target="128452"/>
                <Relation type="UserTag" target="137294"/>
              </spirent.methodology.IteratorConfigMixParamsCommand>
              <spirent.methodology.CreateTemplateConfigCommand id="129371" 
               AutoExpandTemplate="FALSE"
               StmTemplateMix="137291"
               InputJson="{&quot;modifyList&quot;: [{&quot;operationList&quot;:
[{&quot;pduBuilder&quot;: {&quot;tagNameList&quot;:
[&quot;ttStreamBlock&quot;], &quot;pduData&quot;: {&quot;pdu_list&quot;:
[{&quot;pdu&quot;: &quot;ethernet:EthernetII&quot;, &quot;enable&quot;: true,
&quot;pdu_data&quot;: [{&quot;enable&quot;: true, &quot;pdu_data&quot;:
[{&quot;property_data&quot;: {&quot;pri&quot;: &quot;111&quot;},
&quot;enable&quot;: true, &quot;name&quot;: &quot;vlan_7&quot;,
&quot;element_type&quot;: &quot;Vlan&quot;}], &quot;name&quot;:
&quot;vlans_7&quot;, &quot;element_type&quot;: &quot;vlans&quot;}],
&quot;name&quot;: &quot;eth_7&quot;, &quot;element_type&quot;:
&quot;pdu&quot;}, {&quot;pdu&quot;: &quot;ipv4:IPv4&quot;, &quot;enable&quot;:
true, &quot;name&quot;: &quot;ip_7&quot;, &quot;element_type&quot;:
&quot;pdu&quot;}]}}}, {&quot;propertyValue&quot;: {&quot;className&quot;:
&quot;StreamBlock&quot;, &quot;tagName&quot;: &quot;ttStreamBlock&quot;,
&quot;propertyValueList&quot;: {&quot;TrafficPattern&quot;:
&quot;BACKBONE&quot;, &quot;EndpointMapping&quot;: &quot;ONE_TO_MANY&quot;,
&quot;name&quot;: &quot;PRI 7&quot;}}}], &quot;description&quot;: &quot;TxTest
- Priority 7 Traffic&quot;}], &quot;tagPrefix&quot;: &quot;TxTest_&quot;,
&quot;baseTemplateFile&quot;: &quot;Ipv4_Stream.xml&quot;}"
               CopiesPerParent="1"
               SrcTagList=""
               TargetTagList=""
               TemplateTagName=""
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Topology Template: Create Template Config Command 22">
                <Relation type="UserTag" target="128390"/>
                <Relation type="UserTag" target="128396"/>
                <Relation type="UserTag" target="128402"/>
                <Relation type="UserTag" target="128409"/>
                <Relation type="UserTag" target="128415"/>
                <Relation type="UserTag" target="128421"/>
                <Relation type="UserTag" target="128427"/>
                <Relation type="UserTag" target="128433"/>
                <Relation type="UserTag" target="128439"/>
                <Relation type="UserTag" target="128447"/>
                <Relation type="UserTag" target="128453"/>
                <Relation type="UserTag" target="137295"/>
              </spirent.methodology.CreateTemplateConfigCommand>
            </SequencerWhileCommand>
          </spirent.methodology.IterationGroupCommand>
        </spirent.methodology.traffic.CreateTrafficMixCommand>
      </spirent.methodology.TrafficGroupCommand>
      <SequencerComment id="129372" 
       Text="Execute the Test"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Comment">
      </SequencerComment>
      <spirent.methodology.TestGroupCommand id="129373" 
       DisplayName="Test Execution"
       Description="Execution of the methodology test."
       CommandName=""
       PackageName="spirent"
       CommandList="129375 129376 129377 129381 129382"
       ExecutionMode="BACKGROUND"
       GroupCategory="REGULAR_COMMAND"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Test Group">
        <spirent.methodology.CompleteIterationCommand id="129374" 
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Iteration Framework: Complete Frame Size Iteration">
        </spirent.methodology.CompleteIterationCommand>
        <SetCounterGroupCommand id="129375" 
         GroupIndex="17"
         Project="2"
         JitterMode="2"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Set Counter Mode">
        </SetCounterGroupCommand>
        <SequencerComment id="129376" 
         Text="L2 Learning"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Comment">
        </SequencerComment>
        <SequencerIfCommand id="129377" 
         ExpressionCommand="129378"
         Condition="PASSED"
         CommandList="129379 129380"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="If">
          <spirent.methodology.RunSqlCommand id="129378" 
           DbJsonString="{     &quot;sql_for_command_verdict&quot;: [         {
            &quot;static&quot;: &quot;SELECT DISTINCT Enabled FROM
isLearningEnabled&quot;         }     ],     &quot;sql_operations&quot;: [     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
isLearningEnabled( Enabled BOOLEAN )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;columns&quot;:
[                     &quot;Enabled&quot;                 ]             },     
       &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;INSERT INTO isLearningEnabled VALUES (&quot;         
       },                 {                     &quot;dynamic&quot;:
&quot;0&quot;                 },                 {                    
&quot;static&quot;: &quot;)&quot;                 }             ]         }    
] }"
           DbJsonFileName=""
           EnableLoadFromFileName="FALSE"
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="FALSE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Test Methodology: Run SQL Command">
          </spirent.methodology.RunSqlCommand>
          <spirent.methodology.L2L3LearningCommand id="129379" 
           ObjectList=""
           TagNameList="TxLoadPortGroup TxTestPortGroup RxPortGroup"
           EnableL2Learning="TRUE"
           EnableL3Learning="FALSE"
           L2LearningOption="TX_RX"
           WaitForArpToFinish="FALSE"
           ForceArp="FALSE"
           VerifyArp="FALSE"
           CommandName=""
           PackageName="spirent"
           ErrorOnFailure="TRUE"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Test Methodology: L2L3 Learning Command">
          </spirent.methodology.L2L3LearningCommand>
          <WaitCommand id="129380" 
           WaitTime="3"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="Wait">
          </WaitCommand>
        </SequencerIfCommand>
        <SequencerComment id="129381" 
         Text="Iterate over Frame Sizes"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Comment">
        </SequencerComment>
        <spirent.methodology.IterationGroupCommand id="129382" 
         CommandName=""
         PackageName="spirent"
         CommandList="129383"
         ExecutionMode="BACKGROUND"
         GroupCategory="REGULAR_COMMAND"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="Iteration Framework: Iteration Group Command 3">
          <SequencerWhileCommand id="129383" 
           ExpressionCommand="129384"
           Condition="PASSED"
           CommandList="129391 129392 129393 129394 129422 129423 129453 129454
129455 129456 129457 129458 129459 129460 129461 129462 129463 129464 129465
129466 129467 129468 129469 129470 129471 129510 129473 129507 129472"
           ExecutionMode="BACKGROUND"
           GroupCategory="REGULAR_COMMAND"
           AutoDestroy="FALSE"
           ExecuteSynchronous="FALSE"
           ProgressEnable="TRUE"
           ProgressIsSafeCancel="TRUE"
           Active="TRUE"
           LocalActive="TRUE"
           Name="While">
            <spirent.methodology.ObjectIteratorCommand id="129384" 
             IterMode="STEP"
             StepVal="1"
             EnableInitialVal="FALSE"
             InitialVal="0"
             ValueType="LIST"
             ValueList="128 256"
             BreakOnFail="FALSE"
             MinVal="0"
             MaxVal="100"
             PrevIterVerdict="TRUE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="FALSE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Iterators: Object Iterator Command">
              <Relation type="UserTag" target="128440"/>
              <PropertyChainingConfig id="129385" 
               SourcePropertyId="spirent.methodology.iteratorcommand.iteration"
               TargetPropertyId="spirent.methodology.iteratorconfigcommand.iteration"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Property Chaining Config 26">
                <Relation type="PropertyChain" target="129391"/>
              </PropertyChainingConfig>
              <PropertyChainingConfig id="129386" 
               SourcePropertyId="spirent.methodology.iteratorcommand.currval"
               TargetPropertyId="spirent.methodology.iteratorconfigcommand.currval"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Property Chaining Config 27">
                <Relation type="PropertyChain" target="129391"/>
              </PropertyChainingConfig>
            </spirent.methodology.ObjectIteratorCommand>
            <SaveResultsCommand id="129387" 
             ResultFileName="IEEE8021QoSValidation.db"
             SaveDetailedResults="TRUE"
             ClearChartResultAfterSave="TRUE"
             CollectResult="TRUE"
             LoopMode="APPEND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Save Results - Frame Size Start">
            </SaveResultsCommand>
            <SaveResultsCommand id="129388" 
             ResultFileName="IEEE8021QoSValidation.db"
             SaveDetailedResults="TRUE"
             ClearChartResultAfterSave="TRUE"
             CollectResult="TRUE"
             LoopMode="APPEND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Save Iteration Results">
            </SaveResultsCommand>
            <spirent.methodology.RunSqlCommand id="129389" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDroppedFrameCount( TxTestLoad TEXT, PortName TEXT, ActualDuplicates
INTEGER, ExpectedMaxDuplicates INTEGER )&quot;                 }             ] 
       },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalDuplicate,&quot;                 },                
{                     &quot;static&quot;: &quot;(SELECT MaxDuplicates FROM
IEEE8021ExpectedQoS WHERE PRI=0) AS ExpectedMaxDuplicates&quot;                
},                 {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI0 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;ActualDuplicates&quot;, 
                   &quot;ExpectedMaxDuplicates&quot;                 ]         
   },             &quot;table&quot;: [],             &quot;sql_statement&quot;:
[                 {                     &quot;static&quot;: &quot;SELECT
(SELECT CurrVal FROM spirent_methodology_IteratorConfigTrafficLoadCommand) AS
TxTestLoad,&quot;                 },                 {                    
&quot;static&quot;: &quot;PortName, TotalDuplicate AS ActualDuplicates,
ExpectedMaxDuplicates FROM PRI0_DroppedFrameCount&quot;                 },     
           {                     &quot;static&quot;: &quot;WHERE TotalDuplicate
&gt; ExpectedMaxDuplicates&quot;                 }             ]         }    
] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129390" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummarySigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;report&quot;: {                 &quot;report_verdict&quot;: {            
        &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Signature
Frame Count.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI did not meet expected Signature Frame Count.&quot;,      
              &quot;sql_for_verdict&quot;: [                         {         
                   &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0
THEN 0 ELSE 1 END) AS Verdict FROM FSIterSigFrameCount&quot;                   
     }                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Signature Frame Count&quot;
            },             &quot;sql_statement&quot;: [                 {      
              &quot;static&quot;: &quot;SELECT * FROM FSIterSigFrameCount&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryMaxJitter&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;report&quot;: {                 &quot;report_verdict&quot;: {            
        &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Jitter.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Jitter.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxJitter&quot;                         }           
         ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Jitter (usec)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxJitter&quot;                 }
            ]         },         {             &quot;db_information&quot;: {   
             &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryMaxLatency&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualLatency&quot;,    
                &quot;ExpectedMaxLatency&quot;                 ]             },
            &quot;table&quot;: [],             &quot;report&quot;: {           
     &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Latency.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Latency.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxLatency&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Latency (usec)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxLatency&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;report&quot;: {           
     &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Loss.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Loss.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterDroppedFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Loss&quot;             },             &quot;sql_statement&quot;: [
                {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterDroppedFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;SummaryDuplicateFrameCount&quot;   
             },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Duplicate.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Duplicate.&quot;,                  
  &quot;sql_for_verdict&quot;: [                         {                     
       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE
1 END) AS Verdict FROM FSIterDuplicateFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Duplicate&quot;        
    },             &quot;sql_statement&quot;: [                 {              
      &quot;static&quot;: &quot;SELECT * FROM FSIterDuplicateFrameCount&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryReorderedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Reordered.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Reordered.&quot;,                  
  &quot;sql_for_verdict&quot;: [                         {                     
       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE
1 END) AS Verdict FROM FSIterReorderedFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Reordered&quot;        
    },             &quot;sql_statement&quot;: [                 {              
      &quot;static&quot;: &quot;SELECT * FROM FSIterReorderedFrameCount&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryLateFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;report&quot;: {                 &quot;report_verdict&quot;: {            
        &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;All PRI met expected Max
Late.&quot;,                     &quot;failed_verdict_explanation&quot;:
&quot;One or more PRI exceeded expected Max Late.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterLateFrameCount&quot;                         }      
              ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Late&quot;             },             &quot;sql_statement&quot;: [
                {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterLateFrameCount&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterSigFrameCount&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;SUMMARY&quot;             },         
   &quot;table&quot;: [],             &quot;sql_statement&quot;: [             
   {                     &quot;static&quot;: &quot;DROP TABLE
FSIterMaxJitter&quot;                 }             ]         },         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterMaxLatency&quot;                 }  
          ]         },         {             &quot;db_information&quot;: {     
           &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDroppedFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterReorderedFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterLateFrameCount&quot;                 }             ]         }     ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Frame Size Iteration Result Analysis">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.IteratorConfigFrameSizeCommand id="129391" 
             ObjectList=""
             TagList="TxLoad_PRI0_ttStreamBlock TxLoad_PRI1_ttStreamBlock
TxLoad_PRI2_ttStreamBlock TxLoad_PRI3_ttStreamBlock TxLoad_PRI4_ttStreamBlock
TxLoad_PRI5_ttStreamBlock TxLoad_PRI6_ttStreamBlock TxTest_ttStreamBlock"
             CurrVal="256"
             Iteration="2"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Configurators: Iterator Config Frame Size Command 1">
            </spirent.methodology.IteratorConfigFrameSizeCommand>
            <SaveResultsCommand id="129392" 
             ResultFileName="IEEE8021QoSValidation.db"
             SaveDetailedResults="TRUE"
             ClearChartResultAfterSave="TRUE"
             CollectResult="TRUE"
             LoopMode="APPEND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Save Results - Frame Size Start">
            </SaveResultsCommand>
            <SequencerComment id="129393" 
             Text="Sanity Test - First Frame Size ONLY"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Comment">
            </SequencerComment>
            <SequencerIfCommand id="129394" 
             ExpressionCommand="129395"
             Condition="PASSED"
             CommandList="129397 129398 129399 129400 129401 129402 129403
129404 129405 129406 129407 129408 129409 129410 129411 129412 129413 129414
129511 129415 129416"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="If">
              <spirent.methodology.RunSqlCommand id="129395" 
               DbJsonString="{ &quot;sql_for_command_verdict&quot;: [{
&quot;static&quot;: &quot;SELECT MAX(Iteration)=1 FROM
isFirstFrameSizeIteration&quot; }], &quot;sql_operations&quot;: [{
&quot;db_information&quot;: { &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,
&quot;columns&quot;: [&quot;Iteration&quot;], &quot;dest_db&quot;: {
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;, &quot;dest_table_name&quot;:
&quot;isFirstFrameSizeIteration&quot; } }, &quot;sql_statement&quot;: [{
&quot;static&quot;: &quot;SELECT Iteration FROM
spirent_methodology_IteratorConfigFrameSizeCommand&quot; }] }] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="FALSE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Methodology: Run SQL Command">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129396" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxJitter(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxJitter REAL,
ExpectedMaxJitter REAL )&quot;                 }             ]         },      
  {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxJitter&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxJitter) AS MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE
PRI=1) AS ExpectedMaxJitter&quot;                 },                 {         
           &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI1_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI2_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI3_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI4_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI5_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI6_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI7_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Max Jitter">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.ExecuteWithTagsCommand id="129397" 
               CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start Rx Analyzers.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;AnalyzerStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;AnalyzerList&quot;, &quot;tag_name_list&quot;: [                
&quot;RxPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Analyzer&quot;] }] }] }"
               CmdJsonFileName=""
               EnableLoadFromFileName="FALSE"
               ApplyPassFailState="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Start Rx Analyzers (ExecWithTags)">
              </spirent.methodology.ExecuteWithTagsCommand>
              <spirent.methodology.ExecuteWithTagsCommand id="129398" 
               CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start TxLoad traffic.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] }] }"
               CmdJsonFileName=""
               EnableLoadFromFileName="FALSE"
               ApplyPassFailState="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Start TxLoad Traffic (ExecWithTags)">
              </spirent.methodology.ExecuteWithTagsCommand>
              <ResultsClearAllCommand id="129399" 
               Project="2"
               PortList=""
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Clear All Results">
              </ResultsClearAllCommand>
              <WaitCommand id="129400" 
               WaitTime="3"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Wait - Iteration Duration">
              </WaitCommand>
              <spirent.methodology.ExecuteWithTagsCommand id="129401" 
               CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Stop TxLoad traffic.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStopCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] }] }"
               CmdJsonFileName=""
               EnableLoadFromFileName="FALSE"
               ApplyPassFailState="TRUE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Stop TxLoad Traffic (ExecWithTags)">
              </spirent.methodology.ExecuteWithTagsCommand>
              <SequencerComment id="129402" 
               Text="Validate Sanity Results"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Comment">
              </SequencerComment>
              <SaveResultsCommand id="129403" 
               ResultFileName="IEEE8021QoSValidation.db"
               SaveDetailedResults="TRUE"
               ClearChartResultAfterSave="TRUE"
               CollectResult="TRUE"
               LoopMode="APPEND"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Save Results - Sanity">
              </SaveResultsCommand>
              <spirent.methodology.RunSqlCommand id="129404" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI0(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI1(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI2(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI3(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI4(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI5(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI6(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI7(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;FullPortLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PercentageLoad, BpsLoad,
(BpsLoad/(PercentageLoad*0.01)) AS PortBpsLoad FROM Streamblock&quot;          
      },                 {                     &quot;static&quot;: &quot;WHERE
Name GLOB &apos;*PRI 0-1*&apos;&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxPortGroup&quot;                 },                 &quot;columns&quot;:
[                     &quot;PortHnd&quot;                 ]             },     
       &quot;table&quot;: [],             &quot;sql_statement&quot;: [         
       {                     &quot;static&quot;: &quot;SELECT Handle AS PortHnd
FROM Port JOIN RelationTable&quot;                 },                 {        
            &quot;static&quot;: &quot;ON
Port.Handle=RelationTable.SourceHnd&quot;                 },                 { 
                   &quot;static&quot;: &quot;WHERE
RelationTable.TargetHnd=(SELECT Handle FROM Tag WHERE
Name=&apos;RxPortGroup&apos;)&quot;                 }             ]         }, 
       {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI0&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 0*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI1&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 1*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI2&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 2*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI3&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 3*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI4&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 4*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI5&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 5*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI6&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 6*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI7&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 7*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;IEEE8021ExpectedQoS&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT * FROM
IEEE8021ExpectedQoS&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                    
&quot;dest_table_name&quot;: &quot;IEEE8021ExpectedRx&quot;                 }  
          },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM IEEE8021ExpectedRx&quot;               
 }             ]         }     ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Build Custom Rx Tables">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129405" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationGenLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, SBName TEXT, PercentageLoad
REAL, ExpectedPercentLoad REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationGenLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, (SELECT Name from Port WHERE
Handle=Streamblock.ParentHnd) AS PortName, Name AS SBName, PercentageLoad,
(SELECT &apos;12.5&apos;) AS ExpectedPercentLoad FROM StreamBlock&quot;        
        },                 {                     &quot;static&quot;:
&quot;WHERE Name NOT GLOB &apos;*PRI 7*&apos; AND
PercentageLoad!=ExpectedPercentLoad&quot;                 }             ]      
  }             ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Test Load Validation - Gen PercentageLoad">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129406" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationSigFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualSigFrame
INTEGER, Failure TEXT )&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI0
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI0_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_0 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI0_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_0 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI1_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI1_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI2_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI2_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI2_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI3_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI3_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI3_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI4_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI4_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI4_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI5_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI5_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI5_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI6_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI6_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI6_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI7_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI7_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI7_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         }     ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Signature Frames">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129407" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationBpsLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, BpsLoad REAL,
ExpectedBpsLoad REAL )&quot;                 }             ]         },        
{             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 0*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI0 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 1*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI1 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationBpsLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;BpsLoad&quot;,          
          &quot;ExpectedBpsLoad&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;sql_statement&quot;: [             
   {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI1_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=1) AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
2*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI2_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=2) AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
3*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI3_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=3) AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
4*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI4_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=4) AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
5*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI5_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=5) AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
6*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI6_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=6) AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
7*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI7_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=7) AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Min Rx/Tx BW Ratio">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129408" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxJitter(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxJitter REAL,
ExpectedMaxJitter REAL )&quot;                 }             ]         },      
  {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxJitter&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxJitter) AS MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE
PRI=1) AS ExpectedMaxJitter&quot;                 },                 {         
           &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI1_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI2_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI3_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI4_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI5_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI6_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI7_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Max Jitter">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129409" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxLatency(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxLatency
REAL, ExpectedMaxLatency REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxLatency&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxLatency) AS MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLatency&quot;                 },                 {  
                  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI1_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI2_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI3_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI4_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI5_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI6_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI7_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Max Latency">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129410" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDroppedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT,
PRI INTEGER, ActualDropped INTEGER, ExpectedMaxDropped INTEGER )&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalDropped AS
ActualDropped, ExpectedMaxDropped FROM PRI1_DroppedFrameCount&quot;            
    },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_1 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI2_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=2) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI2_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalDropped AS
ActualDropped, ExpectedMaxDropped FROM PRI3_DroppedFrameCount&quot;            
    },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_3 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI4_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=4) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI4_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalDropped AS
ActualDropped, ExpectedMaxDropped FROM PRI5_DroppedFrameCount&quot;            
    },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_5 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI6_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=6) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI6_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalDropped AS
ActualDropped, ExpectedMaxDropped FROM PRI7_DroppedFrameCount&quot;            
    },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_7 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         }     
       ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Dropped Frame Count">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129411" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDuplicateFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualDuplicate INTEGER, ExpectedMaxDuplicate INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalDuplicate
AS ActualDuplicate, ExpectedMaxDuplicate FROM PRI1_DuplicateFrameCount&quot;   
             },                 {                     &quot;static&quot;:
&quot;WHERE TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                 }          
  ]         },         {             &quot;db_information&quot;: {             
   &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI2_DuplicateFrameCount&quot;                 }             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DuplicateFrameCount) AS TotalDuplicate, (SELECT MaxDuplicate FROM
IEEE8021ExpectedQoS WHERE PRI=2) AS ExpectedMaxDuplicate&quot;                
},                 {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDuplicateFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDuplicate&quot;,  
                  &quot;ExpectedMaxDuplicate&quot;                 ]           
 },             &quot;table&quot;: [],             &quot;sql_statement&quot;: [
                {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI2_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalDuplicate
AS ActualDuplicate, ExpectedMaxDuplicate FROM PRI3_DuplicateFrameCount&quot;   
             },                 {                     &quot;static&quot;:
&quot;WHERE TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                 }          
  ]         },         {             &quot;db_information&quot;: {             
   &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI4_DuplicateFrameCount&quot;                 }             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DuplicateFrameCount) AS TotalDuplicate, (SELECT MaxDuplicate FROM
IEEE8021ExpectedQoS WHERE PRI=4) AS ExpectedMaxDuplicate&quot;                
},                 {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDuplicateFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDuplicate&quot;,  
                  &quot;ExpectedMaxDuplicate&quot;                 ]           
 },             &quot;table&quot;: [],             &quot;sql_statement&quot;: [
                {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI4_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalDuplicate
AS ActualDuplicate, ExpectedMaxDuplicate FROM PRI5_DuplicateFrameCount&quot;   
             },                 {                     &quot;static&quot;:
&quot;WHERE TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                 }          
  ]         },         {             &quot;db_information&quot;: {             
   &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI6_DuplicateFrameCount&quot;                 }             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DuplicateFrameCount) AS TotalDuplicate, (SELECT MaxDuplicate FROM
IEEE8021ExpectedQoS WHERE PRI=6) AS ExpectedMaxDuplicate&quot;                
},                 {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDuplicateFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDuplicate&quot;,  
                  &quot;ExpectedMaxDuplicate&quot;                 ]           
 },             &quot;table&quot;: [],             &quot;sql_statement&quot;: [
                {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI6_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalDuplicate
AS ActualDuplicate, ExpectedMaxDuplicate FROM PRI7_DuplicateFrameCount&quot;   
             },                 {                     &quot;static&quot;:
&quot;WHERE TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                 }          
  ]         }             ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Duplicate Frame Count">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129412" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationReorderedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualReordered INTEGER, ExpectedMaxReordered INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI1_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI2_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI3_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI4_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI5_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI6_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI7_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Reordered Frame Count">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129413" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationLateFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualLate
INTEGER, ExpectedMaxLate INTEGER )&quot;                 }             ]       
 },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_LateFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(LateFrameCount) AS TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLate&quot;                 },                 {     
               &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP
BY PortHnd&quot;                 }             ]         },         {          
  &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI1_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI2_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI3_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI4_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI5_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI6_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI7_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Validate QoS - Late Frame Count">
              </spirent.methodology.RunSqlCommand>
              <spirent.methodology.RunSqlCommand id="129414" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSChartPercentLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, PercentLoad
REAL )&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI0_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI1_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI2_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI3_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI4_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI5_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI6_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;SANITY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI7_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;RTChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;Priority_0&quot;,                     &quot;Priority_1&quot;,            
        &quot;Priority_2&quot;,                     &quot;Priority_3&quot;,    
                &quot;Priority_4&quot;,                    
&quot;Priority_5&quot;,                     &quot;Priority_6&quot;,            
        &quot;Priority_7&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT
SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI0_BpsLoad)) AS Priority_0,&quot;    
            },                 {                     &quot;static&quot;:
&quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT
PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM PRI1_BpsLoad)) AS
Priority_1,&quot;                 },                 {                    
&quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI2_BpsLoad)) AS Priority_2,&quot;                 },                 {       
             &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM
(SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad
FROM PRI3_BpsLoad)) AS Priority_3,&quot;                 },                 {  
                  &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*)
FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS
PercentLoad FROM PRI4_BpsLoad)) AS Priority_4,&quot;                 },        
        {                     &quot;static&quot;: &quot;(SELECT
SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI5_BpsLoad)) AS Priority_5,&quot;    
            },                 {                     &quot;static&quot;:
&quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT
PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM PRI6_BpsLoad)) AS
Priority_6,&quot;                 },                 {                    
&quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI7_BpsLoad)) AS Priority_7&quot;                 }             ]         }   
         ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Collect Chart Data">
              </spirent.methodology.RunSqlCommand>
              <SequencerComment id="129415" 
               Text="Sanity Verdict"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Comment">
              </SequencerComment>
              <SequencerIfCommand id="129416" 
               ExpressionCommand="129417"
               Condition="FAILED"
               CommandList="129506 129418 129419"
               ExecutionMode="BACKGROUND"
               GroupCategory="REGULAR_COMMAND"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="If">
                <spirent.methodology.RunSqlCommand id="129417" 
                 DbJsonString="{     &quot;sql_for_command_verdict&quot;: [    
    {             &quot;static&quot;: &quot;SELECT CASE WHEN SUM(Failed) &gt; 0
THEN 0 ELSE 1 END FROM SanitySummary&quot;         }     ],    
&quot;sql_operations&quot;: [         {             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SanitySummary&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT \&quot;Generator
Percent Load\&quot;) AS QoS, COUNT(*) AS Failed FROM FSIterGenLoad&quot;       
         }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SanitySummary&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT \&quot;Signature Frame Count\&quot;)
AS QoS, COUNT(*) AS Failed FROM FSIterSigFrameCount&quot;                 }    
        ]         },         {             &quot;db_information&quot;: {       
         &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SanitySummary&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT \&quot;Min BW
Ratio\&quot;) AS QoS, COUNT(*) AS Failed FROM FSIterBpsLoad&quot;              
  }             ]         },         {             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SanitySummary&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT \&quot;Max
Jitter\&quot;) AS QoS, COUNT(*) AS Failed FROM FSIterMaxJitter&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SanitySummary&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT \&quot;Max Latency\&quot;) AS QoS,
COUNT(*) AS Failed FROM FSIterMaxLatency&quot;                 }             ] 
       },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;SanitySummary&quot;                
}             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT \&quot;Dropped Frame Count\&quot;) AS
QoS, COUNT(*) AS Failed FROM FSIterDroppedFrameCount&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SanitySummary&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT \&quot;Duplicate
Frame Count\&quot;) AS QoS, COUNT(*) AS Failed FROM
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;SanitySummary&quot;                
}             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT \&quot;Reordered Frame Count\&quot;)
AS QoS, COUNT(*) AS Failed FROM FSIterReorderedFrameCount&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SanitySummary&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT \&quot;Late
Frame Count\&quot;) AS QoS, COUNT(*) AS Failed FROM FSIterLateFrameCount&quot; 
               }             ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="FALSE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Test Methodology: Run SQL Command">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.CompleteIterationCommand id="129418" 
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Iteration Framework: Complete Iteration - Frame Size">
                </spirent.methodology.CompleteIterationCommand>
                <SequencerBreakLoopCommand id="129419" 
                 BreakAll="FALSE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Break">
                </SequencerBreakLoopCommand>
                <spirent.methodology.RunSqlCommand id="129506" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;enable&quot;: true,             &quot;db_information&quot;: {   
             &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryGenLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;StreamBlock Name&quot;,       
             &quot;Tx Load (%)&quot;,                     &quot;Expected Tx
Load (%)&quot;                 ]             },             &quot;table&quot;:
[],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterGenLoad&quot;                         }             
       ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Test
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterGenLoad&quot;                 }  
          ]         },         {             &quot;enable&quot;: true,         
   &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummarySigFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Signature Frame Count&quot;,                    
&quot;Failure&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM FSIterSigFrameCount&quot;            
            }                     ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Rx Signature Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterSigFrameCount&quot;                 }             ]         },         { 
           &quot;enable&quot;: false,             &quot;db_information&quot;: {
                &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryBpsLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;bps Load&quot;,                     &quot;Expected bps Load&quot;,  
                  &quot;Bandwidth Ratio&quot;                 ]             }, 
           &quot;table&quot;: [],             &quot;report&quot;: {            
    &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterBpsLoad&quot;                         }             
       ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },  
          &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterBpsLoad&quot;                 }  
          ]         },         {             &quot;enable&quot;: true,         
   &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryMaxJitter&quot;                 },   
             &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Jitter (us)&quot;,                     &quot;Max
Jitter Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxJitter&quot;                         }           
         ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Jitter (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxJitter&quot;                 }
            ]         },         {             &quot;enable&quot;: true,       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryMaxLatency&quot;                 },  
              &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Latency (us)&quot;,                     &quot;Max
Latency Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxLatency&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Latency (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxLatency&quot;                
}             ]         },         {             &quot;enable&quot;: true,     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryDroppedFrameCount&quot;              
  },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Loss Frame Count&quot;,                     &quot;Max
Loss Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterDroppedFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Loss Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterDroppedFrameCount&quot;          
      }             ]         },         {             &quot;enable&quot;:
true,             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;SummaryDuplicateFrameCount&quot;   
             },                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Duplicate Frame Count&quot;,   
                 &quot;Max Duplicate Frame Count&quot;                 ]       
     },             &quot;table&quot;: [],             &quot;report&quot;: {   
             &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterDuplicateFrameCount&quot;                         } 
                   ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Duplicate Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryReorderedFrameCount&quot;            
    },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Reordered Frame Count&quot;,                    
&quot;Max Reordered Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterReorderedFrameCount&quot;                         } 
                   ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Reordered Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterReorderedFrameCount&quot;                 }             ]         },     
   {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryLateFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Late Frame Count&quot;,                     &quot;Max Late
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterLateFrameCount&quot;                         }      
              ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterLateFrameCount&quot;             
   }             ]         },         {             &quot;enable&quot;: true,  
          &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryChartPercentLoad&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT * FROM
FSChartPercentLoad&quot;                 }             ]         },         {  
          &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterGenLoad&quot;                 }     
       ]         },         {             &quot;db_information&quot;: {        
        &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterSigFrameCount&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterBpsLoad&quot;                 }     
       ]         },         {             &quot;db_information&quot;: {        
        &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterMaxJitter&quot;                 }             ]         },         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterMaxLatency&quot;                 }  
          ]         },         {             &quot;db_information&quot;: {     
           &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDroppedFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterReorderedFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterLateFrameCount&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSChartPercentLoad&quot;                 }
            ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Frame Size Iteration Result Analysis">
                </spirent.methodology.RunSqlCommand>
              </SequencerIfCommand>
              <spirent.methodology.RunSqlCommand id="129511" 
               DbJsonString="{     &quot;sql_operations&quot;: [         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterGenLoad(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, \&quot;StreamBlock Name\&quot; TEXT,
\&quot;Tx Load (%)\&quot; REAL, \&quot;Expected Tx Load (%)\&quot; REAL )&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterSigFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Signature Frame
Count\&quot; INTEGER, Failure TEXT )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterBpsLoad( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;bps Load\&quot; REAL, \&quot;Expected bps Load\&quot; REAL,
\&quot;Bandwidth Ratio\&quot; REAL )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterMaxJitter( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;Max Jitter (us)\&quot; REAL, \&quot;Max Jitter Allowed (us)\&quot; REAL
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterMaxLatency(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Max Latency
(us)\&quot; REAL, \&quot;Max Latency Allowed (us)\&quot; REAL )&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDroppedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Loss Frame
Count\&quot; INTEGER, \&quot;Max Loss Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDuplicateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Duplicate Frame
Count\&quot; INTEGER, \&quot;Max Duplicate Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterReorderedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Reordered Frame
Count\&quot; INTEGER, \&quot;Max Reordered Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterLateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Late Frame
Count\&quot; INTEGER, \&quot;Max Late Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {             &quot;enable&quot;:
true,             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;FSIterGenLoad&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;StreamBlock
Name&quot;,                     &quot;Tx Load (%)&quot;,                    
&quot;Expected Tx Load (%)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationGenLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;SANITY
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, SBName AS \&quot;StreamBlock Name\&quot;, PercentageLoad AS
\&quot;Tx Load (%)\&quot;, ExpectedPercentLoad AS \&quot;Expected Tx Load
(%)\&quot; FROM IterationGenLoad&quot;                 }             ]        
},         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterSigFrameCount&quot;                 },
                &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Signature Frame Count&quot;,                    
&quot;Failure&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM IterationSigFrameCount&quot;         
               }                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;SANITY: Rx Signature Frame Count&quot;         
   },             &quot;sql_statement&quot;: [                 {               
     &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualSigFrame AS \&quot;Signature
Frame Count\&quot;, Failure FROM IterationSigFrameCount&quot;                 }
            ]         },         {             &quot;enable&quot;: false,      
      &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterBpsLoad&quot;                 },      
          &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;bps Load&quot;,                     &quot;Expected bps
Load&quot;,                     &quot;Bandwidth Ratio&quot;                 ]  
          },             &quot;table&quot;: [],             &quot;report&quot;:
{                 &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationBpsLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;SANITY:
Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },           
 &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, BpsLoad AS \&quot;bps Load\&quot;,
ExpectedBpsLoad AS \&quot;Expected bps Load\&quot;,
ROUND(BpsLoad/ExpectedBpsLoad,2) AS \&quot;Bandwidth Ratio\&quot; FROM
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;enable&quot;: true,             &quot;db_information&quot;: {    
            &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterMaxJitter&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Max Jitter (us)&quot;,                     &quot;Max Jitter Allowed
(us)&quot;                 ]             },             &quot;table&quot;: [], 
           &quot;report&quot;: {                 &quot;report_verdict&quot;: { 
                   &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxJitter&quot;                         }        
            ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;SANITY:
Max Jitter (us)&quot;             },             &quot;sql_statement&quot;: [  
              {                     &quot;static&quot;: &quot;SELECT FrameSize
AS \&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
MaxJitter AS \&quot;Max Jitter (us)\&quot;, ExpectedMaxJitter AS \&quot;Max
Jitter Allowed (us)\&quot; FROM IterationMaxJitter&quot;                 }     
       ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterMaxLatency&quot;                 },   
             &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Latency (us)&quot;,                     &quot;Max
Latency Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxLatency&quot;                         }       
             ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;SANITY:
Max Latency (us)&quot;             },             &quot;sql_statement&quot;: [ 
               {                     &quot;static&quot;: &quot;SELECT FrameSize
AS \&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
MaxLatency AS \&quot;Max Latency (us)\&quot;, ExpectedMaxLatency AS \&quot;Max
Latency Allowed (us)\&quot; FROM IterationMaxLatency&quot;                 }   
         ]         },         {             &quot;enable&quot;: true,          
  &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterDroppedFrameCount&quot;               
 },                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Loss Frame Count&quot;,                     &quot;Max Loss
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDroppedFrameCount&quot;                         }
                    ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;SANITY: Max Loss Frame Count&quot;            
},             &quot;sql_statement&quot;: [                 {                  
  &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualDropped AS \&quot;Loss Frame
Count\&quot;, ExpectedMaxDropped AS \&quot;Max Loss Frame Count\&quot; FROM
IterationDroppedFrameCount&quot;                 }             ]         },    
    {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterDuplicateFrameCount&quot;             
   },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Duplicate Frame Count&quot;,                    
&quot;Max Duplicate Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDuplicateFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;SANITY: Max Duplicate Frame Count&quot;        
    },             &quot;sql_statement&quot;: [                 {              
      &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualDuplicate AS \&quot;Duplicate
Frame Count\&quot;, ExpectedMaxDuplicate AS \&quot;Max Duplicate Frame
Count\&quot; FROM IterationDuplicateFrameCount&quot;                 }         
   ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterReorderedFrameCount&quot;             
   },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Reordered Frame Count&quot;,                    
&quot;Max Reordered Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationReorderedFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;SANITY: Max Reordered Frame Count&quot;        
    },             &quot;sql_statement&quot;: [                 {              
      &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualReordered AS \&quot;Reordered
Frame Count\&quot;, ExpectedMaxReordered AS \&quot;Max Reordered Frame
Count\&quot; FROM IterationReorderedFrameCount&quot;                 }         
   ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterLateFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Late Frame Count&quot;,                     &quot;Max Late
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationLateFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;SANITY:
Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, ActualLate AS \&quot;Late Frame Count\&quot;,
ExpectedMaxLate AS \&quot;Max Late Frame Count\&quot; FROM
IterationLateFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;              },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
IterationGenLoad&quot;                  }             ]         },         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationSigFrameCount&quot;              
  }             ]         },         {             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;             },      
      &quot;table&quot;: [],             &quot;sql_statement&quot;: [          
      {                     &quot;static&quot;: &quot;DROP TABLE
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationMaxJitter&quot;                 }
            ]         },         {             &quot;db_information&quot;: {   
             &quot;db_name&quot;: &quot;SUMMARY&quot;             },           
 &quot;table&quot;: [],             &quot;sql_statement&quot;: [               
 {                     &quot;static&quot;: &quot;DROP TABLE
IterationMaxLatency&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDroppedFrameCount&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDuplicateFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationReorderedFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationLateFrameCount&quot;             
   }             ]         }     ] }"
               DbJsonFileName=""
               EnableLoadFromFileName="FALSE"
               CommandName=""
               PackageName="spirent"
               ErrorOnFailure="TRUE"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="Sanity Result Analysis">
              </spirent.methodology.RunSqlCommand>
            </SequencerIfCommand>
            <SequencerComment id="129422" 
             Text="TxTest Load Test - Iterate over Load"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Comment">
            </SequencerComment>
            <spirent.methodology.IterationGroupCommand id="129423" 
             CommandName=""
             PackageName="spirent"
             CommandList="129424"
             ExecutionMode="BACKGROUND"
             GroupCategory="REGULAR_COMMAND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Iteration Framework: Iteration Group Command 11">
              <SequencerWhileCommand id="129424" 
               ExpressionCommand="129425"
               Condition="PASSED"
               CommandList="129429 129430 129431 129432 129433 129434 129435
129436 129437 129438 129439 129440 129441 129442 129443 129444 129445 129446
129447 129448 129508 129449 129450"
               ExecutionMode="BACKGROUND"
               GroupCategory="REGULAR_COMMAND"
               AutoDestroy="FALSE"
               ExecuteSynchronous="FALSE"
               ProgressEnable="TRUE"
               ProgressIsSafeCancel="TRUE"
               Active="TRUE"
               LocalActive="TRUE"
               Name="While">
                <spirent.methodology.ObjectIteratorCommand id="129425" 
                 IterMode="STEP"
                 StepVal="12.5"
                 EnableInitialVal="FALSE"
                 InitialVal="0"
                 ValueType="RANGE"
                 ValueList=""
                 BreakOnFail="TRUE"
                 MinVal="12.5"
                 MaxVal="100"
                 PrevIterVerdict="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="FALSE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Iterators: Object Iterator Command">
                  <PropertyChainingConfig id="129426" 
                   SourcePropertyId="spirent.methodology.iteratorcommand.iteration"
                   TargetPropertyId="spirent.methodology.iteratorconfigcommand.iteration"
                   Active="TRUE"
                   LocalActive="TRUE"
                   Name="Property Chaining Config 28">
                    <Relation type="PropertyChain" target="129429"/>
                  </PropertyChainingConfig>
                  <PropertyChainingConfig id="129427" 
                   SourcePropertyId="spirent.methodology.iteratorcommand.currval"
                   TargetPropertyId="spirent.methodology.iteratorconfigcommand.currval"
                   Active="TRUE"
                   LocalActive="TRUE"
                   Name="Property Chaining Config 29">
                    <Relation type="PropertyChain" target="129429"/>
                  </PropertyChainingConfig>
                  <PropertyChainingConfig id="129428" 
                   SourcePropertyId="spirent.methodology.iteratorcommand.iteration"
                   TargetPropertyId="spirent.methodology.iteratorvalidatecommand.iteration"
                   Active="TRUE"
                   LocalActive="TRUE"
                   Name="Property Chaining Config 30">
                    <Relation type="PropertyChain" target="129450"/>
                  </PropertyChainingConfig>
                </spirent.methodology.ObjectIteratorCommand>
                <spirent.methodology.IteratorConfigPropertyValueCommand id="129429" 
                 ClassName="spirent.methodology.traffic.AllocateTrafficMixLoadCommand"
                 EnableObjectRecursiveSearch="TRUE"
                 PropertyName="Load"
                 ObjectList=""
                 TagList="AllocateCommand"
                 CurrVal="12.5"
                 Iteration="1"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Configurators: Iterator Config Property Value Command 1">
                </spirent.methodology.IteratorConfigPropertyValueCommand>
                <spirent.methodology.traffic.AllocateTrafficMixLoadCommand id="129430" 
                 StmTrafficMix="0"
                 TrafficMixTagName="TxTestTrafficMix"
                 Load="12.5"
                 LoadUnit="PERCENT_LINE_RATE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Allocate Load">
                  <Relation type="UserTag" target="128403"/>
                </spirent.methodology.traffic.AllocateTrafficMixLoadCommand>
                <spirent.methodology.ExecuteWithTagsCommand id="129431" 
                 CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start Rx Analyzers.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;AnalyzerStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;AnalyzerList&quot;, &quot;tag_name_list&quot;: [                
&quot;RxPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Analyzer&quot;] }] }] }"
                 CmdJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 ApplyPassFailState="TRUE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Start Rx Analyzers (ExecWithTags)">
                </spirent.methodology.ExecuteWithTagsCommand>
                <spirent.methodology.ExecuteWithTagsCommand id="129432" 
                 CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start TxLoad and TxTest traffic.&quot;,
&quot;command_list&quot;: [     { &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] },     { &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxTestPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] }     ] }"
                 CmdJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 ApplyPassFailState="TRUE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Start TxLoad and TxTest Traffic (ExecWithTags)">
                </spirent.methodology.ExecuteWithTagsCommand>
                <ResultsClearAllCommand id="129433" 
                 Project="2"
                 PortList=""
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Clear All Results">
                </ResultsClearAllCommand>
                <WaitCommand id="129434" 
                 WaitTime="3"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Wait - Iteration Duration">
                  <Relation type="UserTag" target="128441"/>
                </WaitCommand>
                <spirent.methodology.ExecuteWithTagsCommand id="129435" 
                 CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Stop TxLoad and TxTest traffic.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStopCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;,                 &quot;TxTestPortGroup&quot;       
     ], &quot;class_name_list&quot;: [&quot;Generator&quot;] }] }] }"
                 CmdJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 ApplyPassFailState="TRUE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Stop TxLoad and TxTest Traffic (ExecWithTags)">
                </spirent.methodology.ExecuteWithTagsCommand>
                <SequencerComment id="129436" 
                 Text="Validate Results"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Comment">
                </SequencerComment>
                <SaveResultsCommand id="129437" 
                 ResultFileName="IEEE8021QoSValidation.db"
                 SaveDetailedResults="TRUE"
                 ClearChartResultAfterSave="TRUE"
                 CollectResult="TRUE"
                 LoopMode="APPEND"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Save Iteration Results">
                </SaveResultsCommand>
                <spirent.methodology.RunSqlCommand id="129438" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI0(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI1(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI2(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI3(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI4(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI5(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI6(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI7(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;FullPortLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PercentageLoad, BpsLoad,
(BpsLoad/(PercentageLoad*0.01)) AS PortBpsLoad FROM Streamblock&quot;          
      },                 {                     &quot;static&quot;: &quot;WHERE
Name GLOB &apos;*PRI 0-1*&apos;&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxPortGroup&quot;                 },                 &quot;columns&quot;:
[                     &quot;PortHnd&quot;                 ]             },     
       &quot;table&quot;: [],             &quot;sql_statement&quot;: [         
       {                     &quot;static&quot;: &quot;SELECT Handle AS PortHnd
FROM Port JOIN RelationTable&quot;                 },                 {        
            &quot;static&quot;: &quot;ON
Port.Handle=RelationTable.SourceHnd&quot;                 },                 { 
                   &quot;static&quot;: &quot;WHERE
RelationTable.TargetHnd=(SELECT Handle FROM Tag WHERE
Name=&apos;RxPortGroup&apos;)&quot;                 }             ]         }, 
       {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI0&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 0*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI1&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 1*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI2&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 2*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI3&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 3*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI4&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 4*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI5&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 5*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI6&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 6*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI7&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 7*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;IEEE8021ExpectedQoS&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT * FROM
IEEE8021ExpectedQoS&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                    
&quot;dest_table_name&quot;: &quot;IEEE8021ExpectedRx&quot;                 }  
          },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM IEEE8021ExpectedRx&quot;               
 }             ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Build Custom Rx Tables">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129439" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationGenLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, SBName TEXT, PercentageLoad
REAL, ExpectedPercentLoad REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationGenLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, (SELECT Name from Port WHERE Handle=Streamblock.ParentHnd) AS
PortName, Name AS SBName, PercentageLoad, (SELECT &apos;12.5&apos;) AS
ExpectedPercentLoad FROM StreamBlock&quot;                 },                 {
                    &quot;static&quot;: &quot;WHERE Name NOT GLOB &apos;*PRI
7*&apos; AND PercentageLoad!=ExpectedPercentLoad&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationGenLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, (SELECT Name from Port WHERE Handle=Streamblock.ParentHnd) AS
PortName, Name AS SBName, PercentageLoad, (SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand) AS ExpectedPercentLoad
FROM StreamBlock&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE Name GLOB &apos;*PRI 7*&apos; AND
PercentageLoad!=ExpectedPercentLoad&quot;                 }             ]      
  }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Test Load Validation - Gen PercentageLoad">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129440" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationSigFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualSigFrame
INTEGER, Failure TEXT )&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI0
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI0_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_0 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI0_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_0 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI1_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI1_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI2_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_2 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI2_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_2 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI3_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI3_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI4_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_4 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI4_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_4 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI5_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI5_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI6_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_6 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI6_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_6 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_SigFrameCount&quot;                 } 
           },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(SigFrameCount) AS
TotalSigFrame&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Did not receive expected traffic.\&quot;) AS Failure FROM
PRI7_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame AS ActualSigFrame,
(SELECT \&quot;Received unexpected traffic.\&quot;) AS Failure FROM
PRI7_SigFrameCount&quot;                 },                 {                  
  &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=0&quot;           
     }             ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Signature Frames">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129441" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationBpsLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, BpsLoad REAL,
ExpectedBpsLoad REAL )&quot;                 }             ]         },        
{             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 0*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI0 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 1*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI1 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationBpsLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;BpsLoad&quot;,          
          &quot;ExpectedBpsLoad&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;sql_statement&quot;: [             
   {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI1_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=1) AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
2*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI2_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=2) AND (SELECT PRI_2 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
3*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI3_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=3) AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
4*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI4_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=4) AND (SELECT PRI_4 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
5*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI5_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=5) AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
6*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI6_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=6) AND (SELECT PRI_6 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
7*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, BpsLoad, ExpectedBpsLoad FROM
PRI7_BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT
MinBWRatio FROM IEEE8021ExpectedQoS WHERE PRI=7) AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Min Rx/Tx BW Ratio">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129442" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxJitter(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxJitter REAL,
ExpectedMaxJitter REAL )&quot;                 }             ]         },      
  {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxJitter&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxJitter) AS MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE
PRI=1) AS ExpectedMaxJitter&quot;                 },                 {         
           &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI1_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI2_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI3_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI4_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI5_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI6_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, MaxJitter, ExpectedMaxJitter FROM
PRI7_MaxJitter&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxJitter &gt; ExpectedMaxJitter AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Max Jitter">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129443" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxLatency(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxLatency
REAL, ExpectedMaxLatency REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxLatency&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxLatency) AS MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLatency&quot;                 },                 {  
                  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI1_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI2_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI3_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI4_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI5_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI6_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, MaxLatency, ExpectedMaxLatency FROM
PRI7_MaxLatency&quot;                 },                 {                    
&quot;static&quot;: &quot;WHERE MaxLatency &gt; ExpectedMaxLatency AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Max Latency">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129444" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDroppedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT,
PRI INTEGER, ActualDropped INTEGER, ExpectedMaxDropped INTEGER )&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI1_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI2_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI3_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI4_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI5_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI6_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalDropped AS ActualDropped,
ExpectedMaxDropped FROM PRI7_DroppedFrameCount&quot;                 },        
        {                     &quot;static&quot;: &quot;WHERE TotalDropped &gt;
ExpectedMaxDropped AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Dropped Frame Count">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129445" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDuplicateFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualDuplicate INTEGER, ExpectedMaxDuplicate INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI1_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI2_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_2 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI3_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI4_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_4 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI5_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI6_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_6 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalDuplicate AS ActualDuplicate,
ExpectedMaxDuplicate FROM PRI7_DuplicateFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalDuplicate &gt; ExpectedMaxDuplicate AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Duplicate Frame Count">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129446" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationReorderedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualReordered INTEGER, ExpectedMaxReordered INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI1_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_1 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI2_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_2 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI3_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_3 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI4_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_4 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI5_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_5 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI6_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_6 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalReordered AS ActualReordered,
ExpectedMaxReordered FROM PRI7_ReorderedFrameCount&quot;                 },    
            {                     &quot;static&quot;: &quot;WHERE
TotalReordered &gt; ExpectedMaxReordered AND (SELECT PRI_7 FROM
IEEE8021ExpectedRx WHERE TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Reordered Frame Count">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129447" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationLateFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualLate
INTEGER, ExpectedMaxLate INTEGER )&quot;                 }             ]       
 },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_LateFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(LateFrameCount) AS TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLate&quot;                 },                 {     
               &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP
BY PortHnd&quot;                 }             ]         },         {          
  &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI1_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI2_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI3_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI4_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI5_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI6_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, TotalLate AS ActualLate,
ExpectedMaxLate FROM PRI7_LateFrameCount&quot;                 },              
  {                     &quot;static&quot;: &quot;WHERE TotalLate &gt;
ExpectedMaxLate AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=(SELECT CurrVal FROM
spirent_methodology_IteratorConfigPropertyValueCommand)*1.0)=1&quot;           
     }             ]         }             ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validate QoS - Late Frame Count">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.RunSqlCommand id="129448" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSChartPercentLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, PercentLoad
REAL )&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 0) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI0_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 1) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI1_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 2) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI2_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 3) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI3_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 4) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI4_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 5) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI5_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 6) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI6_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;PercentLoad&quot;       
         ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigPropertyValueCommand) AS
TxTestLoad, PortName, (SELECT 7) AS PRI, ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI7_BpsLoad&quot;                 }   
         ]         },         {             &quot;db_information&quot;: {      
          &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;RTChartPercentLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;Priority_0&quot;,             
       &quot;Priority_1&quot;,                     &quot;Priority_2&quot;,     
               &quot;Priority_3&quot;,                    
&quot;Priority_4&quot;,                     &quot;Priority_5&quot;,            
        &quot;Priority_6&quot;,                     &quot;Priority_7&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI0_BpsLoad)) AS Priority_0,&quot;                 },                 {       
             &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM
(SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad
FROM PRI1_BpsLoad)) AS Priority_1,&quot;                 },                 {  
                  &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*)
FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS
PercentLoad FROM PRI2_BpsLoad)) AS Priority_2,&quot;                 },        
        {                     &quot;static&quot;: &quot;(SELECT
SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI3_BpsLoad)) AS Priority_3,&quot;    
            },                 {                     &quot;static&quot;:
&quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT
PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM PRI4_BpsLoad)) AS
Priority_4,&quot;                 },                 {                    
&quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI5_BpsLoad)) AS Priority_5,&quot;                 },                 {       
             &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM
(SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad
FROM PRI6_BpsLoad)) AS Priority_6,&quot;                 },                 {  
                  &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*)
FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS
PercentLoad FROM PRI7_BpsLoad)) AS Priority_7&quot;                 }          
  ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Collect Chart Data">
                </spirent.methodology.RunSqlCommand>
                <spirent.methodology.CompleteIterationCommand id="129449" 
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Iteration Framework: Complete Iteration - TxTest Load">
                </spirent.methodology.CompleteIterationCommand>
                <spirent.methodology.IteratorValidateCommand id="129450" 
                 Iteration="1"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Validators: Iterator Validate Command 9">
                  <PropertyChainingConfig id="129451" 
                   SourcePropertyId="spirent.methodology.iteratorvalidatecommand.verdict"
                   TargetPropertyId="spirent.methodology.iteratorcommand.previterverdict"
                   Active="TRUE"
                   LocalActive="TRUE"
                   Name="Property Chaining Config 31">
                    <Relation type="PropertyChain" target="129425"/>
                  </PropertyChainingConfig>
                </spirent.methodology.IteratorValidateCommand>
                <spirent.methodology.RunSqlCommand id="129508" 
                 DbJsonString="{     &quot;sql_operations&quot;: [         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterGenLoad(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, \&quot;StreamBlock Name\&quot; TEXT,
\&quot;Tx Load (%)\&quot; REAL, \&quot;Expected Tx Load (%)\&quot; REAL )&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterSigFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Signature Frame
Count\&quot; INTEGER, Failure TEXT )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterBpsLoad( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;bps Load\&quot; REAL, \&quot;Expected bps Load\&quot; REAL,
\&quot;Bandwidth Ratio\&quot; REAL )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterMaxJitter( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;Max Jitter (us)\&quot; REAL, \&quot;Max Jitter Allowed (us)\&quot; REAL
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterMaxLatency(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Max Latency
(us)\&quot; REAL, \&quot;Max Latency Allowed (us)\&quot; REAL )&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDroppedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Loss Frame
Count\&quot; INTEGER, \&quot;Max Loss Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDuplicateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Duplicate Frame
Count\&quot; INTEGER, \&quot;Max Duplicate Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterReorderedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Reordered Frame
Count\&quot; INTEGER, \&quot;Max Reordered Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterLateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Late Frame
Count\&quot; INTEGER, \&quot;Max Late Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {             &quot;enable&quot;:
true,             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;FSIterGenLoad&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;StreamBlock
Name&quot;,                     &quot;Tx Load (%)&quot;,                    
&quot;Expected Tx Load (%)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationGenLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Test
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, SBName AS \&quot;StreamBlock Name\&quot;, PercentageLoad AS
\&quot;Tx Load (%)\&quot;, ExpectedPercentLoad AS \&quot;Expected Tx Load
(%)\&quot; FROM IterationGenLoad&quot;                 }             ]        
},         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterSigFrameCount&quot;                 },
                &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Signature Frame Count&quot;,                    
&quot;Failure&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM IterationSigFrameCount&quot;         
               }                     ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Rx Signature Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT FrameSize AS
\&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
ActualSigFrame AS \&quot;Signature Frame Count\&quot;, Failure FROM
IterationSigFrameCount&quot;                 }             ]         },        
{             &quot;enable&quot;: false,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterBpsLoad&quot;                 },      
          &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;bps Load&quot;,                     &quot;Expected bps
Load&quot;,                     &quot;Bandwidth Ratio&quot;                 ]  
          },             &quot;table&quot;: [],             &quot;report&quot;:
{                 &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationBpsLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },  
          &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, BpsLoad AS \&quot;bps Load\&quot;,
ExpectedBpsLoad AS \&quot;Expected bps Load\&quot;,
ROUND(BpsLoad/ExpectedBpsLoad,2) AS \&quot;Bandwidth Ratio\&quot; FROM
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;enable&quot;: true,             &quot;db_information&quot;: {    
            &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterMaxJitter&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Max Jitter (us)&quot;,                     &quot;Max Jitter Allowed
(us)&quot;                 ]             },             &quot;table&quot;: [], 
           &quot;report&quot;: {                 &quot;report_verdict&quot;: { 
                   &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxJitter&quot;                         }        
            ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Jitter (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, MaxJitter AS \&quot;Max Jitter (us)\&quot;,
ExpectedMaxJitter AS \&quot;Max Jitter Allowed (us)\&quot; FROM
IterationMaxJitter&quot;                 }             ]         },         {  
          &quot;enable&quot;: true,             &quot;db_information&quot;: {  
              &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterMaxLatency&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Max Latency (us)&quot;,                     &quot;Max Latency
Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxLatency&quot;                         }       
             ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Latency (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, MaxLatency AS \&quot;Max Latency (us)\&quot;,
ExpectedMaxLatency AS \&quot;Max Latency Allowed (us)\&quot; FROM
IterationMaxLatency&quot;                 }             ]         },         { 
           &quot;enable&quot;: true,             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Loss Frame Count&quot;,                     &quot;Max Loss Frame
Count&quot;                 ]             },             &quot;table&quot;: [],
            &quot;report&quot;: {                 &quot;report_verdict&quot;: {
                    &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDroppedFrameCount&quot;                         }
                    ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Loss Frame Count&quot; 
           },             &quot;sql_statement&quot;: [                 {       
             &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualDropped AS \&quot;Loss Frame
Count\&quot;, ExpectedMaxDropped AS \&quot;Max Loss Frame Count\&quot; FROM
IterationDroppedFrameCount&quot;                 }             ]         },    
    {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterDuplicateFrameCount&quot;             
   },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Duplicate Frame Count&quot;,                    
&quot;Max Duplicate Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDuplicateFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Duplicate Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT FrameSize AS
\&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
ActualDuplicate AS \&quot;Duplicate Frame Count\&quot;, ExpectedMaxDuplicate AS
\&quot;Max Duplicate Frame Count\&quot; FROM IterationDuplicateFrameCount&quot;
                }             ]         },         {            
&quot;enable&quot;: true,             &quot;db_information&quot;: {            
    &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterReorderedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Reordered Frame Count&quot;,                     &quot;Max Reordered
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationReorderedFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Reordered Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT FrameSize AS
\&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
ActualReordered AS \&quot;Reordered Frame Count\&quot;, ExpectedMaxReordered AS
\&quot;Max Reordered Frame Count\&quot; FROM IterationReorderedFrameCount&quot;
                }             ]         },         {            
&quot;enable&quot;: true,             &quot;db_information&quot;: {            
    &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterLateFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Late Frame Count&quot;,                     &quot;Max Late Frame
Count&quot;                 ]             },             &quot;table&quot;: [],
            &quot;report&quot;: {                 &quot;report_verdict&quot;: {
                    &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationLateFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, ActualLate AS \&quot;Late Frame Count\&quot;,
ExpectedMaxLate AS \&quot;Max Late Frame Count\&quot; FROM
IterationLateFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;              },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
IterationGenLoad&quot;                  }             ]         },         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationSigFrameCount&quot;              
  }             ]         },         {             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;             },      
      &quot;table&quot;: [],             &quot;sql_statement&quot;: [          
      {                     &quot;static&quot;: &quot;DROP TABLE
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationMaxJitter&quot;                 }
            ]         },         {             &quot;db_information&quot;: {   
             &quot;db_name&quot;: &quot;SUMMARY&quot;             },           
 &quot;table&quot;: [],             &quot;sql_statement&quot;: [               
 {                     &quot;static&quot;: &quot;DROP TABLE
IterationMaxLatency&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDroppedFrameCount&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDuplicateFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationReorderedFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationLateFrameCount&quot;             
   }             ]         }     ] }"
                 DbJsonFileName=""
                 EnableLoadFromFileName="FALSE"
                 CommandName=""
                 PackageName="spirent"
                 ErrorOnFailure="TRUE"
                 AutoDestroy="FALSE"
                 ExecuteSynchronous="FALSE"
                 ProgressEnable="TRUE"
                 ProgressIsSafeCancel="TRUE"
                 Active="TRUE"
                 LocalActive="TRUE"
                 Name="Iteration Result Analysis">
                </spirent.methodology.RunSqlCommand>
              </SequencerWhileCommand>
            </spirent.methodology.IterationGroupCommand>
            <SequencerComment id="129453" 
             Text="Recovery Test"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Comment">
            </SequencerComment>
            <spirent.methodology.ExecuteWithTagsCommand id="129454" 
             CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start Rx Analyzers.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;AnalyzerStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;AnalyzerList&quot;, &quot;tag_name_list&quot;: [                
&quot;RxPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Analyzer&quot;] }] }] }"
             CmdJsonFileName=""
             EnableLoadFromFileName="FALSE"
             ApplyPassFailState="TRUE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Start Rx Analyzers (ExecWithTags)">
            </spirent.methodology.ExecuteWithTagsCommand>
            <spirent.methodology.ExecuteWithTagsCommand id="129455" 
             CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Start TxLoad traffic.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStartCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] }] }"
             CmdJsonFileName=""
             EnableLoadFromFileName="FALSE"
             ApplyPassFailState="TRUE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Start TxLoad Traffic (ExecWithTags)">
            </spirent.methodology.ExecuteWithTagsCommand>
            <ResultsClearAllCommand id="129456" 
             Project="2"
             PortList=""
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Clear All Results">
            </ResultsClearAllCommand>
            <WaitCommand id="129457" 
             WaitTime="3"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Wait - Iteration Duration">
            </WaitCommand>
            <spirent.methodology.ExecuteWithTagsCommand id="129458" 
             CmdJsonString="{ &quot;enable&quot;: true,
&quot;description&quot;: &quot;Stop TxLoad traffic.&quot;,
&quot;command_list&quot;: [{ &quot;enable&quot;: true,
&quot;command_name&quot;: &quot;GeneratorStopCommand&quot;,
&quot;handle_property_list&quot;: [{ &quot;property_name&quot;:
&quot;GeneratorList&quot;, &quot;tag_name_list&quot;: [                
&quot;TxLoadPortGroup&quot;             ], &quot;class_name_list&quot;:
[&quot;Generator&quot;] }] }] }"
             CmdJsonFileName=""
             EnableLoadFromFileName="FALSE"
             ApplyPassFailState="TRUE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Stop TxLoad Traffic (ExecWithTags)">
            </spirent.methodology.ExecuteWithTagsCommand>
            <SequencerComment id="129459" 
             Text="Validate Recovery Test Results"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Comment">
            </SequencerComment>
            <SaveResultsCommand id="129460" 
             ResultFileName="IEEE8021QoSValidation.db"
             SaveDetailedResults="TRUE"
             ClearChartResultAfterSave="TRUE"
             CollectResult="TRUE"
             LoopMode="APPEND"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Save Recovery Results">
            </SaveResultsCommand>
            <spirent.methodology.RunSqlCommand id="129461" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI0(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI1(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI2(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI3(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI4(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI5(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI6(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;             },             &quot;table&quot;: [],   
         &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS RxStreamBlockResults_PRI7(
PortHnd INTEGER, PortName TEXT, SigFrameCount INTEGER, DroppedFrameCount
INTEGER, ReorderedFrameCount INTEGER, DuplicateFrameCount INTEGER,
LateFrameCount INTEGER, MaxJitter REAL, MaxLatency REAL, BpsLoad REAL )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;FullPortLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PercentageLoad, BpsLoad,
(BpsLoad/(PercentageLoad*0.01)) AS PortBpsLoad FROM Streamblock&quot;          
      },                 {                     &quot;static&quot;: &quot;WHERE
Name GLOB &apos;*PRI 0-1*&apos;&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxPortGroup&quot;                 },                 &quot;columns&quot;:
[                     &quot;PortHnd&quot;                 ]             },     
       &quot;table&quot;: [],             &quot;sql_statement&quot;: [         
       {                     &quot;static&quot;: &quot;SELECT Handle AS PortHnd
FROM Port JOIN RelationTable&quot;                 },                 {        
            &quot;static&quot;: &quot;ON
Port.Handle=RelationTable.SourceHnd&quot;                 },                 { 
                   &quot;static&quot;: &quot;WHERE
RelationTable.TargetHnd=(SELECT Handle FROM Tag WHERE
Name=&apos;RxPortGroup&apos;)&quot;                 }             ]         }, 
       {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI0&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 0*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI1&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 1*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI2&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 2*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI3&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 3*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI4&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 4*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI5&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 5*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI6&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 6*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;RxStreamBlockResults_PRI7&quot;                 },                
&quot;columns&quot;: [                     &quot;PortHnd&quot;,                
    &quot;PortName&quot;,                     &quot;SigFrameCount&quot;,       
             &quot;DroppedFrameCount&quot;,                    
&quot;ReorderedFrameCount&quot;,                    
&quot;DuplicateFrameCount&quot;,                    
&quot;LateFrameCount&quot;,                     &quot;MaxJitter&quot;,         
           &quot;MaxLatency&quot;,                     &quot;BpsLoad&quot;     
           ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT RxPortGroup.PortHnd,
RxEotStreamBlockResults.PortName, (SELECT CASE WHEN
RxEotStreamResults.SigFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.SigFrameCount END) AS SigFrameCount, (SELECT CASE WHEN
RxEotStreamResults.DroppedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DroppedFrameCount END) AS DroppedFrameCount, (SELECT CASE
WHEN RxEotStreamResults.ReorderedFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.ReorderedFrameCount END) AS ReorderedFrameCount, (SELECT
CASE WHEN RxEotStreamResults.DuplicateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.DuplicateFrameCount END) AS DuplicateFrameCount,&quot;      
          },                 {                     &quot;static&quot;:
&quot;(SELECT CASE WHEN RxEotStreamResults.LateFrameCount IS NULL THEN 0 ELSE
RxEotStreamResults.LateFrameCount END) AS LateFrameCount, (SELECT CASE WHEN
RxEotStreamResults.MaxJitter IS NULL THEN 0 ELSE RxEotStreamResults.MaxJitter
END) AS MaxJitter, (SELECT CASE WHEN RxEotStreamResults.MaxLatency IS NULL THEN
0 ELSE RxEotStreamResults.MaxLatency END) AS MaxLatency, (SELECT CASE WHEN
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
IS NULL THEN 0 ELSE
(RxEotStreamResults.L1BitCount/(RxEotStreamResults.LastArrivalTime-RxEotStreamResults.FirstArrivalTime)*1000000)
END) as BpsLoad&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxEotStreamBlockResults JOIN RxPortGroup ON
RxEotStreamBlockResults.ParentHnd=RxPortGroup.PortHnd LEFT OUTER JOIN
RxEotStreamResults ON
RxEotStreamBlockResults.ParentStreamBlock=RxEotStreamResults.ParentStreamBlock
AND RxEotStreamBlockResults.ParentHnd=RxEotStreamResults.ParentHnd&quot;       
         },                 {                     &quot;static&quot;:
&quot;WHERE RxEotStreamBlockResults.ParentStreamBlock IN (SELECT Handle FROM
StreamBlock WHERE Name GLOB &apos;*PRI 7*&apos;)&quot;                 }       
     ]         },         {             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;IEEE8021ExpectedQoS&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT * FROM
IEEE8021ExpectedQoS&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                    
&quot;dest_table_name&quot;: &quot;IEEE8021ExpectedRx&quot;                 }  
          },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM IEEE8021ExpectedRx&quot;               
 }             ]         }     ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Build Custom Rx Tables">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129462" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationGenLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, SBName TEXT, PercentageLoad
REAL, ExpectedPercentLoad REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationGenLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, (SELECT Name from Port WHERE
Handle=Streamblock.ParentHnd) AS PortName, Name AS SBName, PercentageLoad,
(SELECT &apos;12.5&apos;) AS ExpectedPercentLoad FROM StreamBlock&quot;        
        },                 {                     &quot;static&quot;:
&quot;WHERE Name NOT GLOB &apos;*PRI 7*&apos; AND
PercentageLoad!=ExpectedPercentLoad&quot;                 }             ]      
  }             ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Test Load Validation - Gen PercentageLoad">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129463" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationSigFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualSigFrame
INTEGER, Failure TEXT )&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI0
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI0_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_0 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI0_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_0 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI1_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI1_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_1 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI2_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI2_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI2_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI3_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI3_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI3_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_3 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI4_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI4_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI4_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI5_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI5_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI5_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_5 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI6_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI6_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI6_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI7_SigFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(SigFrameCount) AS TotalSigFrame&quot;                 },                 { 
                   &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationSigFrameCount&quot;                
},                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualSigFrame&quot;,                     &quot;Failure&quot;      
          ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Did not receive expected traffic.\&quot;) AS
Failure FROM PRI7_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame=0 AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;                
}             ]         },         {             &quot;db_information&quot;: { 
               &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationSigFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualSigFrame&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;sql_statement&quot;: [              
  {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalSigFrame
AS ActualSigFrame, (SELECT \&quot;Received unexpected traffic.\&quot;) AS
Failure FROM PRI7_SigFrameCount&quot;                 },                 {     
               &quot;static&quot;: &quot;WHERE TotalSigFrame&gt;0 AND (SELECT
PRI_7 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=0&quot;                
}             ]         }     ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Signature Frames">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129464" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationBpsLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, BpsLoad REAL,
ExpectedBpsLoad REAL )&quot;                 }             ]         },        
{             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI0_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 0*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI0 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_BpsLoad&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(BpsLoad) AS BpsLoad, (SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE
Name GLOB &apos;*PRI 1*&apos;) AS ExpectedBpsLoad&quot;                 },     
           {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI1 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationBpsLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;BpsLoad&quot;,          
          &quot;ExpectedBpsLoad&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;sql_statement&quot;: [             
   {                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI1_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=1) AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
2*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI2_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=2) AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
3*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI3_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=3) AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
4*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI4_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=4) AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
5*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI5_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=5) AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
6*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI6_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=6) AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_BpsLoad&quot;                 }       
     },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(BpsLoad) AS BpsLoad,
(SELECT (SUM(BpsLoad)/Count(*)) FROM StreamBlock WHERE Name GLOB &apos;*PRI
7*&apos;) AS ExpectedBpsLoad&quot;                 },                 {        
            &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationBpsLoad&quot;                 },   
             &quot;columns&quot;: [                     &quot;FrameSize&quot;, 
                   &quot;TxTestLoad&quot;,                    
&quot;PortName&quot;,                     &quot;PRI&quot;,                    
&quot;BpsLoad&quot;,                     &quot;ExpectedBpsLoad&quot;           
     ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, BpsLoad,
ExpectedBpsLoad FROM PRI7_BpsLoad&quot;                 },                 {   
                 &quot;static&quot;: &quot;WHERE
ROUND(BpsLoad/ExpectedBpsLoad,2)&lt;(SELECT MinBWRatio FROM IEEE8021ExpectedQoS
WHERE PRI=7) AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Min Rx/Tx BW Ratio">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129465" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxJitter(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxJitter REAL,
ExpectedMaxJitter REAL )&quot;                 }             ]         },      
  {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxJitter&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxJitter) AS MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE
PRI=1) AS ExpectedMaxJitter&quot;                 },                 {         
           &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI1_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI2_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI3_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI4_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI5_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI6_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxJitter&quot;                 }     
       },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxJitter) AS
MaxJitter, (SELECT MaxJitter FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxJitter&quot;                 },                 {                   
 &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxJitter&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxJitter&quot;,                     &quot;ExpectedMaxJitter&quot; 
               ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, MaxJitter,
ExpectedMaxJitter FROM PRI7_MaxJitter&quot;                 },                
{                     &quot;static&quot;: &quot;WHERE MaxJitter &gt;
ExpectedMaxJitter AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Max Jitter">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129466" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationMaxLatency(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, MaxLatency
REAL, ExpectedMaxLatency REAL )&quot;                 }             ]        
},         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_MaxLatency&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
MAX(MaxLatency) AS MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLatency&quot;                 },                 {  
                  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1
GROUP BY PortHnd&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI1_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI2_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI3_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI4_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI5_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI6_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_MaxLatency&quot;                 }    
        },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, MAX(MaxLatency) AS
MaxLatency, (SELECT MaxLatency FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLatency&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationMaxLatency&quot;                 },
                &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;MaxLatency&quot;,                    
&quot;ExpectedMaxLatency&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, MaxLatency,
ExpectedMaxLatency FROM PRI7_MaxLatency&quot;                 },               
 {                     &quot;static&quot;: &quot;WHERE MaxLatency &gt;
ExpectedMaxLatency AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Max Latency">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129467" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDroppedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT,
PRI INTEGER, ActualDropped INTEGER, ExpectedMaxDropped INTEGER )&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalDropped
AS ActualDropped, ExpectedMaxDropped FROM PRI1_DroppedFrameCount&quot;         
       },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_1 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI2_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=2) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI2_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalDropped
AS ActualDropped, ExpectedMaxDropped FROM PRI3_DroppedFrameCount&quot;         
       },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_3 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI4_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=4) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI4_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalDropped
AS ActualDropped, ExpectedMaxDropped FROM PRI5_DroppedFrameCount&quot;         
       },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_5 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         },    
    {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI6_DroppedFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(DroppedFrameCount) AS TotalDropped, (SELECT MaxLoss FROM
IEEE8021ExpectedQoS WHERE PRI=6) AS ExpectedMaxDropped&quot;                 },
                {                     &quot;static&quot;: &quot;FROM
RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;                 }            
]         },         {             &quot;db_information&quot;: {               
 &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IterationDroppedFrameCount&quot;                 },                
&quot;columns&quot;: [                     &quot;FrameSize&quot;,              
      &quot;TxTestLoad&quot;,                     &quot;PortName&quot;,        
            &quot;PRI&quot;,                     &quot;ActualDropped&quot;,    
                &quot;ExpectedMaxDropped&quot;                 ]             },
            &quot;table&quot;: [],             &quot;sql_statement&quot;: [    
            {                     &quot;static&quot;: &quot;SELECT (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalDropped AS ActualDropped, ExpectedMaxDropped FROM
PRI6_DroppedFrameCount&quot;                 },                 {              
      &quot;static&quot;: &quot;WHERE TotalDropped &gt; ExpectedMaxDropped AND
(SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE TxTestPercent=0.0)=1&quot;         
       }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DroppedFrameCount&quot;               
 }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DroppedFrameCount) AS
TotalDropped, (SELECT MaxLoss FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDropped&quot;                 },                 {                  
  &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDroppedFrameCount&quot;            
    },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDropped&quot;,                    
&quot;ExpectedMaxDropped&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalDropped
AS ActualDropped, ExpectedMaxDropped FROM PRI7_DroppedFrameCount&quot;         
       },                 {                     &quot;static&quot;: &quot;WHERE
TotalDropped &gt; ExpectedMaxDropped AND (SELECT PRI_7 FROM IEEE8021ExpectedRx
WHERE TxTestPercent=0.0)=1&quot;                 }             ]         }     
       ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Dropped Frame Count">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129468" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationDuplicateFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualDuplicate INTEGER, ExpectedMaxDuplicate INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI1_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI2_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI3_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI4_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI5_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI6_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_DuplicateFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(DuplicateFrameCount) AS
TotalDuplicate, (SELECT MaxDuplicate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxDuplicate&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationDuplicateFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualDuplicate&quot;,                    
&quot;ExpectedMaxDuplicate&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI,
TotalDuplicate AS ActualDuplicate, ExpectedMaxDuplicate FROM
PRI7_DuplicateFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalDuplicate &gt;
ExpectedMaxDuplicate AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Duplicate Frame Count">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129469" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
IterationReorderedFrameCount( FrameSize INTEGER, TxTestLoad TEXT, PortName
TEXT, PRI INTEGER, ActualReordered INTEGER, ExpectedMaxReordered INTEGER
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI1_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=1) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI1_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI2_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI3_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI4_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI5_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI6_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_ReorderedFrameCount&quot;             
   }             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(ReorderedFrameCount) AS
TotalReordered, (SELECT MaxReordered FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxReordered&quot;                 },                 {                
    &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY
PortHnd&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationReorderedFrameCount&quot;          
      },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualReordered&quot;,                    
&quot;ExpectedMaxReordered&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
CurrVal FROM spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize,
(SELECT &apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI,
TotalReordered AS ActualReordered, ExpectedMaxReordered FROM
PRI7_ReorderedFrameCount&quot;                 },                 {            
        &quot;static&quot;: &quot;WHERE TotalReordered &gt;
ExpectedMaxReordered AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Reordered Frame Count">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129470" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS IterationLateFrameCount(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, ActualLate
INTEGER, ExpectedMaxLate INTEGER )&quot;                 }             ]       
 },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;LAST_ITERATION&quot;,                     &quot;dest_table_name&quot;:
&quot;PRI1_LateFrameCount&quot;                 }             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT PortHnd, PortName,
SUM(LateFrameCount) AS TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS
WHERE PRI=1) AS ExpectedMaxLate&quot;                 },                 {     
               &quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI1 GROUP
BY PortHnd&quot;                 }             ]         },         {          
  &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI1_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_1 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI2_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=2) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI2 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI2_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_2 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI3_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=3) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI3 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI3_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_3 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI4_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=4) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI4 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI4_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_4 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI5_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=5) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI5 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI5_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_5 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI6_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=6) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI6 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI6_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_6 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;LAST_ITERATION&quot;,                   
 &quot;dest_table_name&quot;: &quot;PRI7_LateFrameCount&quot;                 }
            },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT PortHnd, PortName, SUM(LateFrameCount) AS
TotalLate, (SELECT MaxLate FROM IEEE8021ExpectedQoS WHERE PRI=7) AS
ExpectedMaxLate&quot;                 },                 {                    
&quot;static&quot;: &quot;FROM RxStreamBlockResults_PRI7 GROUP BY PortHnd&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;IterationLateFrameCount&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;ActualLate&quot;,                     &quot;ExpectedMaxLate&quot;  
              ]             },             &quot;table&quot;: [],            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI, TotalLate AS
ActualLate, ExpectedMaxLate FROM PRI7_LateFrameCount&quot;                 },  
              {                     &quot;static&quot;: &quot;WHERE TotalLate
&gt; ExpectedMaxLate AND (SELECT PRI_7 FROM IEEE8021ExpectedRx WHERE
TxTestPercent=0.0)=1&quot;                 }             ]         }           
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Validate QoS - Late Frame Count">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129471" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSChartPercentLoad(
FrameSize INTEGER, TxTestLoad TEXT, PortName TEXT, PRI INTEGER, PercentLoad
REAL )&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 0) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI0_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 1) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI1_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 2) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI2_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 3) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI3_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 4) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI4_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 5) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI5_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 6) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI6_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT CurrVal FROM
spirent_methodology_IteratorConfigFrameSizeCommand) AS FrameSize, (SELECT
&apos;RECOVERY&apos;) AS TxTestLoad, PortName, (SELECT 7) AS PRI,
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI7_BpsLoad&quot;                 }             ]         },         {        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;LAST_ITERATION&quot;,                 &quot;dest_db&quot;: {             
       &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;RTChartPercentLoad&quot;                 }, 
               &quot;columns&quot;: [                    
&quot;Priority_0&quot;,                     &quot;Priority_1&quot;,            
        &quot;Priority_2&quot;,                     &quot;Priority_3&quot;,    
                &quot;Priority_4&quot;,                    
&quot;Priority_5&quot;,                     &quot;Priority_6&quot;,            
        &quot;Priority_7&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT (SELECT
SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI0_BpsLoad)) AS Priority_0,&quot;    
            },                 {                     &quot;static&quot;:
&quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT
PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM PRI1_BpsLoad)) AS
Priority_1,&quot;                 },                 {                    
&quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI2_BpsLoad)) AS Priority_2,&quot;                 },                 {       
             &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM
(SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad
FROM PRI3_BpsLoad)) AS Priority_3,&quot;                 },                 {  
                  &quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*)
FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS
PercentLoad FROM PRI4_BpsLoad)) AS Priority_4,&quot;                 },        
        {                     &quot;static&quot;: &quot;(SELECT
SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT PortBpsLoad FROM
FullPortLoad))*100) AS PercentLoad FROM PRI5_BpsLoad)) AS Priority_5,&quot;    
            },                 {                     &quot;static&quot;:
&quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT ((BpsLoad/(SELECT
PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM PRI6_BpsLoad)) AS
Priority_6,&quot;                 },                 {                    
&quot;static&quot;: &quot;(SELECT SUM(PercentLoad)/COUNT(*) FROM (SELECT
((BpsLoad/(SELECT PortBpsLoad FROM FullPortLoad))*100) AS PercentLoad FROM
PRI7_BpsLoad)) AS Priority_7&quot;                 }             ]         }   
 ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Collect Chart Data">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.CompleteIterationCommand id="129472" 
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Iteration Framework: Complete Iteration - Frame Size">
            </spirent.methodology.CompleteIterationCommand>
            <spirent.methodology.CreateMethodologyChartCommand id="129473" 
             ChartTemplateJsonFileName="Line_Template.json"
             Title="Rx Load Percentage"
             XAxisTitle="TxTest Load Iteration"
             XAxisCategories="{SELECT DISTINCT TxTestLoad FROM
FSChartPercentLoad ORDER BY ROWID}"
             YAxisTitle="Rx Load Percentage"
             YAxisCategories=""
             Series="{SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
FSChartPercentLoad WHERE PRI=0 GROUP BY TxTestLoad, FrameSize ORDER BY ROWID}
{SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE
PRI=1 GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=2
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=3
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=4
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=5
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=6
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID} {SELECT
SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM FSChartPercentLoad WHERE PRI=7
GROUP BY TxTestLoad, FrameSize ORDER BY ROWID}"
             TemplateModifier="{     &quot;yAxis&quot;: {        
&quot;min&quot;: 0     },     &quot;series&quot;: [         {            
&quot;name&quot;: &quot;Priority 0&quot;         },         {            
&quot;name&quot;: &quot;Priority 1&quot;         },         {            
&quot;name&quot;: &quot;Priority 2&quot;         },         {            
&quot;name&quot;: &quot;Priority 3&quot;         },         {            
&quot;name&quot;: &quot;Priority 4&quot;         },         {            
&quot;name&quot;: &quot;Priority 5&quot;         },         {            
&quot;name&quot;: &quot;Priority 6&quot;         },         {            
&quot;name&quot;: &quot;Priority 7&quot;         }     ] }"
             SrcDatabase="SUMMARY"
             ReportGroup="SUMMARY"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Frame Size PercentLoad Chart">
            </spirent.methodology.CreateMethodologyChartCommand>
            <spirent.methodology.RunSqlCommand id="129507" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;enable&quot;: true,             &quot;db_information&quot;: {       
         &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryGenLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;StreamBlock Name&quot;,       
             &quot;Tx Load (%)&quot;,                     &quot;Expected Tx
Load (%)&quot;                 ]             },             &quot;table&quot;:
[],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterGenLoad&quot;                         }             
       ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Test
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterGenLoad&quot;                 }  
          ]         },         {             &quot;enable&quot;: true,         
   &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummarySigFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Signature Frame Count&quot;,                    
&quot;Failure&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM FSIterSigFrameCount&quot;            
            }                     ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Rx Signature Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterSigFrameCount&quot;                 }             ]         },         { 
           &quot;enable&quot;: false,             &quot;db_information&quot;: {
                &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;SummaryBpsLoad&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;bps Load&quot;,                     &quot;Expected bps Load&quot;,  
                  &quot;Bandwidth Ratio&quot;                 ]             }, 
           &quot;table&quot;: [],             &quot;report&quot;: {            
    &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterBpsLoad&quot;                         }             
       ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },  
          &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterBpsLoad&quot;                 }  
          ]         },         {             &quot;enable&quot;: true,         
   &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryMaxJitter&quot;                 },   
             &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Jitter (us)&quot;,                     &quot;Max
Jitter Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxJitter&quot;                         }           
         ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Jitter (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxJitter&quot;                 }
            ]         },         {             &quot;enable&quot;: true,       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryMaxLatency&quot;                 },  
              &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Latency (us)&quot;,                     &quot;Max
Latency Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterMaxLatency&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Latency (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterMaxLatency&quot;                
}             ]         },         {             &quot;enable&quot;: true,     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryDroppedFrameCount&quot;              
  },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Loss Frame Count&quot;,                     &quot;Max
Loss Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterDroppedFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Loss Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterDroppedFrameCount&quot;          
      }             ]         },         {             &quot;enable&quot;:
true,             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;SummaryDuplicateFrameCount&quot;   
             },                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Duplicate Frame Count&quot;,   
                 &quot;Max Duplicate Frame Count&quot;                 ]       
     },             &quot;table&quot;: [],             &quot;report&quot;: {   
             &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterDuplicateFrameCount&quot;                         } 
                   ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Duplicate Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryReorderedFrameCount&quot;            
    },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Reordered Frame Count&quot;,                    
&quot;Max Reordered Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterReorderedFrameCount&quot;                         } 
                   ]                 },                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Reordered Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
FSIterReorderedFrameCount&quot;                 }             ]         },     
   {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryLateFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Late Frame Count&quot;,                     &quot;Max Late
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM FSIterLateFrameCount&quot;                         }      
              ]                 },                 &quot;report_group&quot;:
&quot;SUMMARY&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM FSIterLateFrameCount&quot;             
   }             ]         },         {             &quot;enable&quot;: true,  
          &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;SummaryChartPercentLoad&quot;               
 },                 &quot;columns&quot;: [                    
&quot;FrameSize&quot;,                     &quot;TxTestLoad&quot;,             
       &quot;PortName&quot;,                     &quot;PRI&quot;,              
      &quot;PercentLoad&quot;                 ]             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;SELECT * FROM
FSChartPercentLoad&quot;                 }             ]         },         {  
          &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterGenLoad&quot;                 }     
       ]         },         {             &quot;db_information&quot;: {        
        &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterSigFrameCount&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterBpsLoad&quot;                 }     
       ]         },         {             &quot;db_information&quot;: {        
        &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterMaxJitter&quot;                 }             ]         },         {     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSIterMaxLatency&quot;                 }  
          ]         },         {             &quot;db_information&quot;: {     
           &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDroppedFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterDuplicateFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterReorderedFrameCount&quot;                 }             ]         },     
   {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
FSIterLateFrameCount&quot;                 }             ]         },         {
            &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE FSChartPercentLoad&quot;                 }
            ]         }     ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Frame Size Iteration Result Analysis">
            </spirent.methodology.RunSqlCommand>
            <spirent.methodology.RunSqlCommand id="129510" 
             DbJsonString="{     &quot;sql_operations&quot;: [         {       
     &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterGenLoad(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, \&quot;StreamBlock Name\&quot; TEXT,
\&quot;Tx Load (%)\&quot; REAL, \&quot;Expected Tx Load (%)\&quot; REAL )&quot;
                }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterSigFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Signature Frame
Count\&quot; INTEGER, Failure TEXT )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterBpsLoad( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;bps Load\&quot; REAL, \&quot;Expected bps Load\&quot; REAL,
\&quot;Bandwidth Ratio\&quot; REAL )&quot;                 }             ]     
   },         {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS
FSIterMaxJitter( \&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load
Iteration\&quot; TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER,
\&quot;Max Jitter (us)\&quot; REAL, \&quot;Max Jitter Allowed (us)\&quot; REAL
)&quot;                 }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterMaxLatency(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Max Latency
(us)\&quot; REAL, \&quot;Max Latency Allowed (us)\&quot; REAL )&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDroppedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Loss Frame
Count\&quot; INTEGER, \&quot;Max Loss Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterDuplicateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Duplicate Frame
Count\&quot; INTEGER, \&quot;Max Duplicate Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterReorderedFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Reordered Frame
Count\&quot; INTEGER, \&quot;Max Reordered Frame Count\&quot; INTEGER )&quot;  
              }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;CREATE TABLE IF NOT EXISTS FSIterLateFrameCount(
\&quot;Frame Size (bytes)\&quot; INTEGER, \&quot;TxTest Load Iteration\&quot;
TEXT, \&quot;Port Name\&quot; TEXT, Priority INTEGER, \&quot;Late Frame
Count\&quot; INTEGER, \&quot;Max Late Frame Count\&quot; INTEGER )&quot;       
         }             ]         },         {             &quot;enable&quot;:
true,             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;,                 &quot;dest_db&quot;:
{                     &quot;dest_db_name&quot;: &quot;SUMMARY&quot;,           
         &quot;dest_table_name&quot;: &quot;FSIterGenLoad&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;StreamBlock
Name&quot;,                     &quot;Tx Load (%)&quot;,                    
&quot;Expected Tx Load (%)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationGenLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;RECOVERY
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, SBName AS \&quot;StreamBlock Name\&quot;, PercentageLoad AS
\&quot;Tx Load (%)\&quot;, ExpectedPercentLoad AS \&quot;Expected Tx Load
(%)\&quot; FROM IterationGenLoad&quot;                 }             ]        
},         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterSigFrameCount&quot;                 },
                &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Signature Frame Count&quot;,                    
&quot;Failure&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM IterationSigFrameCount&quot;         
               }                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;RECOVERY: Rx Signature Frame Count&quot;       
     },             &quot;sql_statement&quot;: [                 {             
       &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualSigFrame AS \&quot;Signature
Frame Count\&quot;, Failure FROM IterationSigFrameCount&quot;                 }
            ]         },         {             &quot;enable&quot;: false,      
      &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterBpsLoad&quot;                 },      
          &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;bps Load&quot;,                     &quot;Expected bps
Load&quot;,                     &quot;Bandwidth Ratio&quot;                 ]  
          },             &quot;table&quot;: [],             &quot;report&quot;:
{                 &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationBpsLoad&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;RECOVERY:
Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },           
 &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, BpsLoad AS \&quot;bps Load\&quot;,
ExpectedBpsLoad AS \&quot;Expected bps Load\&quot;,
ROUND(BpsLoad/ExpectedBpsLoad,2) AS \&quot;Bandwidth Ratio\&quot; FROM
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;enable&quot;: true,             &quot;db_information&quot;: {    
            &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;FSIterMaxJitter&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;Max Jitter (us)&quot;,                     &quot;Max Jitter Allowed
(us)&quot;                 ]             },             &quot;table&quot;: [], 
           &quot;report&quot;: {                 &quot;report_verdict&quot;: { 
                   &quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxJitter&quot;                         }        
            ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;RECOVERY:
Max Jitter (us)&quot;             },             &quot;sql_statement&quot;: [  
              {                     &quot;static&quot;: &quot;SELECT FrameSize
AS \&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
MaxJitter AS \&quot;Max Jitter (us)\&quot;, ExpectedMaxJitter AS \&quot;Max
Jitter Allowed (us)\&quot; FROM IterationMaxJitter&quot;                 }     
       ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterMaxLatency&quot;                 },   
             &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Max Latency (us)&quot;,                     &quot;Max
Latency Allowed (us)&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationMaxLatency&quot;                         }       
             ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;RECOVERY:
Max Latency (us)&quot;             },             &quot;sql_statement&quot;: [ 
               {                     &quot;static&quot;: &quot;SELECT FrameSize
AS \&quot;Frame Size (bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load
Iteration\&quot;, PortName AS \&quot;Port Name\&quot;, PRI AS Priority,
MaxLatency AS \&quot;Max Latency (us)\&quot;, ExpectedMaxLatency AS \&quot;Max
Latency Allowed (us)\&quot; FROM IterationMaxLatency&quot;                 }   
         ]         },         {             &quot;enable&quot;: true,          
  &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterDroppedFrameCount&quot;               
 },                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Loss Frame Count&quot;,                     &quot;Max Loss
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDroppedFrameCount&quot;                         }
                    ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;RECOVERY: Max Loss Frame Count&quot;           
 },             &quot;sql_statement&quot;: [                 {                 
   &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualDropped AS \&quot;Loss Frame
Count\&quot;, ExpectedMaxDropped AS \&quot;Max Loss Frame Count\&quot; FROM
IterationDroppedFrameCount&quot;                 }             ]         },    
    {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterDuplicateFrameCount&quot;             
   },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Duplicate Frame Count&quot;,                    
&quot;Max Duplicate Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationDuplicateFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;RECOVERY: Max Duplicate Frame Count&quot;      
      },             &quot;sql_statement&quot;: [                 {            
        &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualDuplicate AS \&quot;Duplicate
Frame Count\&quot;, ExpectedMaxDuplicate AS \&quot;Max Duplicate Frame
Count\&quot; FROM IterationDuplicateFrameCount&quot;                 }         
   ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterReorderedFrameCount&quot;             
   },                 &quot;columns&quot;: [                     &quot;Frame
Size (bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,     
               &quot;Port Name&quot;,                     &quot;Priority&quot;,
                    &quot;Reordered Frame Count&quot;,                    
&quot;Max Reordered Frame Count&quot;                 ]             },         
   &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationReorderedFrameCount&quot;                        
}                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_2&quot;,                
&quot;display_name&quot;: &quot;RECOVERY: Max Reordered Frame Count&quot;      
      },             &quot;sql_statement&quot;: [                 {            
        &quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size
(bytes)\&quot;, TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS
\&quot;Port Name\&quot;, PRI AS Priority, ActualReordered AS \&quot;Reordered
Frame Count\&quot;, ExpectedMaxReordered AS \&quot;Max Reordered Frame
Count\&quot; FROM IterationReorderedFrameCount&quot;                 }         
   ]         },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;dest_db&quot;: {                    
&quot;dest_db_name&quot;: &quot;SUMMARY&quot;,                    
&quot;dest_table_name&quot;: &quot;FSIterLateFrameCount&quot;                
},                 &quot;columns&quot;: [                     &quot;Frame Size
(bytes)&quot;,                     &quot;TxTest Load Iteration&quot;,          
          &quot;Port Name&quot;,                     &quot;Priority&quot;,     
               &quot;Late Frame Count&quot;,                     &quot;Max Late
Frame Count&quot;                 ]             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM IterationLateFrameCount&quot;                         }   
                 ]                 },                 &quot;report_group&quot;:
&quot;GROUP_2&quot;,                 &quot;display_name&quot;: &quot;RECOVERY:
Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT FrameSize AS \&quot;Frame Size (bytes)\&quot;,
TxTestLoad AS \&quot;TxTest Load Iteration\&quot;, PortName AS \&quot;Port
Name\&quot;, PRI AS Priority, ActualLate AS \&quot;Late Frame Count\&quot;,
ExpectedMaxLate AS \&quot;Max Late Frame Count\&quot; FROM
IterationLateFrameCount&quot;                 }             ]         },       
 {             &quot;db_information&quot;: {                
&quot;db_name&quot;: &quot;SUMMARY&quot;              },            
&quot;table&quot;: [],             &quot;sql_statement&quot;: [                
{                     &quot;static&quot;: &quot;DROP TABLE
IterationGenLoad&quot;                  }             ]         },         {   
         &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationSigFrameCount&quot;              
  }             ]         },         {             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;             },      
      &quot;table&quot;: [],             &quot;sql_statement&quot;: [          
      {                     &quot;static&quot;: &quot;DROP TABLE
IterationBpsLoad&quot;                 }             ]         },         {    
        &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationMaxJitter&quot;                 }
            ]         },         {             &quot;db_information&quot;: {   
             &quot;db_name&quot;: &quot;SUMMARY&quot;             },           
 &quot;table&quot;: [],             &quot;sql_statement&quot;: [               
 {                     &quot;static&quot;: &quot;DROP TABLE
IterationMaxLatency&quot;                 }             ]         },         { 
           &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDroppedFrameCount&quot;          
      }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationDuplicateFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationReorderedFrameCount&quot;        
        }             ]         },         {            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;             },             &quot;table&quot;: [],          
  &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;DROP TABLE IterationLateFrameCount&quot;             
   }             ]         }     ] }"
             DbJsonFileName=""
             EnableLoadFromFileName="FALSE"
             CommandName=""
             PackageName="spirent"
             ErrorOnFailure="TRUE"
             AutoDestroy="FALSE"
             ExecuteSynchronous="FALSE"
             ProgressEnable="TRUE"
             ProgressIsSafeCancel="TRUE"
             Active="TRUE"
             LocalActive="TRUE"
             Name="Recovery Result Analysis">
            </spirent.methodology.RunSqlCommand>
          </SequencerWhileCommand>
        </spirent.methodology.IterationGroupCommand>
      </spirent.methodology.TestGroupCommand>
      <SequencerComment id="129476" 
       Text="Results"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Comment">
      </SequencerComment>
      <spirent.methodology.ResultsGroupCommand id="129477" 
       DisplayName="End of Test Report Generation"
       Description="Generates the methodology end of test results."
       CommandName=""
       PackageName="spirent"
       CommandList="129478 129509"
       ExecutionMode="BACKGROUND"
       GroupCategory="REGULAR_COMMAND"
       AutoDestroy="FALSE"
       ExecuteSynchronous="FALSE"
       ProgressEnable="TRUE"
       ProgressIsSafeCancel="TRUE"
       Active="TRUE"
       LocalActive="TRUE"
       Name="Results Group - Test Report">
        <spirent.methodology.CreateMethodologyChartCommand id="129478" 
         ChartTemplateJsonFileName="Line_Template.json"
         Title="Rx Load Percentage"
         XAxisTitle="Frame Size: TxTest Load Iteration"
         XAxisCategories="{SELECT DISTINCT (FrameSize || &apos;: &apos; ||
TxTestLoad) FROM SummaryChartPercentLoad ORDER BY ROWID}"
         YAxisTitle="Rx Load Percentage"
         YAxisCategories=""
         Series="{SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=0 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=1 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=2 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=3 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=4 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=5 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=6 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID} {SELECT SUM(PercentLoad)/COUNT(*) AS AvgPercent FROM
SummaryChartPercentLoad WHERE PRI=7 GROUP BY TxTestLoad, FrameSize ORDER BY
ROWID}"
         TemplateModifier="{     &quot;yAxis&quot;: {         &quot;min&quot;:
0     },     &quot;series&quot;: [         {             &quot;name&quot;:
&quot;Priority 0&quot;         },         {             &quot;name&quot;:
&quot;Priority 1&quot;         },         {             &quot;name&quot;:
&quot;Priority 2&quot;         },         {             &quot;name&quot;:
&quot;Priority 3&quot;         },         {             &quot;name&quot;:
&quot;Priority 4&quot;         },         {             &quot;name&quot;:
&quot;Priority 5&quot;         },         {             &quot;name&quot;:
&quot;Priority 6&quot;         },         {             &quot;name&quot;:
&quot;Priority 7&quot;         }     ] }"
         SrcDatabase="SUMMARY"
         ReportGroup="SUMMARY"
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="EoT PercentLoad Chart">
        </spirent.methodology.CreateMethodologyChartCommand>
        <spirent.methodology.RunSqlCommand id="129509" 
         DbJsonString="{     &quot;sql_operations&quot;: [         {           
 &quot;enable&quot;: true,             &quot;db_information&quot;: {           
     &quot;db_name&quot;: &quot;LAST_ITERATION&quot;,                
&quot;dest_db&quot;: {                     &quot;dest_db_name&quot;:
&quot;SUMMARY&quot;,                     &quot;dest_table_name&quot;:
&quot;IEEE8021TestConfig&quot;                 },                
&quot;columns&quot;: [                     &quot;Frame Size List (bytes)&quot;,
                    &quot;Iteration Duration (s)&quot;                 ]       
     },             &quot;table&quot;: [],             &quot;report&quot;: {   
             &quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Iteration Parameters&quot;             },      
     &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT REPLACE((SELECT ValueList FROM
spirent_methodology_ObjectIteratorCommand JOIN RelationTable ON
spirent_methodology_ObjectIteratorCommand.Handle=SourceHnd WHERE
TargetHnd=(SELECT Tag.Handle FROM Tag WHERE
Name=&apos;ttFrameSizeIterator&apos;)), &apos; &apos;, &apos;, &apos;) AS
\&quot;Frame Size List (bytes)\&quot;,&quot;                 },                
{                     &quot;static&quot;: &quot;(SELECT WaitTime FROM
WaitCommand JOIN RelationTable ON WaitCommand.Handle=SourceHnd WHERE
TargetHnd=(SELECT Tag.Handle FROM Tag WHERE
Name=&apos;ttIterationDuration&apos;)) AS \&quot;Iteration Duration
(s)\&quot;&quot;                 }             ]         },         {          
  &quot;enable&quot;: true,             &quot;db_information&quot;: {          
      &quot;db_name&quot;: &quot;SUMMARY&quot;             },            
&quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_group&quot;: &quot;SUMMARY&quot;,                
&quot;display_name&quot;: &quot;Expected SUT Quality of Service
Guarantees&quot;             },             &quot;sql_statement&quot;: [       
         {                     &quot;static&quot;: &quot;SELECT PRI AS
Priority, MaxJitter AS \&quot;Max Jitter (us)\&quot;, MaxLatency AS \&quot;Max
Latency (us)\&quot;, MaxLoss AS \&quot;Max Loss Frame Count\&quot;,
MaxDuplicate AS \&quot;Max Duplicate Frame Count\&quot;, MaxReordered AS
\&quot;Max Reordered Frame Count\&quot;, MaxLate AS \&quot;Max Late Frame
Count\&quot; FROM IEEE8021ExpectedQoS&quot;                 }             ]    
    },         {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;StreamBlock Name&quot;,                     &quot;Tx Load (%)&quot;,     
               &quot;Expected Tx Load (%)&quot;                 ]            
},             &quot;table&quot;: [],             &quot;report&quot;: {        
        &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic generated on all Priority
met their expected Tx Load (%).&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;One or more Streamblocks did not
meet their expected Tx Load (%).&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryGenLoad&quot;                         }            
        ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;Test
Validation: Generator StreamBlock Tx Load (%)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM SummaryGenLoad&quot;                 } 
           ]         },         {             &quot;enable&quot;: true,        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Signature Frame Count&quot;,   
                 &quot;Failure&quot;                 ]             },          
  &quot;table&quot;: [],             &quot;report&quot;: {                
&quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Signature Frames were received on
the expected Priority.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Signature Frames were EITHER
received on an unexpected Priority OR not received on an expected one.&quot;,  
                  &quot;sql_for_verdict&quot;: [                         {     
                       &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*)
&gt; 0 THEN 0 ELSE 1 END) AS Verdict FROM SummarySigFrameCount&quot;           
             }                     ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Rx Signature Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
SummarySigFrameCount&quot;                 }             ]         },         {
            &quot;enable&quot;: false,             &quot;db_information&quot;:
{                 &quot;db_name&quot;: &quot;SUMMARY&quot;,                
&quot;columns&quot;: [                     &quot;Frame Size (bytes)&quot;,     
               &quot;TxTest Load Iteration&quot;,                    
&quot;Port Name&quot;,                     &quot;Priority&quot;,               
     &quot;bps Load&quot;,                     &quot;Expected bps Load&quot;,  
                  &quot;Bandwidth Ratio&quot;                 ]             }, 
           &quot;table&quot;: [],             &quot;report&quot;: {            
    &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority met
their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
did not reach their expected Min Rx/Tx BW Ratio.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryBpsLoad&quot;                         }            
        ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Min Rx/Tx BW Ratio (bps Load/Expected bps Load)&quot;             },  
          &quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM SummaryBpsLoad&quot;                 } 
           ]         },         {             &quot;enable&quot;: true,        
    &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Max Jitter (us)&quot;,         
           &quot;Max Jitter Allowed (us)&quot;                 ]             },
            &quot;table&quot;: [],             &quot;report&quot;: {           
     &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Jitter threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Jitter threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryMaxJitter&quot;                         }          
          ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Jitter (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM SummaryMaxJitter&quot;                
}             ]         },         {             &quot;enable&quot;: true,     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Max Latency (us)&quot;,        
            &quot;Max Latency Allowed (us)&quot;                 ]            
},             &quot;table&quot;: [],             &quot;report&quot;: {        
        &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Latency threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Latency threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryMaxLatency&quot;                         }         
           ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Latency (us)&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM SummaryMaxLatency&quot;                
}             ]         },         {             &quot;enable&quot;: true,     
       &quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Loss Frame Count&quot;,        
            &quot;Max Loss Frame Count&quot;                 ]             },  
          &quot;table&quot;: [],             &quot;report&quot;: {             
   &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Loss Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Loss Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryDroppedFrameCount&quot;                         }  
                  ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Loss Frame Count&quot; 
           },             &quot;sql_statement&quot;: [                 {       
             &quot;static&quot;: &quot;SELECT * FROM
SummaryDroppedFrameCount&quot;                 }             ]         },      
  {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Duplicate Frame Count&quot;,   
                 &quot;Max Duplicate Frame Count&quot;                 ]       
     },             &quot;table&quot;: [],             &quot;report&quot;: {   
             &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Duplicate Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Duplicate Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryDuplicateFrameCount&quot;                         }
                    ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Duplicate Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
SummaryDuplicateFrameCount&quot;                 }             ]         },    
    {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Reordered Frame Count&quot;,   
                 &quot;Max Reordered Frame Count&quot;                 ]       
     },             &quot;table&quot;: [],             &quot;report&quot;: {   
             &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Reordered Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Reordered Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryReorderedFrameCount&quot;                         }
                    ]                 },                
&quot;report_group&quot;: &quot;GROUP_1&quot;,                
&quot;display_name&quot;: &quot;Quality of Service: Max Reordered Frame
Count&quot;             },             &quot;sql_statement&quot;: [            
    {                     &quot;static&quot;: &quot;SELECT * FROM
SummaryReorderedFrameCount&quot;                 }             ]         },    
    {             &quot;enable&quot;: true,            
&quot;db_information&quot;: {                 &quot;db_name&quot;:
&quot;SUMMARY&quot;,                 &quot;columns&quot;: [                    
&quot;Frame Size (bytes)&quot;,                     &quot;TxTest Load
Iteration&quot;,                     &quot;Port Name&quot;,                    
&quot;Priority&quot;,                     &quot;Late Frame Count&quot;,        
            &quot;Max Late Frame Count&quot;                 ]             },  
          &quot;table&quot;: [],             &quot;report&quot;: {             
   &quot;report_verdict&quot;: {                    
&quot;apply_test_verdict&quot;: true,                    
&quot;passed_verdict_explanation&quot;: &quot;Traffic from all Priority did not
exceed their Max Late Frame Count threshold.&quot;,                    
&quot;failed_verdict_explanation&quot;: &quot;Traffic on one or more Priority
exceeded their Max Late Frame Count threshold.&quot;,                    
&quot;sql_for_verdict&quot;: [                         {                       
     &quot;static&quot;: &quot;SELECT (CASE WHEN COUNT(*) &gt; 0 THEN 0 ELSE 1
END) AS Verdict FROM SummaryLateFrameCount&quot;                         }     
               ]                 },                 &quot;report_group&quot;:
&quot;GROUP_1&quot;,                 &quot;display_name&quot;: &quot;Quality of
Service: Max Late Frame Count&quot;             },            
&quot;sql_statement&quot;: [                 {                    
&quot;static&quot;: &quot;SELECT * FROM SummaryLateFrameCount&quot;            
    }             ]         }     ] }"
         DbJsonFileName=""
         EnableLoadFromFileName="FALSE"
         CommandName=""
         PackageName="spirent"
         ErrorOnFailure="TRUE"
         AutoDestroy="FALSE"
         ExecuteSynchronous="FALSE"
         ProgressEnable="TRUE"
         ProgressIsSafeCancel="TRUE"
         Active="TRUE"
         LocalActive="TRUE"
         Name="EoT Tables">
        </spirent.methodology.RunSqlCommand>
      </spirent.methodology.ResultsGroupCommand>
    </spirent.methodology.manager.MethodologyGroupCommand>
  </Sequencer>
  <IfManager id="14" 
   Active="TRUE"
   LocalActive="TRUE"
   Name="IfManager 1">
  </IfManager>
  <LinkRegistry id="15" 
   Active="TRUE"
   LocalActive="TRUE"
   Name="LinkRegistry 1">
  </LinkRegistry>
  <ActiveEventManager id="3" 
   Active="TRUE"
   LocalActive="TRUE"
   Name="ActiveEventManager 1">
  </ActiveEventManager>
  <FeatureSupportedVersion id="2618" 
   Active="TRUE"
   LocalActive="TRUE"
   Name="FeatureSupportedVersion 1">
  </FeatureSupportedVersion>
  <SequencerGroupCommand id="129480" 
   CommandList="129481"
   ExecutionMode="BACKGROUND"
   GroupCategory="CLEANUP_COMMAND"
   AutoDestroy="FALSE"
   ExecuteSynchronous="FALSE"
   ProgressEnable="TRUE"
   ProgressIsSafeCancel="TRUE"
   Active="TRUE"
   LocalActive="TRUE"
   Name="Cleanup Commands">
    <spirent.methodology.EndOfTestCommand id="129481" 
     CommandName=""
     PackageName="spirent"
     ErrorOnFailure="TRUE"
     AutoDestroy="FALSE"
     ExecuteSynchronous="FALSE"
     ProgressEnable="TRUE"
     ProgressIsSafeCancel="TRUE"
     Active="TRUE"
     LocalActive="TRUE"
     Name="Results: End Of Test Command">
    </spirent.methodology.EndOfTestCommand>
  </SequencerGroupCommand>
</StcSystem>
