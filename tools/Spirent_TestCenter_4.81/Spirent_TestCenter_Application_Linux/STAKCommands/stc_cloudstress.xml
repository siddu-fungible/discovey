<?xml version="1.0" ?>
<stc:meta package="spirent.cloudstress" plugin="plcommands" version="0.0.0-0" xmlns:stc="urn:www.spirentcom.com:XMLSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- Abstract base class for CloudStress test command objects -->
    <stc:class name="BaseTestCommand"
        displayName="CloudStress Base Test Command"
        bllDirectInterface="true"
        isInternal="true" >

        <stc:attribute type="core.Sequenceable" value="true"/>
        <stc:attribute type="framework.CommandDescription" value="CloudStress Base Test Command"/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>
        
        <stc:enumeration name="EnumComparisonOperator">
            <stc:enum name="GREATER_THAN"           value="0"  displayName="Greater Than"/>
            <stc:enum name="GREATER_THAN_OR_EQUAL"  value="1"  displayName="Greater Than or Equal To"/>
            <stc:enum name="LESS_THAN"              value="2"  displayName="Less Than"/>
            <stc:enum name="LESS_THAN_OR_EQUAL"     value="3"  displayName="Less Than or Equal To"/>
            <!-- Agent doesn't support these operations yet -->
            <!--
            <stc:enum name="EQUAL"                  value="4"  displayName="Equal To"/>
            <stc:enum name="NOT_EQUAL"              value="5"  displayName="Not Equal To"/>
            -->
        </stc:enumeration>
        <!--
            Admin configuration
        -->
        <stc:property category="input" name="ControllerList" displayName="Controller List" type="string" default="" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="List of CloudStress controller IPs or DNS hostnames with port number"/>
            <!-- Syntax: <hostname_or_ip>:<port_number> -->
        </stc:property>
        <stc:property category="input" name="Count" displayName="Count" type="u32" default="1">
            <stc:attribute type="framework.PropertyDescription"
                           value="Number of agents to reserve.  Any available agents that exceeds this value will be used in the test."/>
            <stc:numericValidation minInclusive="1" maxInclusive="4294967295"/>
        </stc:property>
        <stc:property category="input" name="UserId" displayName="User ID" type="string" default="anonymous">
            <stc:attribute type="framework.PropertyDescription" value="User ID that identifies the owner of an agent"/>
            <stc:stringValidation minLength="1" maxLength="256"/>
        </stc:property>
        <stc:property category="input" name="TestDuration" displayName="Test Duration (seconds)" type="u32" default="60">
            <stc:attribute type="framework.PropertyDescription" value="Test duration (seconds)"/>
            <stc:numericValidation minInclusive="1" maxInclusive="4294967295"/>
        </stc:property>
    </stc:class>
    
    <stc:class name="BaseReadWriteTestCommand"
        baseClass="spirent.cloudstress.BaseTestCommand"
        displayName="CloudStress Base Read-Write Test Command"
        bllDirectInterface="true"
        isInternal="true" >

        <stc:attribute type="core.Sequenceable" value="true"/>
        <stc:attribute type="framework.CommandDescription" value="CloudStress Base Read-Write Test Command"/>

        <stc:enumeration name="EnumComparisonOperator">
            <stc:enum name="GREATER_THAN"           value="0"  displayName="Greater Than"/>
            <stc:enum name="GREATER_THAN_OR_EQUAL"  value="1"  displayName="Greater Than or Equal To"/>
            <stc:enum name="LESS_THAN"              value="2"  displayName="Less Than"/>
            <stc:enum name="LESS_THAN_OR_EQUAL"     value="3"  displayName="Less Than or Equal To"/>
            <!-- Agent doesn't support these operations yet -->
            <!--
            <stc:enum name="EQUAL"                  value="4"  displayName="Equal To"/>
            <stc:enum name="NOT_EQUAL"              value="5"  displayName="Not Equal To"/>
            -->
        </stc:enumeration>

        <!-- 
            Load configuration
        -->
        <stc:property category="input" name="ReadsPerSecond" displayName="Reads per second" type="u64" default="10000">
            <stc:attribute type="framework.PropertyDescription" value="Number of reads per second to simulate"/>
        </stc:property>
        <stc:property category="input" name="WritesPerSecond" displayName="Writes per second" type="u64" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="Number of writes per second to simulate"/>
        </stc:property>
        <stc:property category="input" name="BlockSize" displayName="Size of blocks to read/write (bytes)" type="u64" default="4096">
            <stc:attribute type="framework.PropertyDescription" value="Size of blocks to read/write (bytes)"/>
        </stc:property>

        <!--
            Failure criteria
            Example: Test is considered failure if read variance {operator} {threshold} more than {tolerance} of the time
        -->
        <stc:property category="input" name="EnableReadVarianceFailureIndicator" displayName="Enable Read Variance Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="ReadVarianceFailureOperator" displayName="Read Variance Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Read variance failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="ReadVarianceFailureThreshold" displayName="Read Variance Failure Threshold (%)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Read variance that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="ReadVarianceFailureTolerance" displayName="Read Variance Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Read variance maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>

        <stc:property category="input" name="EnableWriteVarianceFailureIndicator" displayName="Enable Write Variance Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="WriteVarianceFailureOperator" displayName="Write Variance Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Write variance failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="WriteVarianceFailureThreshold" displayName="Write Variance Failure Threshold (%)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Write variance that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="WriteVarianceFailureTolerance" displayName="Write Variance Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Write variance maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>

        <stc:property category="input" name="EnableReadLatencyFailureIndicator" displayName="Enable Read Latency Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="ReadLatencyFailureOperator" displayName="Read Latency Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Read latency failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="ReadLatencyFailureThreshold" displayName="Read Latency Failure Threshold (ns)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Read latency that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="ReadLatencyFailureTolerance" displayName="Read Latency Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Read latency maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>

        <stc:property category="input" name="EnableWriteLatencyFailureIndicator" displayName="Enable Write Latency Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="WriteLatencyFailureOperator" displayName="Write Latency Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Write latency failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="WriteLatencyFailureThreshold" displayName="Write Latency Failure Threshold (ns)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Write latency that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="WriteLatencyFailureTolerance" displayName="Write Latency Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Write latency maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>

        <stc:property category="input" name="EnableReadRateFailureIndicator" displayName="Enable Read Rate Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="ReadRateFailureOperator" displayName="Read Rate Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Read rate failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="ReadRateFailureThreshold" displayName="Read Rate Failure Threshold (%)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Read rate that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="ReadRateFailureTolerance" displayName="Read Rate Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Read rate maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>

        <stc:property category="input" name="EnableWriteRateFailureIndicator" displayName="Enable Write Rate Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="WriteRateFailureOperator" displayName="Write Rate Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="Write rate failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="WriteRateFailureThreshold" displayName="Write Rate Failure Threshold" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="Write rate that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="WriteRateFailureTolerance" displayName="Write Rate Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="Write rate maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>
    </stc:class>

    <stc:class name="BasicCpuPerformanceTestCommand"
        baseClass="spirent.cloudstress.BaseTestCommand"
        displayName="Basic CPU Performance Test"
        bllDirectInterface="true"
        isInternal="true">

        <!-- TODO: Make this more descriptive -->
        <stc:attribute type="framework.CommandDescription" value="Basic CPU Performance Test"/>

        <stc:enumeration name="EnumComparisonOperator">
            <stc:enum name="GREATER_THAN"           value="0"  displayName="Greater Than"/>
            <stc:enum name="GREATER_THAN_OR_EQUAL"  value="1"  displayName="Greater Than or Equal To"/>
            <stc:enum name="LESS_THAN"              value="2"  displayName="Less Than"/>
            <stc:enum name="LESS_THAN_OR_EQUAL"     value="3"  displayName="Less Than or Equal To"/>
            <!-- Agent doesn't support these operations yet -->
            <!--
            <stc:enum name="EQUAL"                  value="4"  displayName="Equal To"/>
            <stc:enum name="NOT_EQUAL"              value="5"  displayName="Not Equal To"/>
            -->
        </stc:enumeration>

        <!-- 
            Load configuration
        -->
        <stc:property category="input" name="CpuLoad" displayName="Intended CPU Load (%)" type="u32" default="10">
            <stc:attribute type="framework.PropertyDescription" value="CPU load (%) to simulate"/>
            <stc:numericValidation minInclusive="1" maxInclusive="204800"/>
        </stc:property>
        
        <!--
            Failure criteria
            Example: Test is considered failure if CPU variance {operator} {threshold} more than {tolerance} of the time
        -->
        <stc:property category="input" name="EnableVarianceFailureIndicator" displayName="Enable CPU Variance Failure Indicator" type="bool" default="true"/>
        <stc:property category="input" name="VarianceFailureOperator" displayName="CPU Variance Failure Operator" type="u8" default="GREATER_THAN">
            <stc:attribute type="framework.PropertyDescription" value="CPU variance failure operator that is applicable to the failure threshold."/>
            <stc:enumerationRef ref="EnumComparisonOperator"/>
        </stc:property>
        <stc:property category="input" name="VarianceFailureThreshold" displayName="CPU Variance Failure Threshold (%)" type="double" default="5.0">
            <stc:attribute type="framework.PropertyDescription" value="CPU variance that exceeds this threshold constitutes a test failure."/>
        </stc:property>
        <stc:property category="input" name="VarianceFailureTolerance" displayName="CPU Variance Failure Tolerance (%)" type="double" default="50.0">
            <stc:attribute type="framework.PropertyDescription" value="CPU variance maximum tolerance.  Test is considered a failure if the number of failed observations exceeds this amount."/>
            <stc:numericValidation minInclusive="0" maxInclusive="99"/>
        </stc:property>
    </stc:class>
    
    <stc:class name="BasicMemoryPerformanceTestCommand"
        baseClass="spirent.cloudstress.BaseReadWriteTestCommand"
        displayName="Basic Memory Performance Test"
        bllDirectInterface="true"
        isInternal="true">

        <!-- TODO: Make this more descriptive -->
        <stc:attribute type="framework.CommandDescription" value="Basic Memory Performance Test"/>

        <!-- 
            Load configuration
        -->
        <stc:property category="input" name="BufferSize" displayName="Size of memory buffer to use for read/write load generation (in bytes)" type="u64" default="33554432">
            <stc:attribute type="framework.PropertyDescription" value="Size of memory buffer to read/write (bytes)"/>
        </stc:property>
    </stc:class>
    
    <stc:class name="BasicStoragePerformanceTestCommand"
        baseClass="spirent.cloudstress.BaseReadWriteTestCommand"
        displayName="Basic Storage Performance Test"
        bllDirectInterface="true"
        isInternal="true">

        <!-- TODO: Make this more descriptive -->
        <stc:attribute type="framework.CommandDescription" value="Basic Storage Performance Test"/>

        <!-- 
            Load configuration
        -->
        <stc:property category="input" name="FileSize" displayName="Size of storage file size to use for read/write load generation (in bytes)" type="u64" default="1048576">
            <stc:attribute type="framework.PropertyDescription" value="Size of storage file size to read/write (bytes)"/>
        </stc:property>
    </stc:class>

    <!-- Abstract class for commands that require cloud provider credentials -->
    <stc:class name="CredentialsCommand"
        displayName="Credentials Command"
        bllDirectInterface="true"
        canCreate="false"
        isInternal="true">

        <stc:property category="input" name="Provider" displayName="Technology Provider" type="string" default="OpenStack">
            <stc:attribute type="framework.PropertyDescription" value="The supporting technology or vendor that implements your virtual environment"/>
        </stc:property>

        <stc:property category="input" name="ProviderServer" displayName="Provider Server" type="string" default="localhost">
            <stc:attribute type="framework.PropertyDescription" value="The server IP or name to connect to for your virtual environment"/>
        </stc:property>

        <stc:property category="input" name="ProviderUser" displayName="Provider User" type="string" default="root" noSave="true">
            <stc:attribute type="framework.PropertyDescription" value="The user name to supply to your virtual environment"/>
            <stc:attribute type="framework.HideValue" value="true"/>
        </stc:property>

        <stc:property category="input" name="ProviderPassword" displayName="Provider Password" type="string" default="password" noSave="true">
            <stc:attribute type="framework.PropertyDescription" value="The password to supply to your virtual environment"/>
            <stc:attribute type="framework.HideValue" value="true"/>
        </stc:property>

        <stc:property category="input" name="ProviderUserDomain" displayName="Provider User Domain" type="string" default="default">
            <stc:attribute type="framework.PropertyDescription" value="The OpenStack user domain for V3 Keystone API"/>
        </stc:property>

        <stc:property category="input" name="ProviderTenant" displayName="Provider Tenant" type="string" default="CloudStress">
            <stc:attribute type="framework.PropertyDescription" value="The OpenStack tenant (or project) or resource group"/>
        </stc:property>

        <stc:property category="input" name="ProviderTenantDomain" displayName="Provider Tenant Domain" type="string" default="default">
            <stc:attribute type="framework.PropertyDescription" value="The OpenStack tenant domain for V3 Keystone API"/>
        </stc:property>
    </stc:class>

    <stc:class name="DiscoverAgentsCommand"
        baseClass="spirent.cloudstress.CredentialsCommand"
        displayName="Run CloudStress Agent Discovery"
        bllDirectInterface="true"
        pythonVirtualenv="spirent.vcm"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command manually configures agents or discovers deployed agents based on machine sets"/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="IpAddrList" displayName="List of Starting IP Addresses for discovery" type="string" default=""
                  minOccurs="0" maxOccurs="unbounded" >
            <stc:attribute type="framework.PropertyDescription" value="Specifies the Starting IP Addresses for discovery."/>
        </stc:property>

        <stc:property category="input" name="IpAddrCountList" displayName="List of IP Address counts for discovery" type="u32" default="1"
                  minOccurs="0" maxOccurs="unbounded" >
            <stc:attribute type="framework.PropertyDescription" value="Specifies the counts of IP Addresses for discovery. If the number of counts do not match the number of starting IP addresses, the last count value will be used for the remaining starting IP addresses. If this list is empty, the default count value will be used for all starting IP addresses."/>
        </stc:property>

        <stc:property category="input" name="MaxWaitTime" displayName="Maximum time in seconds to wait to discover all specified agents." type="u32" default="300">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to discover all specified agents."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <stc:property category="input" name="TcpPortList" displayName="Optional TCP Port List" type="u16" default="13771" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="Optional list of starting TCP port values. If the number of TCP port values does not match the number of IP addresses in the address list, the last TCP Port number will be used for the remaining IP addresses." />
        </stc:property>

        <stc:property category="input" name="TcpPortCountList" displayName="List of TCP port counts for discovery" type="u16" default="1"
                  minOccurs="0" maxOccurs="unbounded" >
            <stc:attribute type="framework.PropertyDescription" value="Specifies the number of TCP ports for discovery. If the number of counts do not match the number of starting TCP port, the last count value will be used for the remaining starting TCP ports. If this list is empty, the default count value will be used for all starting TCP ports."/>
        </stc:property>

        <stc:property category="output" name="InstanceList" displayName="List of discovered template instances" type="handle" default="0" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of CloudTemplateInstances for the specified machine sets." />
        </stc:property>
        <stc:property category="output" name="InstanceResIdList" displayName="List of resource ids of discovered template instances" type="string" default="0" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of resource ids of CloudTemplateInstances for the specified machine sets." />
        </stc:property>
    </stc:class>

    <stc:class name="AutoDiscoverAgentsCommand"
        displayName="Run Auto-Discovery"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Discovers deployed agents by interrogating the cloud provider"/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="MaxWaitTime" displayName="Maximum time, in seconds, to wait for discovery of agents." type="u32" default="30">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to discover all specified agents per set of credentials."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <stc:property category="output" name="InstanceList" displayName="List of discovered template instances" type="handle" default="0" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of discovered CloudTemplateInstances." />
        </stc:property>
        <stc:property category="output" name="InstanceResIdList" displayName="List of discovered template instance resource IDs" type="string" default="0" minOccurs="0" maxOccurs="unbounded">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of discovered CloudTemplateInstance resource IDs." />
        </stc:property>
    </stc:class>

    <stc:class name="RunResourceActionCommand"
        displayName="Execute a CloudStress Command that performs an action on a list of CloudStress Resources"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command facilitates running a CloudStress command on a list of resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="WaitTime" displayName="Time to wait for command completion" type="u32" default="300">
            <stc:attribute type="framework.PropertyDescription" value="The time in seconds to wait for completion of the executed command."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>
        <stc:property category="input" name="ResourceCommandName" displayName="Name of CloudStress command to run" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="The name of the CloudStress command to run."/>
        </stc:property>

        <stc:property category="input" name="ResourceList" displayName="List of CloudStress resources for the command to run" type="handle" default=""
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="List of CloudStress resources for the command to run."/>
        </stc:property>

        <stc:property category="input" name="ResourceListPropertyName" displayName="Name of the resource list property in the command to run" type="string"
            default="InstanceList">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the name of the resource list property in the command to set using ResourceList. The property must be a collection of handles."/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigDynamicResultsCommand"
        displayName="Configure Dynamic Results on CloudTemplateModels"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures threshold and t-digest results on the specified models and configures the necessary relations in the data model. All specified resources must be of the same type. It also tags the created objects with tag names such as ttClassName, e.g. ttDynamicResultGroup."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="NodeList" displayName="List of CloudTemplateNodes" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateNode" internalType="string" />
            <stc:attribute type="framework.PropertyDescription" value="The CloudTemplateNodes for which to configure the specified dynamic results. If empty, all known nodes will be used."/>
        </stc:property>
        <stc:property category="input" name="InstanceList" type="handle" default="0" minOccurs="0" maxOccurs="unbounded" displayName="List of CloudTemplateInstances" >
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateInstance" internalType="string" />
            <stc:attribute type="framework.PropertyDescription" value="A list of CloudTemplateInstances for which to configure the specified dynamic results.  If empty, will use whatever is specified in NodeList."/>
        </stc:property>
        <stc:property category="input" name="ConfigThresholdResult" displayName="Configure the threshold results for the specified statistic, threshold, and comparator" type="bool" default="true">
            <stc:attribute type="framework.PropertyDescription" value="Configure results that count the number of true and false comparisons of the specified statistic compared against the threshold using the comparison operator."/>
        </stc:property>
        <stc:property category="input" name="ConfigTdigestResult" displayName="Configure t-digest results for the specified statistic" type="bool" default="true">
            <stc:attribute type="framework.PropertyDescription" value="Configure t-digest results for the specified statistic."/>
        </stc:property>
        <stc:property category="input" name="Statistic" type="u8" default="CPU_UTILIZATION"
            displayName="Statistic">
            <stc:attribute type="framework.PropertyDescription" value="The dynamic result statistic to configure."/>
            <stc:enumerationRef ref="DynamicResultConfig.EnumStatistic"/>
        </stc:property>
        <stc:property category="input" name="Comparator" type="u8" default="GREATER_THAN"
            displayName="Comparator">
            <stc:attribute type="framework.PropertyDescription" value="The comparison operator to use when comparing the statistic to threshold value. Only applicable if ConfigThresholdResult is true."/>
            <stc:enumerationRef ref="ThresholdResultConfig.EnumComparator"/>
        </stc:property>
        <stc:property category="input" name="Threshold" type="double" default="0"
            displayName="Threshold">
            <stc:attribute type="framework.PropertyDescription" value="The threshold value to use for threshold results. Only applicable if ConfigThresholdResult is true."/>
        </stc:property>
        <stc:property category="input" name="TagPrefix" type="string" default="" displayName="Optional Tag Prefix">
            <stc:attribute type="framework.PropertyDescription" value="Optional prefix to add to the tags used to tag the created data model objects. Modified data model objects won't be retagged."/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigLoadParamsCommand"
        displayName="Base Load Parameter Configuration Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures CPU Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="NodeList" displayName="List of CloudTemplateNodes" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="The CloudTemplateNodes for which to configure the specified load parameters. If empty, all known nodes will be used."/>
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateNode" internalType="string" />
        </stc:property>

        <stc:property category="input" name="InstanceList" displayName="List of CloudTemplateInstances" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="An optional list of specific CloudTemplateInstances of the specified nodes for which to configure the specified load parameters. If empty all instances in the specified nodes will be used."/>
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateInstance" internalType="string" />
        </stc:property>    
    </stc:class>

    <stc:class name="ConfigCpuLoadParamsCommand"
        baseClass="spirent.cloudstress.ConfigLoadParamsCommand"
        displayName="Configures CPU Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures CPU Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="MinCpuLoad" displayName="Minimum CPU Load (%)" type="double" default="1">
            <stc:attribute type="framework.PropertyDescription" value="The minimum CPU load value to apply."/>
            <stc:numericValidation minInclusive="0" maxInclusive="204800"/>
        </stc:property>

        <stc:property category="input" name="MaxCpuLoad" displayName="Maximum CPU Load (%)" type="double" default="100">
            <stc:attribute type="framework.PropertyDescription" value="The maximum CPU load value to apply."/>
            <stc:numericValidation minInclusive="0" maxInclusive="204800"/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigIoLoadParamsCommand"
        baseClass="spirent.cloudstress.ConfigLoadParamsCommand"
        displayName="Configures IO Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures IO Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:enumeration name="EnumAccessPattern">
            <stc:enum name="RANDOM"      value="0"  displayName="Random"/>
            <stc:enum name="SEQUENTIAL"  value="1"  displayName="Sequential"/>
            <stc:enum name="REVERSE"     value="2"  displayName="Reverse"/>
        </stc:enumeration>

        <stc:property category="input" name="MinReadRate" displayName ="Minimum Read Rate" type="u64" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="The minimum I/O read operations per second."/>
        </stc:property>
        <stc:property category="input" name="MaxReadRate" displayName ="Maximum Read Rate" type="u64" default="10000">
            <stc:attribute type="framework.PropertyDescription" value="The maximum I/O read operations per second."/>
        </stc:property>
        <stc:property category="input" name="MinWriteRate" displayName ="Minimum Write Rate" type="u64" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="The minimum I/O write operations per second."/>
        </stc:property>
        <stc:property category="input" name="MaxWriteRate" displayName ="Maximum Write Rate" type="u64" default="10000">
            <stc:attribute type="framework.PropertyDescription" value="The maximum I/O write operations per second."/>
        </stc:property>
        <stc:property category="input" name="ReadSize" displayName="Number of bytes to read" type="u64" default="4096">
            <stc:attribute type="framework.PropertyDescription" value="The number of bytes to read. This must be a power of 2."/>
        </stc:property>
        <stc:property category="input" name="WriteSize" displayName="Number of bytes to write" type="u64" default="4096">
            <stc:attribute type="framework.PropertyDescription" value="The number of bytes to write. This must be a power of 2."/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigMemoryLoadParamsCommand"
        baseClass="spirent.cloudstress.ConfigIoLoadParamsCommand"
        displayName="Configures Memory Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures Memory Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="BufferSize" displayName="Size of memory buffer to read or write" type="u64" default="33554432">
            <stc:attribute type="framework.PropertyDescription" value="The size of the memory buffer, in bytes, to read or write. This must be a multiple of both read and write sizes."/>
        </stc:property>
        <stc:property category="input" name="AccessPattern" displayName="Specifies the pattern used to access the buffer." type="u8" default="RANDOM">
            <stc:attribute type="framework.PropertyDescription" value="The pattern used to access the memory buffer for read and write operations"/>
            <stc:enumerationRef ref="spirent.cloudstress.ConfigIoLoadParamsCommand.EnumAccessPattern"/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigStorageLoadParamsCommand"
        baseClass="spirent.cloudstress.ConfigIoLoadParamsCommand"
        displayName="Configures Storage Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures Storage Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="TargetDevice" displayName="Target storage device" type="string" default="vblk0.3">
            <stc:attribute type="framework.PropertyDescription" value="The virtual device to use for storage I/O tests. The virtual device can be backed by either a device/partition (e.g., vblk1) or a file system (e.g., /tmp)."/>
        </stc:property>
        <stc:property category="input" name="EnableFileSize" displayName="Enable file size" type="bool" default="false">
            <stc:attribute type="framework.PropertyDescription" value="When enabled, a custom file size can be specified for storage I/O testing. Otherwise, the entire target device will be used."/>
        </stc:property>
        <stc:property category="input" name="FileSize" displayName="Size of storage file size to read or write" type="u64" default="1048576">
            <stc:attribute type="framework.PropertyDescription" value="The size of the storage file, in bytes, to read or write. This must be a multiple of both read and write sizes."/>
        </stc:property>
        <stc:property category="input" name="AccessPattern" displayName="Specifies the pattern used to access the storage device" type="u8" default="RANDOM">
            <stc:attribute type="framework.PropertyDescription" value="The pattern used to access the storage device for read and write operations"/>
            <stc:enumerationRef ref="spirent.cloudstress.ConfigIoLoadParamsCommand.EnumAccessPattern"/>
        </stc:property>
        <stc:property category="input" name="QueueDepth" displayName="The queue depth for storage I/O operations" type="u64" default="32">
            <stc:attribute type="framework.PropertyDescription" value="The specifies the number of concurrent storage I/O operations to exercise device queue depth."/>
            <stc:numericValidation minInclusive="1" maxInclusive="18446744073709551615" />
        </stc:property>
    </stc:class>
    
    <stc:class name="ConfigNetworkLoadParamsCommand"
        baseClass="spirent.cloudstress.ConfigIoLoadParamsCommand"
        displayName="Configures Network Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures Network Load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="Connections" type="u64" default="1000" displayName="Number of connections">
            <stc:attribute type="framework.PropertyDescription" value="The number of connections to make to each peer."/>
        </stc:property>

        <stc:property category="input" name="Transport" type="u8" default="TCP" displayName="Transport Type">
            <stc:attribute type="framework.PropertyDescription" value="The transport protocol to use for network load (TCP or UDP)."/>
            <stc:enumerationRef ref="CloudNetworkLoadProfile.EnumTransport"/>
        </stc:property>

        <stc:property category="input" name="EndpointMapping" type="u8" default="ONE_TO_ONE" displayName="Node Endpoint Mapping">
            <stc:attribute type="framework.PropertyDescription" value="The mapping pattern between endpoints."/>
            <stc:enumerationRef ref="CloudLoadProfile.EnumEndpointMapping" />
        </stc:property>
    </stc:class>

    <stc:class name="ConfigTimeVaryingLoadProfileParamsCommand"
        baseClass="spirent.cloudstress.ConfigLoadParamsCommand"
        displayName="Configures the Multi-dimensional Time-Varying Load Profile Load Parameters"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures the multi-dimensional Time-Varying Load Profile load parameters for the specified CloudStress Resources."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="CpuData" displayName="TVLP CPU JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP CPU data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
        <stc:property category="input" name="MemoryData" displayName="TVLP Memory JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP memory data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
        <stc:property category="input" name="NetworkData" displayName="TVLP Network JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP network data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
        <stc:property category="input" name="StorageData" displayName="TVLP Storage JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP storage data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
        <stc:property category="input" name="AttributeData" displayName="TVLP Attribute JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP attribute data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
        <stc:property category="input" name="VariableMap" displayName="TVLP Variable Map JSON Data" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" value="TVLP variable map data in JSON format."/>
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>

        <stc:property category="input" name="NetworkEndpointMapping" type="u8" default="ONE_TO_ONE" displayName="Node Endpoint Mapping">
            <stc:attribute type="framework.PropertyDescription" value="The mapping pattern between endpoints."/>
            <stc:enumerationRef ref="CloudLoadProfile.EnumEndpointMapping" />
        </stc:property>
    </stc:class>

    <stc:class name="SetLoadParamsCommand"
        displayName="Set Load Parameters Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command sets the load parameter values in the Load Profile data model objects associated with reserved CloudTemplateInstances."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="SetCpuLoad" type="bool" displayName="Set CPU Load Parameters" default="true">
            <stc:attribute type="framework.PropertyDescription" value="If true, sets the CPU Load parameters."/>
        </stc:property>
        <stc:property category="input" name="SetMemoryLoad" type="bool" displayName="Set Memory Load Parameters" default="true">
            <stc:attribute type="framework.PropertyDescription" value="If true, sets the Memory Load parameters."/>
        </stc:property>
        <stc:property category="input" name="SetStorageLoad" type="bool" displayName="Set Storage Load Parameters" default="true">
            <stc:attribute type="framework.PropertyDescription" value="If true, sets the Storage Load parameters."/>
        </stc:property>
        <stc:property category="input" name="SetNetworkLoad" type="bool" displayName="Set Network Load Parameters" default="true">
            <stc:attribute type="framework.PropertyDescription" value="If true, sets the Network Load parameters."/>
        </stc:property>
        <stc:property category="input" name="LoadScaleValue" displayName="Load Scale Value" type="double" default="1">
            <stc:attribute type="framework.PropertyDescription" value="This value is used to calculate the specific load value as follows: ((max load - min load) * scale value / 100) + min load."/>
            <stc:numericValidation minInclusive="0" maxInclusive="100"/>
        </stc:property>
    </stc:class>

    <stc:class name="SaveIterationThresholdResultsCommand"
        displayName="Save Iteration Threshold Results Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command saves the threshold results for a particular statistic into a database consisting of Instance Object Handle, True, False for the current iteration."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="InstanceList" displayName="List of CloudTemplateInstances" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateInstance" internalType="string" />
            <stc:attribute type="framework.PropertyDescription" value="The CloudTemplateInstances for which to save the specified threshold results."/>
        </stc:property>

        <stc:property category="input" name="Statistic" type="u8" default="CPU_UTILIZATION"
            displayName="Statistic">
            <stc:attribute type="framework.PropertyDescription" value="The threshold result statistic to save results."/>
            <stc:enumerationRef ref="DynamicResultConfig.EnumStatistic"/>
        </stc:property>

        <stc:property category="input" name="IteratorCommandTagName" type="string" default="" displayName="Iterator Command Name">
            <stc:attribute type="framework.PropertyDescription" value="Optional tag name for the iterator command to extract the current iteration. The iteration value will be appended to the table name."/>
        </stc:property>
        <stc:property category="input" name="TableName" type="string" default="" displayName="Table Name">
            <stc:attribute type="framework.PropertyDescription" value="Optional table name in the database used to save iteration results. If it is an empty string, the statistic name will be used as the table name."/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigIterationThresholdResultsVerificationCommand"
        displayName="Configures Iteration Threshold Results Verification Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures the SQL query, display name, passed verdict explanation, and failed verdict explanation for a tagged VerifyMultipleDbQueryCommand to generate the iteration pass/fail result."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="VerifyCommandTagName" type="string" default="" displayName="Tag name for the VerifyMultipleDbQueryCommand">
            <stc:attribute type="framework.PropertyDescription" value="Tag name for the VerifyMultipleDbQueryCommand used to generate the iteration result."/>
        </stc:property>

        <stc:property category="input" name="SuccessThreshold" type="double" default="95.0" displayName="Success Threshold">
            <stc:attribute type="framework.PropertyDescription" value="The minimum percentage of threshold result samples per agent that meet the configured threshold result in order for the iteration to pass."/>
            <stc:numericValidation minInclusive="0" maxInclusive="100"/>
        </stc:property>

        <stc:property category="input" name="IteratorCommandTagName" type="string" default="" displayName="Iterator Command Name">
            <stc:attribute type="framework.PropertyDescription" value="Optional tag name for the iterator command to extract the current iteration. The iteration value will be appended to the table name."/>
        </stc:property>

        <stc:property category="input" name="TableName" type="string" default="" displayName="Table Name">
            <stc:attribute type="framework.PropertyDescription" value="Table name in the database used to retrieve iteration results. If it is an empty string, the statistic name will be used as the table name."/>
        </stc:property>

        <stc:property category="input" name="DisplayName" displayName="Display Name" type="string" default="">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="Title to display for this result section in the test report file."/>
        </stc:property>

        <stc:property category="input" name="PassedVerdictExplanation" displayName="Passed Verdict Explanation" type="string" default="">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="Statement explaining the verdict when the command passes."/>
        </stc:property>

        <stc:property category="input" name="FailedVerdictExplanation" displayName="Failed Verdict Explanation" type="string" default="">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="Statement explaining the verdict when the command fails."/>
        </stc:property>

        <stc:property category="input" name="ResetCommandProperties" displayName="Reset Command Properties" type="bool" default="false">
            <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="Reset the collection properties on the VerifyMultipleDbQueryCommand."/>
        </stc:property>
    </stc:class>

    <stc:class name="ConfigRingTopologyCommand"
        displayName="Configures A Ring Network Topology Across Instances"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures a ring network topology across instances. Nodes will be mapped pairwise. If instances have a different number of nodes, the smallest number of nodes will be used."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="InstanceList" displayName="List of CloudTemplateInstances" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="An optional list of specific CloudTemplateInstances of the specified nodes for which to configure the ring topology. If empty, all reserved instances will be used."/>
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateInstance" internalType="string" />
        </stc:property>
    </stc:class>

    <stc:class name="ConfigNetworkTrafficPatternCommand"
        displayName="Configures a Network Traffic Pattern Across Instances"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command configures the specified traffic pattern across instances. Traffic will be sent bi-directionally. Nodes will be mapped pairwise. If instances have a different number of nodes, the smallest number of nodes will be used."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:enumeration name="EnumTrafficPattern">
            <stc:enum name="PAIR"                   value="0"  displayName="Pair"/>
            <stc:enum name="BACKBONE"               value="1"  displayName="Backbone"/>
            <stc:enum name="MESH"                   value="2"  displayName="Full Mesh"/>
            <stc:enum name="RING"                   value="3"  displayName="Ring"/>
        </stc:enumeration>

        <stc:enumeration name="EnumTrafficDirection">
            <stc:enum name="UNIDIRECTIONAL"  value="0"  displayName="Uni-Directional"/>
            <stc:enum name="BIDIRECTIONAL"   value="1"  displayName="Bi-Directional"/>
        </stc:enumeration>

        <stc:property category="input" name="InstanceList" displayName="List of CloudTemplateInstances" type="handle" default="0"
            minOccurs="0" maxOccurs="unbounded">
            <stc:attribute type="framework.PropertyDescription" value="An optional list of specific CloudTemplateInstances of the specified nodes for which to configure the specified pattern. If empty, all reserved instances will be used. For the pair and backbone patterns, the instance list is divided in half and the pattern is setup between the two halves of instances. If there is an odd number of instances, the unmatched instance is not used."/>
            <stc:attribute type="core.ValidHandleTypes" value="CloudTemplateInstance" internalType="string" />
        </stc:property>

        <stc:property category="input" name="TrafficPattern" type="u8" default="PAIR" displayName="Network Traffic Pattern">
            <stc:attribute type="framework.PropertyDescription" value="The traffic pattern between instances."/>
            <stc:enumerationRef ref="EnumTrafficPattern" />
        </stc:property>

        <stc:property category="input" name="TrafficDirection" type="u8" default="UNIDIRECTIONAL" displayName="Network Traffic Direction">
            <stc:attribute type="framework.PropertyDescription" value="The direction of traffic between instances."/>
            <stc:enumerationRef ref="EnumTrafficDirection" />
        </stc:property>
    </stc:class>

    <stc:class name="GetInstancesCommand"
        displayName="Get the handles for a specified number of CloudTemplateInstances"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command retrieves the object handles for a specified number of CloudTemplateInstances. It returns the list of instances. If NetworkLoadEnabled is true, network traffic pattern and direction are taken into account."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="InstanceCount" type="u32" default="1" displayName="Instance Count" >
            <stc:attribute type="framework.PropertyDescription" value="The number of CloudTemplateInstances to retrieve."/>
        </stc:property>

        <stc:property category="input" name="NetworkLoadEnabled" type="bool" default="false" displayName="Network Load Enabled">
            <stc:attribute type="framework.PropertyDescription" value="If true, TrafficPattern and TrafficDirection are also considered when determining which instances to retrieve."/>
        </stc:property>
        
        <stc:property category="input" name="TrafficPattern" type="u8" default="RING" displayName="Network Traffic Pattern">
            <stc:attribute type="framework.PropertyDescription" value="The traffic pattern between instances."/>
            <stc:enumerationRef ref="spirent.cloudstress.ConfigNetworkTrafficPatternCommand.EnumTrafficPattern" />
        </stc:property>

        <stc:property category="input" name="TrafficDirection" type="u8" default="UNIDIRECTIONAL" displayName="Network Traffic Direction">
            <stc:attribute type="framework.PropertyDescription" value="The direction of traffic between instances."/>
            <stc:enumerationRef ref="spirent.cloudstress.ConfigNetworkTrafficPatternCommand.EnumTrafficDirection" />
        </stc:property>

        <stc:property category="output" name="InstanceList" type="handle" default="0" minOccurs="0" maxOccurs="unbounded" displayName="Instances" >
            <stc:attribute type="framework.PropertyDescription" value="A list of CloudTemplateInstances."/>
        </stc:property>
        
        <stc:property category="output" name="NetInstanceList" type="handle" default="0" minOccurs="0" maxOccurs="unbounded" displayName="Instances for Network I/O" >
            <stc:attribute type="framework.PropertyDescription" value="A list of CloudTemplateInstances that are used for network I/O and require a network I/O load profile."/>
        </stc:property>
    </stc:class>

    <stc:class name="GetDiscoveredAgentsCommand"
        displayName="Gets all discovered agents"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command retrieves the discovered template topology and returns it in JSON format."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="ResIdList" displayName="List of Template Model Resource Ids" type="string" default=""
          minOccurs="0" maxOccurs="unbounded" >
            <stc:attribute type="framework.PropertyDescription" value="Optional list of resource IDs to specify specific template models in the discovered template topology. If empty, all discovered template models in the topology will be retrieved."/>
        </stc:property>

        <stc:property category="output" name="Topology" displayName="Template Topology (JSON)" type="string" default="">
            <stc:attribute type="framework.PropertyDescription" internalIsEnum="false" internalType="string" name="none"
                value="JSON String representing discovered template topology." />
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
    </stc:class>

    <!-- Base class for commands doing MachineSet-level operations -->
    <stc:class name="BaseMachineSetCommand"
        displayName="Base Machine Set Command"
        bllDirectInterface="true"
        canCreate="false"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Base class for commands doing MachineSet-level operations."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <!-- MachineSet handles/tagnames -->
        <stc:property category="input" name="MachineSetList" displayName="Machine Set List" type="handle" default="0"
                  minOccurs="0" maxOccurs="unbounded" >
            <stc:attribute type="core.ValidHandleTypes" value="MachineSet" internalType="string" />
            <stc:attribute type="framework.PropertyDescription" value="Specifies the Machine Sets for which instance will need to be auto-deployed.  Machine Sets without any auto-deployment parameters will be ignored."/>
        </stc:property>
        <stc:property category="input" name="MachineSetTagName" type="string" default="" displayName="Machine Set Tag Name">
            <stc:attribute type="framework.PropertyDescription" value="Tag name for Tag being used to tag Machine Sets.  Machine Sets without any auto-deployment parameters will be ignored. "/>
        </stc:property>
    </stc:class>

    <stc:class name="GetInstancesFromMachineSetsCommand"
        baseClass="spirent.cloudstress.BaseMachineSetCommand"
        displayName="Get CloudTemplateInstances from the specified MachineSets"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command retrieves the object handles for the CloudTemplateInstances specified in the input list of MachineSets. It returns the list of instances."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="MaxWaitTime" displayName="Maximum time in seconds to wait to find all specified instances." type="u32" default="120">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to find all specified instances."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>
        
        <stc:property category="output" name="InstanceList" type="handle" default="0" minOccurs="0" maxOccurs="unbounded" displayName="Instances" >
            <stc:attribute type="framework.PropertyDescription" value="A list of CloudTemplateInstances."/>
        </stc:property>
    </stc:class>

    <!-- Base class for commands using glimpse to query, deploy, or tear down instances -->
    <stc:class name="BaseInstanceDeployTearDownCommand"
        baseClass="spirent.cloudstress.BaseMachineSetCommand"
        displayName="Base Instance Deploy Tear Down Command"
        bllDirectInterface="true"
        canCreate="false"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Base class for commands deploying or tearing down instances via glimpse."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:enumeration name="EnumDstDatabase">
            <stc:enum name="LAST_ITERATION"         value="0"  displayName="Last Iteration DB"/>
            <stc:enum name="SUMMARY"                value="1"  displayName="Summary"/>
            <stc:enum name="NONE"                   value="2"  displayName="Don't Save to DB"/>
        </stc:enumeration>

        <!-- Polling for glimpse output -->
        <stc:property category="input" name="GlimpseRespMaxWaitTime" displayName="Glimpse Response Maximum Wait Time (seconds)" type="u32" default="60">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to for a response from Glimpse once a command has been issued."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>
        <stc:property category="input" name="GlimpseRespPollTime" displayName="Glimpse Response Poll Time (milliseconds)" type="u32" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the time in milliseconds to wait between polls while polling Glimpse for a response."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <!-- Polling for agent state -->
        <stc:property category="input" name="MaxWaitTime" displayName="Maximum Wait Time (seconds)" type="u32" default="60">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to for all of the agents per MachineSet to come up or be torn down.  When the BatchSize is non-zero, this parameter corresponds to the maximum wait time per batch of agents per MachineSet."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>
        <stc:property category="input" name="PollTime" displayName="Poll Time (milliseconds)" type="u32" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the time in milliseconds to wait between polls while polling for number of agents that are up.  Note that each poll for number of agents that are up involves issuing a command to Glimpse to get the current number of agents that are up."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <!-- Deployment information -->
        <stc:property category="input" name="BatchSize" displayName="Agent Batch Size" type="u32" default="0">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the batch size of the number of agents to bring up or down in parallel.  When set to 0, all agents will be brought up or down in parallel."/>
        </stc:property>
        <!--
        <stc:property category="input" name="Count" displayName="Instance Count" type="u32" default="null" nullable="true">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the number of instances.  When set to null, will use the count specified in the MachineSet." />
        </stc:property>
        -->

        <!-- Results collection -->
        <stc:property category="input" name="DstDatabase" type="u8" default="LAST_ITERATION" displayName="Destination Database">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the database to save results to.  When set to NONE, results will not be saved to a database."/>
            <stc:enumerationRef ref="EnumDstDatabase" />
        </stc:property>
        <stc:property category="input" name="ResultsTableNamePrefix" type="string" default="" displayName="Results Table Name Prefix">
            <stc:attribute type="framework.PropertyDescription" value="Name of the table in the database to store instance results.  Timing information is based on polling of the instances that are deployed and will go into a table with the suffix '_timing.'  Event information will go into a table with the suffix 'events.'"/>
        </stc:property>
    </stc:class>


    <!-- Add a separate command to update (add/remove) auto-deployed agents; this command will only create new agents -->
    <!-- Only OpenStack is supported; when additional platforms are supported, add a "provider" property -->
    <stc:class name="DeployAgentsCommand"
        baseClass="spirent.cloudstress.BaseInstanceDeployTearDownCommand"
        displayName="Deploy CloudStress Agents Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Auto-deploys CloudStress agents."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>
    </stc:class>

    <stc:class name="TearDownAgentsCommand"
        baseClass="spirent.cloudstress.BaseInstanceDeployTearDownCommand"
        displayName="Tear Down CloudStress Agents Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Tear down CloudStress agents and update the BLL/controller.  This command will only tear down agents that were deployed in the course of running this methodology test."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <!--
        <stc:property category="input" name="EnableTearDownVerification" type="bool" default="true" displayName="Enable Instance Tear Down Verification">
            <stc:attribute type="framework.PropertyDescription" value="If true, will poll glimpse until the agents are torn down and no longer reported.  When false, will issue commands to glimpse to tear down agents as fast as possible without verifying the agents actually came down."/>
        </stc:property>
        -->

    </stc:class>

    <stc:class name="UpdateMachineSetDeploymentCommand"
        baseClass="spirent.cloudstress.BaseInstanceDeployTearDownCommand"
        displayName="Update Machine Set Deployment Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Updates deployable MachineSets such that the total number of agents deployed per MachineSet is that specified in the Count parameter."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <!-- This Count is not nullable -->
        <stc:property category="input" name="Count" displayName="Instance Count" type="u32" default="0">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the total number of instances that will be deployed per MachineSet when this command completes.  Instances will be torn down on MachineSets with more than this number of deployed instances while instances will be deployed on MachineSets that have less than this number of deployed instances." />
        </stc:property>
    </stc:class>


    <stc:class name="ReserveMachineSetAgentsCommand"
        baseClass="spirent.cloudstress.BaseMachineSetCommand"
        displayName="Reserve Machine Set Agents Command"
        bllDirectInterface="true"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="Reserve instances of a MachineSet."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="MaxWaitTime" displayName="Maximum Wait Time (seconds)" type="u32" default="30">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to for agents to be reserved."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <!-- Poll for deployed agents -->
        <stc:property category="input" name="ProviderRespMaxWaitTime" displayName="Provider Maximum Wait Time (seconds)" type="u32" default="60">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait to for the provider to respond when listing deployed agents.  This parameter is only used when there are MachineSets that have auto-deployed agents."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>
        <stc:property category="input" name="ProviderRespPollTime" displayName="Poll Time (milliseconds)" type="u32" default="1000">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the time in milliseconds to wait between polls while polling the provider for a response.  This parameter is only used when there are MachineSets that have auto-deployed agents."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

    </stc:class>

    <stc:class name="SaveVmSnapshotCommand"
        displayName="Takes a snapshot of running VMs on infrastructure"
        bllDirectInterface="true"
        pythonVirtualenv="spirent.vcm"
        isInternal="true">

        <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true" />
        <stc:attribute type="framework.CommandDescription" value="This command takes a snapshot of running VMs on infrastructure that do not match any reserved agents."/>
        <stc:attribute type="framework.CommandCategory" value="CloudStress"/>

        <stc:property category="input" name="ProviderRespWaitTime" displayName="Maximum time in seconds to wait for responses from the provider." type="u32" default="300">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the maximum time in seconds to wait for responses from the provider."/>
            <stc:numericValidation minInclusive="1" maxInclusive="86400"/>
        </stc:property>

        <!-- Results collection -->
        <stc:property category="input" name="DstDatabase" type="u8" default="LAST_ITERATION" displayName="Destination Database">
            <stc:attribute type="framework.PropertyDescription" value="Specifies the database to save the snapshot to. When set to NONE, results will not be saved to a database."/>
            <stc:enumerationRef ref="spirent.cloudstress.BaseInstanceDeployTearDownCommand.EnumDstDatabase" />
        </stc:property>
        <stc:property category="input" name="SnapshotTableNamePrefix" type="string" default="" displayName="Results Table Name Prefix">
            <stc:attribute type="framework.PropertyDescription" value="Prefix for the name of the table in the database to store snapshot information. Snapshot information is based on filtering discovery results with reserved agents and will go into two tables with suffixes '_info' and '_disk_info'."/>
        </stc:property>

        <stc:property category="output" name="VmSnapshot" type="string" default="" displayName="VM Snapshot Data (JSON)">
            <stc:attribute type="framework.PropertyDescription" internalIsEnum="false" internalType="string" name="none"
  value="JSON String representing discovered VMs." />
            <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
        </stc:property>
    </stc:class>
</stc:meta>
