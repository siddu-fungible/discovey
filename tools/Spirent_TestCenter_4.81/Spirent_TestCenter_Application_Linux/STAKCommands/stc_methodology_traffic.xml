<?xml version="1.0" ?>
<stc:meta package="spirent.methodology.traffic" plugin="plcommands" version="0.0.0-0" xmlns:stc="urn:www.spirentcom.com:XMLSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<stc:class name="CreateImixDistributionCommand"
           displayName="Create Imix Distribution Command"
           bllDirectInterface="true">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription"
        value="Creates IMIX distributions (FrameLengthDistribution) for use by StreamBlocks. The frame length values are specified as a L2 length, which include the 14 byte Ethernet header and 4 byte checksum."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>

    <!-- These all should be from the base class -->
    
    <stc:property category="input" name="ImixInfo" displayName="Mix Info" type="string" default="{&quot;imixes&quot;:[{&quot;name&quot;:&quot;DefaultB&quot;,&quot;table&quot;:[{&quot;weight&quot;:7,&quot;fixedFrameLength&quot;:64,&quot;frameLengthMode&quot;:&quot;FIXED&quot;,&quot;maxFrameLength&quot;:66,&quot;minFrameLength&quot;:64},{&quot;weight&quot;:4,&quot;fixedFrameLength&quot;:594,&quot;frameLengthMode&quot;:&quot;FIXED&quot;,&quot;maxFrameLength&quot;:595,&quot;minFrameLength&quot;:593},{&quot;weight&quot;:1,&quot;fixedFrameLength&quot;:1518,&quot;frameLengthMode&quot;:&quot;FIXED&quot;,&quot;maxFrameLength&quot;:1518,&quot;minFrameLength&quot;:1517}]}]}">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Information that describes the IMIX profiles in JSON string form, conforming to the JSON Schema for this command."/>
        <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
    </stc:property>

<!-- CATEGORY: Traffic -->

<!-- SAMPLE_JSON:
The following demonstrates the default imix configuration.

{
    "imixes": [
        {
            "name": "DefaultB",
            "table": [
                {
                    "weight": 7,
                    "fixedFrameLength": 64,
                    "frameLengthMode": "FIXED",
                    "maxFrameLength": 66,
                    "minFrameLength": 64
                },
                {
                    "weight": 4,
                    "fixedFrameLength": 594,
                    "frameLengthMode": "FIXED",
                    "maxFrameLength": 595,
                    "minFrameLength": 593
                },
                {
                    "weight": 1,
                    "fixedFrameLength": 1518,
                    "frameLengthMode": "FIXED",
                    "maxFrameLength": 1518,
                    "minFrameLength": 1517
                }
            ]
        }
    ]
}
-->
<!-- SAMPLE_JSON:
The following sample creates an iMix named CustomImix and tagged as ttImix. It consists of three frame lengths, two fixed and one random. Each frame length has a different weight, totaling up to 10.

{
    "imixes" : [
        {
            "name" : "CustomImix",
            "tag" : "ttImix",
            "table" : [
                {
                    "weight" : 5,
                    "fixedFrameLength" : 64,
                    "frameLengthMode" : "FIXED"
                },
                {
                    "weight" : 4,
                    "fixedFrameLength" : 594,
                    "frameLengthMode" : "FIXED"
                },
                {
                    "weight" : 1,
                    "frameLengthMode" : "RANDOM",
                    "maxFrameLength" : 1500,
                    "minFrameLength" : 1400
                }
            ]
        }
    ]
}

-->

</stc:class>


<stc:class name="CreateTrafficMixCommand"
           displayName="Create Traffic Mix Command"
           baseClass="spirent.methodology.CreateTemplateMixCommand"
           bllDirectInterface="true">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription"
        value="Creates a traffic mixture between tagged end points in an StmTrafficMix object."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>

    <!-- These all should be from the base class -->
    
    <stc:property category="input" name="MixInfo" displayName="Mix Info" type="string" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Information that describes an entire mix of traffic in JSON string form, conforming to the MixInfoJsonSchema."/>
        <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
    </stc:property>
    <stc:property category="input" name="MixTagName" displayName="Mix Container Tag Name" type="string" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
         value="The name of the tag used in tagging the StmTrafficMix object created by this command.  If empty, the mix's StmTemplateMix object will not be tagged."/>
    </stc:property>
    <stc:property category="input" name="AutoExpandTemplateMix" displayName="Automatically expand templates in the mix" type="bool" default="true">
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
       value="True expands the traffic mix before command completes. False will not expand traffic mix." />
    </stc:property>
    <stc:property category="state" name="GroupCommandTagInfo" displayName="Group Command Tag Info" type="string" default="" >
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
         value="A JSON formatted structure that contains the names of the tags used to refer to commands in this group. This is an intra-group property."/>
    </stc:property>

<!-- CATEGORY: Traffic -->

<!-- SAMPLE_JSON:
This sample includes components for a simple pair, a bidirectional pair, and a mesh configuration respectively. The Stream Blocks are bound to emulated devices with interfaces tagged as East_ttIpv4If and West_ttIpv4If. Use the CreateProtocolMixCommand to create such devices and tag the interfaces.

{
  "load": 200,
  "loadUnits": "FRAMES_PER_SECOND",
  "table": [
    {
      "baseTemplateFile": "Ipv4_Stream.xml",
      "weight": "25 %",
      "postExpandModify": [
        {
          "streamBlockExpand": {
            "endpointMapping": {
              "srcBindingTagList": [
                "East_ttIpv4If"
              ],
              "dstBindingTagList": [
                "West_ttIpv4If"
              ]
            }
          }
        }
      ]
    },
    {
      "baseTemplateFile": "Ipv4_Stream.xml",
      "weight": "100",
      "postExpandModify": [
        {
          "streamBlockExpand": {
            "endpointMapping": {
              "srcBindingTagList": [
                "East_ttIpv4If"
              ],
              "dstBindingTagList": [
                "West_ttIpv4If"
              ],
              "bidirectional": true
            }
          }
        }
      ]
    },
    {
      "baseTemplateFile": "MeshTemplate.xml",
      "weight": "25 %",
      "postExpandModify": [
        {
          "streamBlockExpand": {
            "endpointMapping": {
              "srcBindingTagList": [
                "East_ttIpv4If"
              ],
              "dstBindingTagList": [
                "East_ttIpv4If"
              ]
            }
          }
        }
      ]
    }
  ]
}
-->
<!-- SAMPLE_JSON:
This sample includes creating a raw streamblock and modifying the pdu property values in the FrameConfig.

{
  "load": 200,
  "loadUnits": "FRAMES_PER_SECOND",
  "table": [
    {
      "baseTemplateFile": "Ipv4_Stream.xml",
      "weight": "25 %",
      "modifyList": [
        {
          "operationList": [
            {
              "addObject": {
                "className": "RangeModifier",
                "parentTagName": "ttStreamBlock",
                "tagName": "ttRangeModifier"
              }
            },
            {
              "propertyValue": {
                "className": "StreamBlock",
                "tagName": "ttStreamBlock",
                "propertyValueList": {
                  "FrameConfig": "<frame><config><pdus><pdu name=\"eth1\" pdu=\"ethernet:EthernetII\"></pdu><pdu name=\"ip_1\" pdu=\"ipv4:IPv4\"><totalLength>20</totalLength><checksum>46547</checksum><sourceAddr>1.1.1.1</sourceAddr><destAddr>2.2.2.2</destAddr><gateway>3.3.3.3</gateway><tosDiffserv name=\"anon_4140\"><diffServ name=\"anon_49530\"><dscpHigh>2</dscpHigh><dscpLow>2</dscpLow><reserved>00</reserved></diffServ></tosDiffserv></pdu><pdu name=\"proto1\" pdu=\"udp:Udp\"><length>0</length></pdu></pdus></config></frame>"
                }
              }
            },
            {
              "pduModifier": {
                "templateElementTagName": "ttStreamBlock",
                "offsetReference": "ip_1.sourceAddr",
                "value": "1.1.1.10"
              }
            },
            {
              "pduModifier": {
                "templateElementTagName": "ttStreamBlock",
                "offsetReference": "ip_1.destAddr",
                "value": "1.1.2.10"
              }
            },
            {
              "pduModifier": {
                "templateElementTagName": "ttStreamBlock",
                "offsetReference": "ip_1.gateway",
                "value": "1.1.1.1"
              }
            }
          ]
        }
      ],
      "expand": {
        "targetTagList": [
          "LeftPort"
        ]
      }
    }
  ]
}
-->
<!-- SAMPLE_JSON:
This sample creates an Ethernet/Vlan/Vlan/Ipv4 raw streamblock with DSCP

{
  "load": 200,
  "loadUnits": "FRAMES_PER_SECOND",
  "table": [
    {
      "baseTemplateFile": "Ipv4_Stream.xml",
      "weight": "25 %",
      "modifyList": [
        {
          "operationList": [
            {
              "pduBuilder": {
                "pduData": {
                  "pdu_list": [
                    {
                      "enable": true,
                      "name": "eth1",
                      "pdu": "ethernet:EthernetII",
                      "element_type": "pdu",
                      "pdu_data": [
                        {
                          "enable": true,
                          "pdu_data": [
                            {
                              "property_data": {
                                "pri": "010",
                                "id": "11"
                              },
                              "enable": true,
                              "name": "Vlan",
                              "element_type": "Vlan"
                            },
                            {
                              "property_data": {
                                "pri": "111",
                                "id": "22"
                              },
                              "enable": true,
                              "name": "Vlan_1",
                              "element_type": "Vlan"
                            }
                          ],
                          "name": "anon_2696",
                          "element_type": "vlans"
                        }
                      ],
                      "property_data": {
                        "dstMac": "00:10:95:00:00:01",
                        "srcMac": "00:10:95:00:00:02"
                      }
                    },
                    {
                      "enable": true,
                      "name": "ip_1",
                      "pdu": "ipv4:IPv4",
                      "element_type": "pdu",
                      "pdu_data": [
                        {
                          "enable": true,
                          "pdu_data": [
                            {
                              "property_data": {
                                "dscpHigh": "1",
                                "dscpLow": "2",
                                "reserved": "00"
                              },
                              "enable": true,
                              "name": "anon_2701",
                              "element_type": "diffServ"
                            }
                          ],
                          "name": "anon_2700",
                          "element_type": "tosDiffserv"
                        }
                      ],
                      "property_data": {
                        "totalLength": "20",
                        "gateway": "1.0.0.3",
                        "sourceAddr": "1.0.0.1",
                        "destAddr": "1.0.0.2",
                        "checksum": "47298"
                      }
                    }
                  ]
                },
                "tagNameList": [
                  "ttStreamBlock"
                ]
              }
            }
          ]
        }
      ],
      "expand": {
        "targetTagList": [
          "LeftPort"
        ]
      }
    }
  ]
}
-->
</stc:class>



<stc:class name="ExpandTrafficMixCommand"
           displayName="Expand Traffic Mix Command"
           bllDirectInterface="true">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription" value="Expands the traffic mix template(s) into streamblocks and attaches the streamblocks to end points designated in the traffic mix configuration. The traffic mix is defined from an StmTemplateMix object, populated with the mix information from the CreateTrafficMixCommand."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>
    <stc:attribute type="core.RequireApplyToIL" value="false" internalType="bool" />
    <stc:attribute type="core.RequirePostApplyToIL" value="false" internalType="bool" />

    <stc:enumeration name="EnumLoadUnit">
      <stc:enum name="PERCENT_LINE_RATE"        value="0" displayName="Percent (%)" />
      <stc:enum name="FRAMES_PER_SECOND"        value="1" displayName="Frames/sec (fps)" />
      <stc:enum name="INTER_BURST_GAP"          value="2" displayName="Inter-Burst Gap (bytes)" />
      <stc:enum name="BITS_PER_SECOND"          value="3" displayName="bps" />
      <stc:enum name="KILOBITS_PER_SECOND"      value="4" displayName="Kbps" />
      <stc:enum name="MEGABITS_PER_SECOND"      value="5" displayName="Mbps" />
      <stc:enum name="L2_MEGABITS_PER_SECOND"   value="6" displayName="L2 Mbps" />
    </stc:enumeration>

    <!-- Base: input handle StmTemplateMix -->
    <!-- There appear to be problems with inheritence and file names.  Anyway, this parameter
    is supposed to come from the base class but is here until this problem is resolved -->
    <stc:property category="input" name="StmTemplateMix" displayName="XML Container object (StmTemplateMix)" type="handle" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Handle to an StmTemplate Mix container object that contains the traffic mix information. If empty, a tag name must be supplied to the TrafficMixTagName property."/>
    </stc:property>
    <stc:property category="input" name="TrafficMixTagName" displayName="Tag name for Traffic Mix" type="string" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Name of the tag that is attached to one or more StmTemplateMix's. Every StmTemplateMix object associated with the tag is expanded. If empty, a StmTemplateMix handle must be supplied to the StmTemplateMix property." />
    </stc:property>
    <stc:property category="input" name="Load" displayName="Load" type="double" default="10.0">
        <stc:attribute internalType="string" type="framework.PropertyDescription"
        value="The total traffic load distributed across each expanded traffic mix. The value of this property is strictly a numerical value. The units that this value is to be interpreted with is found in the LoadUnit property." />
    </stc:property>
    <stc:property category="input" name="LoadUnit" displayName="Load Unit"
                  type="u8" default="PERCENT_LINE_RATE">
      <stc:attribute internalType="string" type="framework.PropertyDescription" value="The units to be applied to the Load property."/>
      <stc:enumerationRef ref="EnumLoadUnit"/>
    </stc:property>
<!-- CATEGORY: Traffic -->
</stc:class>

<stc:class name="AllocateTrafficMixLoadCommand"
           displayName="Allocate Traffic Mix Load Command"
           bllDirectInterface="true">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription"
    value="Takes the load of a given mix and distributes it across the components of the mix, according to the JSON information found in the StmTemplateMix object for the traffic mix. Multiple StmTemplateMix objects can be processed by this command, but each will be processed independently as though it were the only mix to be handled by this command.\n\nThis command is typically called internally by the CreateTrafficMixCommand (when auto expand is enabled), or externally in the sequencer when changing of loads during iterative test loops is necessary."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>
    <stc:attribute type="core.RequireApplyToIL" value="false" internalType="bool" />
    <stc:attribute type="core.RequirePostApplyToIL" value="false" internalType="bool" />

    <!-- FIXME: This should come from ExpandTrafficMixCommand or even somewhere in L2L3 -->
    <!-- It is here (at least rather than from ExpandTrafficMixCommand) due to command loading order problems -->
    <stc:enumeration name="EnumLoadUnit">
      <stc:enum name="PERCENT_LINE_RATE"        value="0" displayName="Percent (%)" />
      <stc:enum name="FRAMES_PER_SECOND"        value="1" displayName="Frames/sec (fps)" />
      <stc:enum name="INTER_BURST_GAP"          value="2" displayName="Inter-Burst Gap (bytes)" />
      <stc:enum name="BITS_PER_SECOND"          value="3" displayName="bps" />
      <stc:enum name="KILOBITS_PER_SECOND"      value="4" displayName="Kbps" />
      <stc:enum name="MEGABITS_PER_SECOND"      value="5" displayName="Mbps" />
      <stc:enum name="L2_MEGABITS_PER_SECOND"   value="6" displayName="L2 Mbps" />
    </stc:enumeration>

    <stc:property category="input" name="StmTrafficMix" displayName="Traffic Mix" type="handle" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Handle to an StmTemplate Mix container object that contains the traffic mix information. If empty, a tag name must be supplied to the TrafficMixTagName property."/>
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="core.ValidHandleTypes" value="StmTrafficMix" />
    </stc:property>
    <stc:property category="input" name="TrafficMixTagName" displayName="Tag name for Traffic Mix" type="string" default="">
        <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription"
        value="Name of the tag that is attached to one or more StmTemplateMix's. Every StmTemplateMix object associated with the tag is expanded. If empty, a StmTemplateMix handle must be supplied to the StmTemplateMix property." />
    </stc:property>
    <stc:property category="input" name="Load" displayName="Load" type="double" default="10.0">
        <stc:attribute internalType="string" type="framework.PropertyDescription"
        value="The total traffic load distributed across each expanded traffic mix. The value of this property is strictly a numerical value. The units that this value is to be interpreted with is found in the LoadUnit property." />
    </stc:property>
    <stc:property category="input" name="LoadUnit" displayName="Load Unit"
                  type="u8" default="PERCENT_LINE_RATE">
      <stc:attribute internalType="string" type="framework.PropertyDescription" value="The units to be applied to the Load property."/>
      <stc:enumerationRef ref="EnumLoadUnit"/>
    </stc:property>
<!-- CATEGORY: Traffic -->
</stc:class>

<stc:class name="CreatePdusCommand"
           displayName="Create PDUs Command"
           bllDirectInterface="true"
           isInternal="false">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription" value="This command is used to create PDUs based on JSON input and overwrite the specified streamblocks frameconfig."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>
    <stc:attribute type="core.RequireApplyToIL" value="false" internalType="bool" />
    <stc:attribute type="core.RequirePostApplyToIL" value="false" internalType="bool" />

    <stc:property category="input" name="ObjectList" displayName="Object List" type="handle" default="0" minOccurs="0" maxOccurs="unbounded">
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of handles of objects whose streamblocks FrameConfigs will be modify. Notes: Existing FrameConfigs will be overwritten." />
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="core.ValidHandleTypes" value="Port,StreamBlock" />
    </stc:property>

    <stc:property category="input" name="TagNameList" displayName="Tag Name List" type="string" default="" minOccurs="0" maxOccurs="unbounded" >
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="List of tag names of the objects whose streamblocks FrameConfigs will be modify. Notes: Existing FrameConfigs will be overwritten." />
    </stc:property>

    <stc:property category="input" name="JsonFrame" displayName="JSON Frame" type="string" default="">
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="JSON string representation of PDUs that will be added to the streamblocks."/>
      <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
    </stc:property>

<!-- CATEGORY: Traffic -->

<!-- SAMPLE_JSON:
The following creates a frameconfig with EthII w/VLANs and IPv4 pdus.
{
  "pdu_list": [
    {
      "enable": true,
      "name": "eth1",
      "pdu": "ethernet:EthernetII",
      "element_type": "pdu",
      "pdu_data": [
        {
          "enable": true,
          "pdu_data": [
            {
              "property_data": {
                "pri": "010",
                "id": "11"
              },
              "enable": true,
              "name": "Vlan",
              "element_type": "Vlan"
            },
            {
              "property_data": {
                "pri": "111",
                "id": "22"
              },
              "enable": true,
              "name": "Vlan_1",
              "element_type": "Vlan"
            }
          ],
          "name": "anon_2696",
          "element_type": "vlans"
        }
      ],
      "property_data": {
        "dstMac": "00:10:95:00:00:01",
        "srcMac": "00:10:95:00:00:02"
      }
    },
    {
      "enable": true,
      "name": "ip_1",
      "pdu": "ipv4:IPv4",
      "element_type": "pdu",
      "pdu_data": [
        {
          "enable": true,
          "pdu_data": [
            {
              "property_data": {
                "dscpHigh": "1",
                "dscpLow": "2",
                "reserved": "00"
              },
              "enable": true,
              "name": "anon_2701",
              "element_type": "diffServ"
            }
          ],
          "name": "anon_2700",
          "element_type": "tosDiffserv"
        }
      ],
      "property_data": {
        "totalLength": "20",
        "gateway": "1.0.0.3",
        "sourceAddr": "1.0.0.1",
        "destAddr": "1.0.0.2",
        "checksum": "47298"
      }
    }
  ]
}
-->
</stc:class>

<stc:class name="ConvertFrameConfigToJsonCommand"
           displayName="Convert frame config to JSON command"
           bllDirectInterface="true"
           isInternal="false">
    <stc:attribute internalIsEnum="false" internalType="bool" name="none" type="core.Sequenceable" value="true"/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandDescription" value="This command is used to convert a frame config in xml string format to json format to be used with the CreatePdusCommand or BuildTemplatePdusCommand."/>
    <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.CommandCategory" value="Test Methodology//Traffic"/>
    <stc:attribute type="core.RequireApplyToIL" value="false" internalType="bool" />
    <stc:attribute type="core.RequirePostApplyToIL" value="false" internalType="bool" />

    <stc:property category="input" name="FrameConfigXml" displayName="Frame Config XML" type="string" default="">
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="FrameConfig in XML format to be converted to JSON" />
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="core.ValidHandleTypes" value="Port,StreamBlock" />
    </stc:property>

    <stc:property category="output" name="FrameConfigJson" displayName="Frame Config JSON" type="string" default="">
      <stc:attribute internalIsEnum="false" internalType="string" name="none" type="framework.PropertyDescription" value="JSON string representation of PDUs that will be added to the streamblocks."/>
      <stc:attribute type="framework.StringPropertyFormat" internalIsEnum="true" internalType="u8" value="JSON" />
    </stc:property>

<!-- CATEGORY: Traffic -->

</stc:class>

</stc:meta>
